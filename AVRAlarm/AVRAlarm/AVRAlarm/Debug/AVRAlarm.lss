
AVRAlarm.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         000065d4  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80008600  80008600  00008a00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       000006f4  80008800  80008800  00008c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .lalign       00000004  80008ef4  80008ef4  000092f4  2**0
                  ALLOC
  6 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  7 .data         00000508  00000008  80008ef8  00009408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          00000150  00000510  00000510  00000000  2**2
                  ALLOC
  9 .heap         0000e9a0  00000660  00000660  00000000  2**0
                  ALLOC
 10 .comment      00000030  00000000  00000000  00009910  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000a68  00000000  00000000  00009940  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubnames 0000115d  00000000  00000000  0000a3a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   000199a1  00000000  00000000  0000b505  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 00004953  00000000  00000000  00024ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   0000bdf7  00000000  00000000  000297f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001758  00000000  00000000  000355f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000033d7  00000000  00000000  00036d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc    00008c4a  00000000  00000000  0003a11f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_macinfo 0067fd23  00000000  00000000  00042d69  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 21 .debug_ranges 00000c50  00000000  00000000  006c2a90  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:

  .global _start
  .type _start, @function
_start:
  // Jump to the C runtime startup routine.
  lda.w   pc, _stext
80000000:	fe cf d4 f0 	sub	pc,pc,-11024

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
  rjmp    program_start

  .org  PROGRAM_START_OFFSET
program_start:
  // Jump to the C runtime startup routine.
  lda.w   pc, _stext
80002004:	fe cf f4 f4 	sub	pc,pc,-2828

Disassembly of section .text:

80002008 <dip204_select>:
80002008:	d4 01       	pushm	lr
8000200a:	30 2b       	mov	r11,2
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
8000200c:	fe 7c 28 00 	mov	r12,-55296
80002010:	f0 1f 00 02 	mcall	80002018 <dip204_select+0x10>
}
80002014:	d8 02       	popm	pc
80002016:	00 00       	add	r0,r0
80002018:	80 00       	ld.sh	r0,r0[0x0]
8000201a:	26 32       	sub	r2,99

8000201c <dip204_write_byte>:
 *
 *  \param  byte  Input. byte to write to the LCD (D7 .. D0)
 *
 */
static void dip204_write_byte(unsigned char byte)
{
8000201c:	eb cd 40 80 	pushm	r7,lr
  unsigned char reverse;

  switch (byte)
80002020:	f8 c8 ff f8 	sub	r8,r12,-8
80002024:	30 69       	mov	r9,6
80002026:	f2 08 18 00 	cp.b	r8,r9
8000202a:	e0 8b 00 0f 	brhi	80002048 <dip204_write_byte+0x2c>
8000202e:	30 19       	mov	r9,1
80002030:	f2 08 09 48 	lsl	r8,r9,r8
80002034:	e2 18 00 55 	andl	r8,0x55,COH
80002038:	c0 80       	breq	80002048 <dip204_write_byte+0x2c>
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, byte);
8000203a:	18 9b       	mov	r11,r12
8000203c:	fe 7c 28 00 	mov	r12,-55296
80002040:	f0 1f 00 0c 	mcall	80002070 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      break;
80002044:	e3 cd 80 80 	ldm	sp++,r7,pc
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002048:	5c 9c       	brev	r12
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
8000204a:	f8 07 16 18 	lsr	r7,r12,0x18
8000204e:	0e 9b       	mov	r11,r7
80002050:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002054:	fe 7c 28 00 	mov	r12,-55296
80002058:	f0 1f 00 06 	mcall	80002070 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
8000205c:	ee 0b 15 04 	lsl	r11,r7,0x4
80002060:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002064:	fe 7c 28 00 	mov	r12,-55296
80002068:	f0 1f 00 02 	mcall	80002070 <dip204_write_byte+0x54>
8000206c:	e3 cd 80 80 	ldm	sp++,r7,pc
80002070:	80 00       	ld.sh	r0,r0[0x0]
80002072:	27 62       	sub	r2,118

80002074 <dip204_read_byte>:
 *
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
80002074:	eb cd 40 c0 	pushm	r6-r7,lr
80002078:	20 1d       	sub	sp,4
8000207a:	18 96       	mov	r6,r12
  unsigned short reverse = 0x00;
8000207c:	fa c7 ff fc 	sub	r7,sp,-4
80002080:	30 08       	mov	r8,0
80002082:	0e e8       	st.h	--r7,r8

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_write(DIP204_SPI, 0x00);
80002084:	30 0b       	mov	r11,0
80002086:	fe 7c 28 00 	mov	r12,-55296
8000208a:	f0 1f 00 08 	mcall	800020a8 <dip204_read_byte+0x34>
  Assert( SPI_OK==spi_status );
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_read(DIP204_SPI, &reverse);
8000208e:	0e 9b       	mov	r11,r7
80002090:	fe 7c 28 00 	mov	r12,-55296
80002094:	f0 1f 00 06 	mcall	800020ac <dip204_read_byte+0x38>
  Assert( SPI_OK==spi_status );
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002098:	1b b8       	ld.ub	r8,sp[0x3]
8000209a:	5c 98       	brev	r8
8000209c:	b9 88       	lsr	r8,0x18
8000209e:	ac 88       	st.b	r6[0x0],r8
}
800020a0:	2f fd       	sub	sp,-4
800020a2:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800020a6:	00 00       	add	r0,r0
800020a8:	80 00       	ld.sh	r0,r0[0x0]
800020aa:	27 62       	sub	r2,118
800020ac:	80 00       	ld.sh	r0,r0[0x0]
800020ae:	27 7e       	sub	lr,119

800020b0 <dip204_wait_busy>:

/*! \brief function to wait for LCD becomes not busy
 *
 */
static void dip204_wait_busy(void)
{
800020b0:	eb cd 40 c0 	pushm	r6-r7,lr
800020b4:	20 1d       	sub	sp,4
  unsigned char status = 0x00;
800020b6:	fa c7 ff fc 	sub	r7,sp,-4
800020ba:	30 08       	mov	r8,0
800020bc:	0e f8       	st.b	--r7,r8

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
800020be:	e0 6c 00 fc 	mov	r12,252
800020c2:	f0 1f 00 07 	mcall	800020dc <dip204_wait_busy+0x2c>
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
800020c6:	30 06       	mov	r6,0

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
800020c8:	0e 9c       	mov	r12,r7
800020ca:	f0 1f 00 06 	mcall	800020e0 <dip204_wait_busy+0x30>
  /* keep D7 to know status */
  }while (status & 0x80);
800020ce:	1b b8       	ld.ub	r8,sp[0x3]
800020d0:	ec 08 18 00 	cp.b	r8,r6
800020d4:	cf a5       	brlt	800020c8 <dip204_wait_busy+0x18>
}
800020d6:	2f fd       	sub	sp,-4
800020d8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800020dc:	80 00       	ld.sh	r0,r0[0x0]
800020de:	20 1c       	sub	r12,1
800020e0:	80 00       	ld.sh	r0,r0[0x0]
800020e2:	20 74       	sub	r4,7

800020e4 <dip204_unselect>:

/*! \brief function to unselect the LCD
 *
 */
static void dip204_unselect(void)
{
800020e4:	d4 01       	pushm	lr
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
800020e6:	30 2b       	mov	r11,2
800020e8:	fe 7c 28 00 	mov	r12,-55296
800020ec:	f0 1f 00 02 	mcall	800020f4 <dip204_unselect+0x10>
  Assert( SPI_OK==spi_status );
}
800020f0:	d8 02       	popm	pc
800020f2:	00 00       	add	r0,r0
800020f4:	80 00       	ld.sh	r0,r0[0x0]
800020f6:	26 7e       	sub	lr,103

800020f8 <dip204_printf_string>:
  dip204_unselect();
}


void dip204_printf_string(const char *format, ...)
{
800020f8:	d4 21       	pushm	r4-r7,lr
800020fa:	20 6d       	sub	sp,24
  va_list arg;
  char string[21];
  unsigned char i=0;

  va_start(arg, format);
  i = vsprintf(string, format, arg);
800020fc:	fa ca ff d4 	sub	r10,sp,-44
80002100:	18 9b       	mov	r11,r12
80002102:	1a 9c       	mov	r12,sp
80002104:	f0 1f 00 1e 	mcall	8000217c <dip204_printf_string+0x84>
80002108:	5c 5c       	castu.b	r12
  while (i < sizeof(string) - 1) string[i++] = '\0';
8000210a:	31 38       	mov	r8,19
8000210c:	f0 0c 18 00 	cp.b	r12,r8
80002110:	e0 8b 00 0e 	brhi	8000212c <dip204_printf_string+0x34>
80002114:	30 0a       	mov	r10,0
80002116:	31 49       	mov	r9,20
80002118:	fa c8 ff e8 	sub	r8,sp,-24
8000211c:	18 08       	add	r8,r12
8000211e:	f1 6a ff e8 	st.b	r8[-24],r10
80002122:	2f fc       	sub	r12,-1
80002124:	5c 5c       	castu.b	r12
80002126:	f2 0c 18 00 	cp.b	r12,r9
8000212a:	cf 71       	brne	80002118 <dip204_printf_string+0x20>
  va_end(arg);
  dip204_select();
8000212c:	f0 1f 00 15 	mcall	80002180 <dip204_printf_string+0x88>
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002130:	30 08       	mov	r8,0
80002132:	1b 89       	ld.ub	r9,sp[0x0]
80002134:	f0 09 18 00 	cp.b	r9,r8
80002138:	c1 e0       	breq	80002174 <dip204_printf_string+0x7c>
8000213a:	30 06       	mov	r6,0
8000213c:	0c 97       	mov	r7,r6
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
8000213e:	e0 64 00 fa 	mov	r4,250
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002142:	10 95       	mov	r5,r8
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002144:	08 9c       	mov	r12,r4
80002146:	f0 1f 00 10 	mcall	80002184 <dip204_printf_string+0x8c>
    /* Send byte */
    dip204_write_byte(string[i]);
8000214a:	fa c8 ff e8 	sub	r8,sp,-24
8000214e:	f0 06 00 06 	add	r6,r8,r6
80002152:	ed 3c ff e8 	ld.ub	r12,r6[-24]
80002156:	f0 1f 00 0c 	mcall	80002184 <dip204_printf_string+0x8c>
    /* go to next char */
    i++;
8000215a:	2f f7       	sub	r7,-1
8000215c:	5c 57       	castu.b	r7
    dip204_wait_busy();
8000215e:	f0 1f 00 0b 	mcall	80002188 <dip204_printf_string+0x90>
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002162:	0e 96       	mov	r6,r7
80002164:	fa c8 ff e8 	sub	r8,sp,-24
80002168:	0e 08       	add	r8,r7
8000216a:	f1 38 ff e8 	ld.ub	r8,r8[-24]
8000216e:	ea 08 18 00 	cp.b	r8,r5
80002172:	ce 91       	brne	80002144 <dip204_printf_string+0x4c>
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
80002174:	f0 1f 00 06 	mcall	8000218c <dip204_printf_string+0x94>
}
80002178:	2f ad       	sub	sp,-24
8000217a:	d8 22       	popm	r4-r7,pc
8000217c:	80 00       	ld.sh	r0,r0[0x0]
8000217e:	2e 74       	sub	r4,-25
80002180:	80 00       	ld.sh	r0,r0[0x0]
80002182:	20 08       	sub	r8,0
80002184:	80 00       	ld.sh	r0,r0[0x0]
80002186:	20 1c       	sub	r12,1
80002188:	80 00       	ld.sh	r0,r0[0x0]
8000218a:	20 b0       	sub	r0,11
8000218c:	80 00       	ld.sh	r0,r0[0x0]
8000218e:	20 e4       	sub	r4,14

80002190 <dip204_write_string>:
  dip204_unselect();
}


void dip204_write_string(const char *string)
{
80002190:	eb cd 40 f8 	pushm	r3-r7,lr
80002194:	18 94       	mov	r4,r12
  unsigned char i=0;

  dip204_select();
80002196:	f0 1f 00 11 	mcall	800021d8 <dip204_write_string+0x48>
  /* for all chars in string */
  while(string[i]!=0)
8000219a:	09 89       	ld.ub	r9,r4[0x0]
8000219c:	30 08       	mov	r8,0
8000219e:	f0 09 18 00 	cp.b	r9,r8
800021a2:	c1 60       	breq	800021ce <dip204_write_string+0x3e>
800021a4:	08 96       	mov	r6,r4
800021a6:	30 07       	mov	r7,0
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
800021a8:	e0 63 00 fa 	mov	r3,250
{
  unsigned char i=0;

  dip204_select();
  /* for all chars in string */
  while(string[i]!=0)
800021ac:	10 95       	mov	r5,r8
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
800021ae:	06 9c       	mov	r12,r3
800021b0:	f0 1f 00 0b 	mcall	800021dc <dip204_write_string+0x4c>
    /* Send byte */
    dip204_write_byte(string[i]);
800021b4:	0d 8c       	ld.ub	r12,r6[0x0]
800021b6:	f0 1f 00 0a 	mcall	800021dc <dip204_write_string+0x4c>
    /* go to next char */
    i++;
800021ba:	2f f7       	sub	r7,-1
800021bc:	5c 57       	castu.b	r7
    dip204_wait_busy();
800021be:	f0 1f 00 09 	mcall	800021e0 <dip204_write_string+0x50>
{
  unsigned char i=0;

  dip204_select();
  /* for all chars in string */
  while(string[i]!=0)
800021c2:	e8 07 00 06 	add	r6,r4,r7
800021c6:	0d 88       	ld.ub	r8,r6[0x0]
800021c8:	ea 08 18 00 	cp.b	r8,r5
800021cc:	cf 11       	brne	800021ae <dip204_write_string+0x1e>
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
800021ce:	f0 1f 00 06 	mcall	800021e4 <dip204_write_string+0x54>
}
800021d2:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
800021d6:	00 00       	add	r0,r0
800021d8:	80 00       	ld.sh	r0,r0[0x0]
800021da:	20 08       	sub	r8,0
800021dc:	80 00       	ld.sh	r0,r0[0x0]
800021de:	20 1c       	sub	r12,1
800021e0:	80 00       	ld.sh	r0,r0[0x0]
800021e2:	20 b0       	sub	r0,11
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	20 e4       	sub	r4,14

800021e8 <dip204_set_cursor_position>:
  dip204_set_cursor_position(column, line);
}


void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
800021e8:	eb cd 40 c0 	pushm	r6-r7,lr
800021ec:	18 96       	mov	r6,r12
800021ee:	16 97       	mov	r7,r11
  unsigned char address = 0;

  dip204_select();
800021f0:	f0 1f 00 11 	mcall	80002234 <dip204_set_cursor_position+0x4c>
  if ((column <= 20) && (line <= 4))
800021f4:	31 48       	mov	r8,20
800021f6:	f0 06 18 00 	cp.b	r6,r8
800021fa:	5f 89       	srls	r9
800021fc:	30 48       	mov	r8,4
800021fe:	f0 07 18 00 	cp.b	r7,r8
80002202:	5f 88       	srls	r8
80002204:	f3 e8 00 08 	and	r8,r9,r8
80002208:	c0 31       	brne	8000220e <dip204_set_cursor_position+0x26>
8000220a:	30 06       	mov	r6,0
8000220c:	c0 68       	rjmp	80002218 <dip204_set_cursor_position+0x30>
  {
    /* Calculate DDRAM address from line and row values */
    address = ( (line-1) * 32 ) + ( column-1 ) + 128;
8000220e:	28 16       	sub	r6,-127
80002210:	20 17       	sub	r7,1
80002212:	a5 77       	lsl	r7,0x5
80002214:	0e 06       	add	r6,r7
80002216:	5c 56       	castu.b	r6
  }
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002218:	e0 6c 00 f8 	mov	r12,248
8000221c:	f0 1f 00 07 	mcall	80002238 <dip204_set_cursor_position+0x50>
  /* Send Address lower Nibble */
  dip204_write_byte(address);
80002220:	0c 9c       	mov	r12,r6
80002222:	f0 1f 00 06 	mcall	80002238 <dip204_set_cursor_position+0x50>
  dip204_wait_busy();
80002226:	f0 1f 00 06 	mcall	8000223c <dip204_set_cursor_position+0x54>
  dip204_unselect();
8000222a:	f0 1f 00 06 	mcall	80002240 <dip204_set_cursor_position+0x58>
}
8000222e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002232:	00 00       	add	r0,r0
80002234:	80 00       	ld.sh	r0,r0[0x0]
80002236:	20 08       	sub	r8,0
80002238:	80 00       	ld.sh	r0,r0[0x0]
8000223a:	20 1c       	sub	r12,1
8000223c:	80 00       	ld.sh	r0,r0[0x0]
8000223e:	20 b0       	sub	r0,11
80002240:	80 00       	ld.sh	r0,r0[0x0]
80002242:	20 e4       	sub	r4,14

80002244 <dip204_write_data>:
  dip204_unselect();
}


void dip204_write_data(unsigned char data)
{
80002244:	eb cd 40 80 	pushm	r7,lr
80002248:	18 97       	mov	r7,r12
  dip204_select();
8000224a:	f0 1f 00 08 	mcall	80002268 <dip204_write_data+0x24>
  /* Send Write Data Start-Byte */
  dip204_write_byte(DIP204_WRITE_DATA);
8000224e:	e0 6c 00 fa 	mov	r12,250
80002252:	f0 1f 00 07 	mcall	8000226c <dip204_write_data+0x28>
  /* send data */
  dip204_write_byte(data);
80002256:	0e 9c       	mov	r12,r7
80002258:	f0 1f 00 05 	mcall	8000226c <dip204_write_data+0x28>
  dip204_wait_busy();
8000225c:	f0 1f 00 05 	mcall	80002270 <dip204_write_data+0x2c>
  dip204_unselect();
80002260:	f0 1f 00 05 	mcall	80002274 <dip204_write_data+0x30>
}
80002264:	e3 cd 80 80 	ldm	sp++,r7,pc
80002268:	80 00       	ld.sh	r0,r0[0x0]
8000226a:	20 08       	sub	r8,0
8000226c:	80 00       	ld.sh	r0,r0[0x0]
8000226e:	20 1c       	sub	r12,1
80002270:	80 00       	ld.sh	r0,r0[0x0]
80002272:	20 b0       	sub	r0,11
80002274:	80 00       	ld.sh	r0,r0[0x0]
80002276:	20 e4       	sub	r4,14

80002278 <dip204_hide_cursor>:
  dip204_unselect();
}


void dip204_hide_cursor(void)
{
80002278:	d4 01       	pushm	lr
  /* select the LCD chip */
  dip204_select();
8000227a:	f0 1f 00 08 	mcall	80002298 <dip204_hide_cursor+0x20>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
8000227e:	e0 6c 00 f8 	mov	r12,248
80002282:	f0 1f 00 07 	mcall	8000229c <dip204_hide_cursor+0x24>
  /* Send "Display On Command: Display On, Cursor On, Blink On" */
  dip204_write_byte(0x0C);
80002286:	30 cc       	mov	r12,12
80002288:	f0 1f 00 05 	mcall	8000229c <dip204_hide_cursor+0x24>
  dip204_wait_busy();
8000228c:	f0 1f 00 05 	mcall	800022a0 <dip204_hide_cursor+0x28>
  /* unselect chip */
  dip204_unselect();
80002290:	f0 1f 00 05 	mcall	800022a4 <dip204_hide_cursor+0x2c>
}
80002294:	d8 02       	popm	pc
80002296:	00 00       	add	r0,r0
80002298:	80 00       	ld.sh	r0,r0[0x0]
8000229a:	20 08       	sub	r8,0
8000229c:	80 00       	ld.sh	r0,r0[0x0]
8000229e:	20 1c       	sub	r12,1
800022a0:	80 00       	ld.sh	r0,r0[0x0]
800022a2:	20 b0       	sub	r0,11
800022a4:	80 00       	ld.sh	r0,r0[0x0]
800022a6:	20 e4       	sub	r4,14

800022a8 <dip204_clear_display>:
  dip204_unselect();
}


void dip204_clear_display(void)
{
800022a8:	d4 01       	pushm	lr
  dip204_select();
800022aa:	f0 1f 00 12 	mcall	800022f0 <dip204_clear_display+0x48>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
800022ae:	e0 6c 00 f8 	mov	r12,248
800022b2:	f0 1f 00 11 	mcall	800022f4 <dip204_clear_display+0x4c>
  /* Send Display Clear Command */
  dip204_write_byte(0x01);
800022b6:	30 1c       	mov	r12,1
800022b8:	f0 1f 00 0f 	mcall	800022f4 <dip204_clear_display+0x4c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800022bc:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800022c0:	f0 ca fe 33 	sub	r10,r8,-461
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800022c4:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800022c8:	14 38       	cp.w	r8,r10
800022ca:	e0 88 00 08 	brls	800022da <dip204_clear_display+0x32>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800022ce:	12 38       	cp.w	r8,r9
800022d0:	fe 98 ff fa 	brls	800022c4 <dip204_clear_display+0x1c>
800022d4:	12 3a       	cp.w	r10,r9
800022d6:	c0 73       	brcs	800022e4 <dip204_clear_display+0x3c>
800022d8:	cf 6b       	rjmp	800022c4 <dip204_clear_display+0x1c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800022da:	12 38       	cp.w	r8,r9
800022dc:	e0 8b 00 04 	brhi	800022e4 <dip204_clear_display+0x3c>
800022e0:	12 3a       	cp.w	r10,r9
800022e2:	cf 12       	brcc	800022c4 <dip204_clear_display+0x1c>
  /* Wait for command execution */
  delay_ms(4);
  dip204_wait_busy();
800022e4:	f0 1f 00 05 	mcall	800022f8 <dip204_clear_display+0x50>
  dip204_unselect();
800022e8:	f0 1f 00 05 	mcall	800022fc <dip204_clear_display+0x54>
}
800022ec:	d8 02       	popm	pc
800022ee:	00 00       	add	r0,r0
800022f0:	80 00       	ld.sh	r0,r0[0x0]
800022f2:	20 08       	sub	r8,0
800022f4:	80 00       	ld.sh	r0,r0[0x0]
800022f6:	20 1c       	sub	r12,1
800022f8:	80 00       	ld.sh	r0,r0[0x0]
800022fa:	20 b0       	sub	r0,11
800022fc:	80 00       	ld.sh	r0,r0[0x0]
800022fe:	20 e4       	sub	r4,14

80002300 <dip204_init>:


/****************************** global functions *****************************/

void dip204_init(backlight_options option, bool backlight_on)
{
80002300:	eb cd 40 80 	pushm	r7,lr
80002304:	20 4d       	sub	sp,16
80002306:	16 97       	mov	r7,r11
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
80002308:	58 1c       	cp.w	r12,1
8000230a:	c3 01       	brne	8000236a <dip204_init+0x6a>
  {
    channel_id = DIP204_PWM_CHANNEL;
8000230c:	30 69       	mov	r9,6
8000230e:	4f 88       	lddpc	r8,800024ec <dip204_init+0x1ec>
80002310:	91 09       	st.w	r8[0x0],r9
    gpio_enable_module_pin(DIP204_PWM_PIN, DIP204_PWM_FUNCTION);
80002312:	30 2b       	mov	r11,2
80002314:	33 2c       	mov	r12,50
80002316:	f0 1f 00 77 	mcall	800024f0 <dip204_init+0x1f0>

    // PWM controller configuration
    pwm_opt.diva=0;
8000231a:	30 08       	mov	r8,0
8000231c:	50 18       	stdsp	sp[0x4],r8
    pwm_opt.divb=0;
8000231e:	50 08       	stdsp	sp[0x0],r8
    pwm_opt.prea=0;
80002320:	50 38       	stdsp	sp[0xc],r8
    pwm_opt.preb=0;
80002322:	50 28       	stdsp	sp[0x8],r8

    pwm_init(&pwm_opt);
80002324:	1a 9c       	mov	r12,sp
80002326:	f0 1f 00 74 	mcall	800024f4 <dip204_init+0x1f4>
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
8000232a:	58 07       	cp.w	r7,0
8000232c:	f9 b7 01 31 	movne	r7,49
80002330:	f9 b7 00 01 	moveq	r7,1
80002334:	4f 18       	lddpc	r8,800024f8 <dip204_init+0x1f8>
80002336:	b0 07       	st.h	r8[0x0],r7
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
80002338:	4f 1b       	lddpc	r11,800024fc <dip204_init+0x1fc>
8000233a:	76 08       	ld.w	r8,r11[0x0]
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
8000233c:	e0 18 fc ff 	andl	r8,0xfcff
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002340:	ab a8       	sbr	r8,0xa
80002342:	30 89       	mov	r9,8
80002344:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
80002348:	97 08       	st.w	r11[0x0],r8
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
8000234a:	97 17       	st.w	r11[0x4],r7
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
8000234c:	33 28       	mov	r8,50
8000234e:	97 28       	st.w	r11[0x8],r8
    pwm_channel.cupd = 0;  // channel update is not used here.
80002350:	30 08       	mov	r8,0
80002352:	97 48       	st.w	r11[0x10],r8

    pwm_channel_init(channel_id, &pwm_channel);
80002354:	4e 67       	lddpc	r7,800024ec <dip204_init+0x1ec>
80002356:	6e 0c       	ld.w	r12,r7[0x0]
80002358:	f0 1f 00 6a 	mcall	80002500 <dip204_init+0x200>
    // start PWM
    pwm_start_channels(1 << channel_id);
8000235c:	6e 08       	ld.w	r8,r7[0x0]
8000235e:	30 1c       	mov	r12,1
80002360:	f8 08 09 4c 	lsl	r12,r12,r8
80002364:	f0 1f 00 68 	mcall	80002504 <dip204_init+0x204>
80002368:	c0 a8       	rjmp	8000237c <dip204_init+0x7c>
  }
  else
  {
    if (backlight_on)
8000236a:	58 0b       	cp.w	r11,0
8000236c:	c0 50       	breq	80002376 <dip204_init+0x76>
    {
      gpio_clr_gpio_pin(DIP204_BACKLIGHT_PIN);
8000236e:	33 2c       	mov	r12,50
80002370:	f0 1f 00 66 	mcall	80002508 <dip204_init+0x208>
80002374:	c0 48       	rjmp	8000237c <dip204_init+0x7c>
    }
    else
    {
      gpio_set_gpio_pin(DIP204_BACKLIGHT_PIN);
80002376:	33 2c       	mov	r12,50
80002378:	f0 1f 00 65 	mcall	8000250c <dip204_init+0x20c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
8000237c:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002380:	f0 ca f7 00 	sub	r10,r8,-2304
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002384:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002388:	14 38       	cp.w	r8,r10
8000238a:	e0 88 00 08 	brls	8000239a <dip204_init+0x9a>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000238e:	12 38       	cp.w	r8,r9
80002390:	fe 98 ff fa 	brls	80002384 <dip204_init+0x84>
80002394:	12 3a       	cp.w	r10,r9
80002396:	c6 e3       	brcs	80002472 <dip204_init+0x172>
80002398:	cf 6b       	rjmp	80002384 <dip204_init+0x84>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000239a:	12 38       	cp.w	r8,r9
8000239c:	e0 8b 00 6b 	brhi	80002472 <dip204_init+0x172>
800023a0:	12 3a       	cp.w	r10,r9
800023a2:	c6 83       	brcs	80002472 <dip204_init+0x172>
800023a4:	cf 0b       	rjmp	80002384 <dip204_init+0x84>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800023a6:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800023aa:	14 38       	cp.w	r8,r10
800023ac:	e0 88 00 08 	brls	800023bc <dip204_init+0xbc>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800023b0:	12 38       	cp.w	r8,r9
800023b2:	fe 98 ff fa 	brls	800023a6 <dip204_init+0xa6>
800023b6:	12 3a       	cp.w	r10,r9
800023b8:	c6 b3       	brcs	8000248e <dip204_init+0x18e>
800023ba:	cf 6b       	rjmp	800023a6 <dip204_init+0xa6>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800023bc:	12 38       	cp.w	r8,r9
800023be:	e0 8b 00 68 	brhi	8000248e <dip204_init+0x18e>
800023c2:	12 3a       	cp.w	r10,r9
800023c4:	c6 53       	brcs	8000248e <dip204_init+0x18e>
800023c6:	cf 0b       	rjmp	800023a6 <dip204_init+0xa6>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800023c8:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800023cc:	14 38       	cp.w	r8,r10
800023ce:	e0 88 00 08 	brls	800023de <dip204_init+0xde>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800023d2:	12 38       	cp.w	r8,r9
800023d4:	fe 98 ff fa 	brls	800023c8 <dip204_init+0xc8>
800023d8:	12 3a       	cp.w	r10,r9
800023da:	c6 23       	brcs	8000249e <dip204_init+0x19e>
800023dc:	cf 6b       	rjmp	800023c8 <dip204_init+0xc8>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800023de:	12 38       	cp.w	r8,r9
800023e0:	e0 8b 00 5f 	brhi	8000249e <dip204_init+0x19e>
800023e4:	12 3a       	cp.w	r10,r9
800023e6:	c5 c3       	brcs	8000249e <dip204_init+0x19e>
800023e8:	cf 0b       	rjmp	800023c8 <dip204_init+0xc8>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800023ea:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800023ee:	14 38       	cp.w	r8,r10
800023f0:	e0 88 00 08 	brls	80002400 <dip204_init+0x100>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800023f4:	12 38       	cp.w	r8,r9
800023f6:	fe 98 ff fa 	brls	800023ea <dip204_init+0xea>
800023fa:	12 3a       	cp.w	r10,r9
800023fc:	c5 93       	brcs	800024ae <dip204_init+0x1ae>
800023fe:	cf 6b       	rjmp	800023ea <dip204_init+0xea>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002400:	12 38       	cp.w	r8,r9
80002402:	e0 8b 00 56 	brhi	800024ae <dip204_init+0x1ae>
80002406:	12 3a       	cp.w	r10,r9
80002408:	c5 33       	brcs	800024ae <dip204_init+0x1ae>
8000240a:	cf 0b       	rjmp	800023ea <dip204_init+0xea>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000240c:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002410:	14 38       	cp.w	r8,r10
80002412:	e0 88 00 08 	brls	80002422 <dip204_init+0x122>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002416:	12 38       	cp.w	r8,r9
80002418:	fe 98 ff fa 	brls	8000240c <dip204_init+0x10c>
8000241c:	12 3a       	cp.w	r10,r9
8000241e:	c5 03       	brcs	800024be <dip204_init+0x1be>
80002420:	cf 6b       	rjmp	8000240c <dip204_init+0x10c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002422:	12 38       	cp.w	r8,r9
80002424:	e0 8b 00 4d 	brhi	800024be <dip204_init+0x1be>
80002428:	12 3a       	cp.w	r10,r9
8000242a:	c4 a3       	brcs	800024be <dip204_init+0x1be>
8000242c:	cf 0b       	rjmp	8000240c <dip204_init+0x10c>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000242e:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002432:	14 38       	cp.w	r8,r10
80002434:	e0 88 00 08 	brls	80002444 <dip204_init+0x144>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002438:	12 38       	cp.w	r8,r9
8000243a:	fe 98 ff fa 	brls	8000242e <dip204_init+0x12e>
8000243e:	12 3a       	cp.w	r10,r9
80002440:	c4 73       	brcs	800024ce <dip204_init+0x1ce>
80002442:	cf 6b       	rjmp	8000242e <dip204_init+0x12e>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002444:	12 38       	cp.w	r8,r9
80002446:	e0 8b 00 44 	brhi	800024ce <dip204_init+0x1ce>
8000244a:	12 3a       	cp.w	r10,r9
8000244c:	c4 13       	brcs	800024ce <dip204_init+0x1ce>
8000244e:	cf 0b       	rjmp	8000242e <dip204_init+0x12e>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002450:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002454:	14 38       	cp.w	r8,r10
80002456:	e0 88 00 08 	brls	80002466 <dip204_init+0x166>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000245a:	12 38       	cp.w	r8,r9
8000245c:	fe 98 ff fa 	brls	80002450 <dip204_init+0x150>
80002460:	12 3a       	cp.w	r10,r9
80002462:	c3 e3       	brcs	800024de <dip204_init+0x1de>
80002464:	cf 6b       	rjmp	80002450 <dip204_init+0x150>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002466:	12 38       	cp.w	r8,r9
80002468:	e0 8b 00 3b 	brhi	800024de <dip204_init+0x1de>
8000246c:	12 3a       	cp.w	r10,r9
8000246e:	c3 83       	brcs	800024de <dip204_init+0x1de>
80002470:	cf 0b       	rjmp	80002450 <dip204_init+0x150>
    }
  }
  // delay for power on
  delay_ms(20);
  // select the LCD chip
  dip204_select();
80002472:	f0 1f 00 28 	mcall	80002510 <dip204_init+0x210>
  // Send Command Start Byte
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002476:	e0 6c 00 f8 	mov	r12,248
8000247a:	f0 1f 00 27 	mcall	80002514 <dip204_init+0x214>
  // Send "extended Function Set" Command  (RE=1)
  dip204_write_byte(0x34);
8000247e:	33 4c       	mov	r12,52
80002480:	f0 1f 00 25 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002484:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002488:	f0 ca ff 8c 	sub	r10,r8,-116
8000248c:	c8 db       	rjmp	800023a6 <dip204_init+0xa6>
  // Wait for command execution
  delay_ms(1);
  // Send "Enter 4-Line Mode" Command
  dip204_write_byte(0x09);
8000248e:	30 9c       	mov	r12,9
80002490:	f0 1f 00 21 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002494:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002498:	f0 ca ff 8c 	sub	r10,r8,-116
8000249c:	c9 6b       	rjmp	800023c8 <dip204_init+0xc8>
  // Wait for command execution
  delay_ms(1);
  // Send "Function Set" Command (RE=0)
  dip204_write_byte(0x30);
8000249e:	33 0c       	mov	r12,48
800024a0:	f0 1f 00 1d 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800024a4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800024a8:	f0 ca ff 8c 	sub	r10,r8,-116
800024ac:	c9 fb       	rjmp	800023ea <dip204_init+0xea>
  // Wait for command execution
  delay_ms(1);
  // Send "Display On Command: Display On, Cursor On, Blink On"
  dip204_write_byte(0x0F);
800024ae:	30 fc       	mov	r12,15
800024b0:	f0 1f 00 19 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800024b4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800024b8:	f0 ca ff 8c 	sub	r10,r8,-116
800024bc:	ca 8b       	rjmp	8000240c <dip204_init+0x10c>
  // Wait for command execution
  delay_ms(1);
  // Send "Display Clear" Command
  dip204_write_byte(0x01);
800024be:	30 1c       	mov	r12,1
800024c0:	f0 1f 00 15 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800024c4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800024c8:	f0 ca fd c0 	sub	r10,r8,-576
800024cc:	cb 1b       	rjmp	8000242e <dip204_init+0x12e>
  // Wait for command execution
  delay_ms(5);
  // Send "Entry Mode Set Command: Increment Mode, Entire Shift off"
  dip204_write_byte(0x06);
800024ce:	30 6c       	mov	r12,6
800024d0:	f0 1f 00 11 	mcall	80002514 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800024d4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800024d8:	f0 ca ff 8c 	sub	r10,r8,-116
800024dc:	cb ab       	rjmp	80002450 <dip204_init+0x150>
  // Wait for command execution
  delay_ms(1);
  dip204_wait_busy();
800024de:	f0 1f 00 0f 	mcall	80002518 <dip204_init+0x218>
  // unselect chip
  dip204_unselect();
800024e2:	f0 1f 00 0f 	mcall	8000251c <dip204_init+0x21c>
}
800024e6:	2f cd       	sub	sp,-16
800024e8:	e3 cd 80 80 	ldm	sp++,r7,pc
800024ec:	00 00       	add	r0,r0
800024ee:	00 08       	add	r8,r0
800024f0:	80 00       	ld.sh	r0,r0[0x0]
800024f2:	28 70       	sub	r0,-121
800024f4:	80 00       	ld.sh	r0,r0[0x0]
800024f6:	25 68       	sub	r8,86
800024f8:	00 00       	add	r0,r0
800024fa:	05 30       	ld.ub	r0,r2++
800024fc:	00 00       	add	r0,r0
800024fe:	05 10       	ld.sh	r0,r2++
80002500:	80 00       	ld.sh	r0,r0[0x0]
80002502:	25 20       	sub	r0,82
80002504:	80 00       	ld.sh	r0,r0[0x0]
80002506:	25 56       	sub	r6,85
80002508:	80 00       	ld.sh	r0,r0[0x0]
8000250a:	29 c8       	sub	r8,-100
8000250c:	80 00       	ld.sh	r0,r0[0x0]
8000250e:	29 ac       	sub	r12,-102
80002510:	80 00       	ld.sh	r0,r0[0x0]
80002512:	20 08       	sub	r8,0
80002514:	80 00       	ld.sh	r0,r0[0x0]
80002516:	20 1c       	sub	r12,1
80002518:	80 00       	ld.sh	r0,r0[0x0]
8000251a:	20 b0       	sub	r0,11
8000251c:	80 00       	ld.sh	r0,r0[0x0]
8000251e:	20 e4       	sub	r4,14

80002520 <pwm_channel_init>:

int pwm_channel_init( unsigned int channel_id, const avr32_pwm_channel_t *pwm_channel)
{
  volatile avr32_pwm_t *pwm = &AVR32_PWM;

  if (pwm_channel == 0) // Null pointer.
80002520:	58 0b       	cp.w	r11,0
80002522:	c1 90       	breq	80002554 <pwm_channel_init+0x34>
    return PWM_INVALID_ARGUMENT;
  if (channel_id > AVR32_PWM_LINES_MSB) // Control input values.
80002524:	58 6c       	cp.w	r12,6
80002526:	e0 8b 00 17 	brhi	80002554 <pwm_channel_init+0x34>
    return PWM_INVALID_INPUT;

  pwm->channel[channel_id].cmr= pwm_channel->cmr;   // Channel mode.
8000252a:	76 0a       	ld.w	r10,r11[0x0]
8000252c:	fe 78 30 00 	mov	r8,-53248
80002530:	f8 c9 ff f0 	sub	r9,r12,-16
80002534:	a5 79       	lsl	r9,0x5
80002536:	f0 09 00 09 	add	r9,r8,r9
8000253a:	93 0a       	st.w	r9[0x0],r10
  pwm->channel[channel_id].cdty= pwm_channel->cdty; // Duty cycle, should be < CPRD.
8000253c:	76 19       	ld.w	r9,r11[0x4]
8000253e:	a5 7c       	lsl	r12,0x5
80002540:	f0 0c 00 0c 	add	r12,r8,r12
80002544:	f8 c8 fd fc 	sub	r8,r12,-516
80002548:	91 09       	st.w	r8[0x0],r9
  pwm->channel[channel_id].cprd= pwm_channel->cprd; // Channel period.
8000254a:	76 28       	ld.w	r8,r11[0x8]
8000254c:	f8 cc fd f8 	sub	r12,r12,-520
80002550:	99 08       	st.w	r12[0x0],r8
80002552:	5e fd       	retal	0

  return PWM_SUCCESS;
80002554:	5e ff       	retal	1

80002556 <pwm_start_channels>:
}


int pwm_start_channels(unsigned long channels_bitmask)
{
  if (channels_bitmask & ~((1 << (AVR32_PWM_LINES_MSB + 1)) - 1))
80002556:	18 98       	mov	r8,r12
80002558:	e0 18 ff 80 	andl	r8,0xff80
8000255c:	c0 20       	breq	80002560 <pwm_start_channels+0xa>
8000255e:	5e ff       	retal	1
    return PWM_INVALID_INPUT;

  AVR32_PWM.ena = channels_bitmask; // Enable channels.
80002560:	fe 78 30 00 	mov	r8,-53248
80002564:	91 1c       	st.w	r8[0x4],r12
80002566:	5e fd       	retal	0

80002568 <pwm_init>:


int pwm_init(const pwm_opt_t *opt)
{
  volatile avr32_pwm_t *pwm = &AVR32_PWM;
  bool global_interrupt_enabled = Is_global_interrupt_enabled();
80002568:	e1 b8 00 00 	mfsr	r8,0x0

  if (opt == 0 ) // Null pointer.
8000256c:	58 0c       	cp.w	r12,0
8000256e:	c0 21       	brne	80002572 <pwm_init+0xa>
80002570:	5e ff       	retal	1
    return PWM_INVALID_INPUT;

  // Disable interrupt.
  if (global_interrupt_enabled) Disable_global_interrupt();
80002572:	e6 18 00 01 	andh	r8,0x1,COH
80002576:	c0 91       	brne	80002588 <pwm_init+0x20>
80002578:	d3 03       	ssrf	0x10
  pwm->idr = ((1 << (AVR32_PWM_LINES_MSB + 1)) - 1) << AVR32_PWM_IDR_CHID0_OFFSET;
8000257a:	fe 78 30 00 	mov	r8,-53248
8000257e:	37 f9       	mov	r9,127
80002580:	91 59       	st.w	r8[0x14],r9
  pwm->isr;
80002582:	70 78       	ld.w	r8,r8[0x1c]
  if (global_interrupt_enabled) Enable_global_interrupt();
80002584:	d5 03       	csrf	0x10
80002586:	c0 68       	rjmp	80002592 <pwm_init+0x2a>
  if (opt == 0 ) // Null pointer.
    return PWM_INVALID_INPUT;

  // Disable interrupt.
  if (global_interrupt_enabled) Disable_global_interrupt();
  pwm->idr = ((1 << (AVR32_PWM_LINES_MSB + 1)) - 1) << AVR32_PWM_IDR_CHID0_OFFSET;
80002588:	fe 78 30 00 	mov	r8,-53248
8000258c:	37 f9       	mov	r9,127
8000258e:	91 59       	st.w	r8[0x14],r9
  pwm->isr;
80002590:	70 78       	ld.w	r8,r8[0x1c]
  if (global_interrupt_enabled) Enable_global_interrupt();

  // Set PWM mode register.
  pwm->mr =
    ((opt->diva)<<AVR32_PWM_DIVA_OFFSET) |
80002592:	78 08       	ld.w	r8,r12[0x0]
80002594:	78 39       	ld.w	r9,r12[0xc]
80002596:	a9 69       	lsl	r9,0x8
80002598:	f3 e8 11 09 	or	r9,r9,r8<<0x10
8000259c:	78 18       	ld.w	r8,r12[0x4]
8000259e:	10 49       	or	r9,r8
800025a0:	78 28       	ld.w	r8,r12[0x8]
800025a2:	f3 e8 11 89 	or	r9,r9,r8<<0x18
  pwm->idr = ((1 << (AVR32_PWM_LINES_MSB + 1)) - 1) << AVR32_PWM_IDR_CHID0_OFFSET;
  pwm->isr;
  if (global_interrupt_enabled) Enable_global_interrupt();

  // Set PWM mode register.
  pwm->mr =
800025a6:	fe 78 30 00 	mov	r8,-53248
800025aa:	91 09       	st.w	r8[0x0],r9
800025ac:	5e fd       	retal	0

800025ae <getBaudDiv>:
xSemaphoreHandle xSPIMutex;
#endif

int16_t getBaudDiv(const uint32_t baudrate, uint32_t pb_hz)
{
	uint32_t baudDiv = div_ceil(pb_hz, baudrate);
800025ae:	f8 c8 00 01 	sub	r8,r12,1
800025b2:	f0 0b 00 0b 	add	r11,r8,r11
800025b6:	f6 0c 0d 0a 	divu	r10,r11,r12
800025ba:	14 9c       	mov	r12,r10

	if (baudDiv <= 0 || baudDiv > 255) {
800025bc:	f4 c8 00 01 	sub	r8,r10,1
800025c0:	e0 48 00 fe 	cp.w	r8,254
800025c4:	e0 88 00 03 	brls	800025ca <getBaudDiv+0x1c>
800025c8:	5e fe       	retal	-1
		return -1;
	}

	return baudDiv;
800025ca:	5c 8c       	casts.h	r12
}
800025cc:	5e fc       	retal	r12

800025ce <spi_initMaster>:
spi_status_t spi_initMaster(volatile avr32_spi_t *spi,
		const spi_options_t *options)
{
	u_avr32_spi_mr_t u_avr32_spi_mr;

	if (options->modfdis > 1) {
800025ce:	f7 39 00 0d 	ld.ub	r9,r11[13]
800025d2:	30 18       	mov	r8,1
800025d4:	f0 09 18 00 	cp.b	r9,r8
800025d8:	e0 88 00 04 	brls	800025e0 <spi_initMaster+0x12>
800025dc:	30 2c       	mov	r12,2
800025de:	5e fc       	retal	r12
		return SPI_ERROR_ARGUMENT;
	}

	/* Reset. */
	spi->cr = AVR32_SPI_CR_SWRST_MASK;
800025e0:	e0 68 00 80 	mov	r8,128
800025e4:	99 08       	st.w	r12[0x0],r8

	/* Master Mode. */
	u_avr32_spi_mr.mr = spi->mr;
800025e6:	78 18       	ld.w	r8,r12[0x4]
	u_avr32_spi_mr.MR.mstr = 1;
800025e8:	30 19       	mov	r9,1
800025ea:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
	u_avr32_spi_mr.MR.modfdis = options->modfdis;
800025ee:	f7 39 00 0d 	ld.ub	r9,r11[13]
800025f2:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
	u_avr32_spi_mr.MR.llb = 0;
800025f6:	30 09       	mov	r9,0
800025f8:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
	u_avr32_spi_mr.MR.pcs = (1 << AVR32_SPI_MR_PCS_SIZE) - 1;
800025fc:	30 fa       	mov	r10,15
800025fe:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
	spi->mr = u_avr32_spi_mr.mr;
80002602:	99 18       	st.w	r12[0x4],r8
80002604:	5e f9       	retal	r9

80002606 <spi_selectionMode>:

spi_status_t spi_selectionMode(volatile avr32_spi_t *spi,
		uint8_t variable_ps,
		uint8_t pcs_decode,
		uint8_t delay)
{
80002606:	d4 01       	pushm	lr
	u_avr32_spi_mr_t u_avr32_spi_mr;

	if (variable_ps > 1 ||
80002608:	30 18       	mov	r8,1
8000260a:	f0 0b 18 00 	cp.b	r11,r8
8000260e:	5f be       	srhi	lr
80002610:	f0 0a 18 00 	cp.b	r10,r8
80002614:	5f b8       	srhi	r8
80002616:	fd e8 10 08 	or	r8,lr,r8
8000261a:	c0 30       	breq	80002620 <spi_selectionMode+0x1a>
8000261c:	30 2c       	mov	r12,2
8000261e:	d8 02       	popm	pc
			pcs_decode > 1) {
		return SPI_ERROR_ARGUMENT;
	}

	u_avr32_spi_mr.mr = spi->mr;
80002620:	78 18       	ld.w	r8,r12[0x4]
	u_avr32_spi_mr.MR.ps = variable_ps;
80002622:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
	u_avr32_spi_mr.MR.pcsdec = pcs_decode;
80002626:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
	u_avr32_spi_mr.MR.dlybcs = delay;
8000262a:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
	spi->mr = u_avr32_spi_mr.mr;
8000262e:	99 18       	st.w	r12[0x4],r8
80002630:	d8 0a       	popm	pc,r12=0

80002632 <spi_selectChip>:
	while (pdFALSE == xSemaphoreTake(xSPIMutex, 20)) {
	}
#endif

	/* Assert all lines; no peripheral is selected. */
	spi->mr |= AVR32_SPI_MR_PCS_MASK;
80002632:	78 18       	ld.w	r8,r12[0x4]
80002634:	ea 18 00 0f 	orh	r8,0xf
80002638:	99 18       	st.w	r12[0x4],r8

	if (spi->mr & AVR32_SPI_MR_PCSDEC_MASK) {
8000263a:	78 18       	ld.w	r8,r12[0x4]
8000263c:	e2 18 00 04 	andl	r8,0x4,COH
80002640:	c0 f0       	breq	8000265e <spi_selectChip+0x2c>
		/* The signal is decoded; allow up to 15 chips. */
		if (chip > 14) {
80002642:	30 e8       	mov	r8,14
80002644:	f0 0b 18 00 	cp.b	r11,r8
80002648:	e0 8b 00 19 	brhi	8000267a <spi_selectChip+0x48>
			return SPI_ERROR_ARGUMENT;
		}

		spi->mr &= ~AVR32_SPI_MR_PCS_MASK |
8000264c:	78 18       	ld.w	r8,r12[0x4]
8000264e:	b1 6b       	lsl	r11,0x10
80002650:	ea 1b ff f0 	orh	r11,0xfff0
80002654:	e8 1b ff ff 	orl	r11,0xffff
80002658:	10 6b       	and	r11,r8
8000265a:	99 1b       	st.w	r12[0x4],r11
8000265c:	5e fd       	retal	0
				(chip << AVR32_SPI_MR_PCS_OFFSET);
	} else {
		if (chip > 3) {
8000265e:	30 38       	mov	r8,3
80002660:	f0 0b 18 00 	cp.b	r11,r8
80002664:	e0 8b 00 0b 	brhi	8000267a <spi_selectChip+0x48>
			return SPI_ERROR_ARGUMENT;
		}

		spi->mr &= ~(1 << (AVR32_SPI_MR_PCS_OFFSET + chip));
80002668:	78 18       	ld.w	r8,r12[0x4]
8000266a:	2f 0b       	sub	r11,-16
8000266c:	30 19       	mov	r9,1
8000266e:	f2 0b 09 4b 	lsl	r11,r9,r11
80002672:	5c db       	com	r11
80002674:	10 6b       	and	r11,r8
80002676:	99 1b       	st.w	r12[0x4],r11
80002678:	5e fd       	retal	0
8000267a:	30 2c       	mov	r12,2
	}

	return SPI_OK;
}
8000267c:	5e fc       	retal	r12

8000267e <spi_unselectChip>:

spi_status_t spi_unselectChip(volatile avr32_spi_t *spi, uint8_t chip)
{
8000267e:	e0 68 3a 98 	mov	r8,15000
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TXEMPTY_MASK)) {
80002682:	c0 58       	rjmp	8000268c <spi_unselectChip+0xe>
		if (!timeout--) {
80002684:	58 08       	cp.w	r8,0
80002686:	c0 21       	brne	8000268a <spi_unselectChip+0xc>
80002688:	5e ff       	retal	1
8000268a:	20 18       	sub	r8,1

spi_status_t spi_unselectChip(volatile avr32_spi_t *spi, uint8_t chip)
{
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TXEMPTY_MASK)) {
8000268c:	78 49       	ld.w	r9,r12[0x10]
8000268e:	e2 19 02 00 	andl	r9,0x200,COH
80002692:	cf 90       	breq	80002684 <spi_unselectChip+0x6>
			return SPI_ERROR_TIMEOUT;
		}
	}

	/* Assert all lines; no peripheral is selected. */
	spi->mr |= AVR32_SPI_MR_PCS_MASK;
80002694:	78 18       	ld.w	r8,r12[0x4]
80002696:	ea 18 00 0f 	orh	r8,0xf
8000269a:	99 18       	st.w	r12[0x4],r8

	/* Last transfer, so de-assert the current NPCS if CSAAT is set. */
	spi->cr = AVR32_SPI_CR_LASTXFER_MASK;
8000269c:	fc 18 01 00 	movh	r8,0x100
800026a0:	99 08       	st.w	r12[0x0],r8
800026a2:	5e fd       	retal	0

800026a4 <spi_setupChipReg>:
}

spi_status_t spi_setupChipReg(volatile avr32_spi_t *spi,
		const spi_options_t *options,
		uint32_t pb_hz)
{
800026a4:	eb cd 40 f8 	pushm	r3-r7,lr
800026a8:	18 95       	mov	r5,r12
800026aa:	16 97       	mov	r7,r11
	u_avr32_spi_csr_t u_avr32_spi_csr;

	if (options->spi_mode > 3 ||
800026ac:	f7 36 00 0c 	ld.ub	r6,r11[12]
800026b0:	30 38       	mov	r8,3
800026b2:	f0 06 18 00 	cp.b	r6,r8
800026b6:	e0 8b 00 4d 	brhi	80002750 <spi_setupChipReg+0xac>
			options->stay_act > 1 ||
800026ba:	f7 34 00 0b 	ld.ub	r4,r11[11]
		const spi_options_t *options,
		uint32_t pb_hz)
{
	u_avr32_spi_csr_t u_avr32_spi_csr;

	if (options->spi_mode > 3 ||
800026be:	30 18       	mov	r8,1
800026c0:	f0 04 18 00 	cp.b	r4,r8
800026c4:	e0 8b 00 46 	brhi	80002750 <spi_setupChipReg+0xac>
			options->stay_act > 1 ||
			options->bits < 8 || options->bits > 16) {
800026c8:	f7 33 00 08 	ld.ub	r3,r11[8]
		const spi_options_t *options,
		uint32_t pb_hz)
{
	u_avr32_spi_csr_t u_avr32_spi_csr;

	if (options->spi_mode > 3 ||
800026cc:	30 78       	mov	r8,7
800026ce:	f0 03 18 00 	cp.b	r3,r8
800026d2:	e0 88 00 3f 	brls	80002750 <spi_setupChipReg+0xac>
800026d6:	31 08       	mov	r8,16
800026d8:	f0 03 18 00 	cp.b	r3,r8
800026dc:	e0 8b 00 3a 	brhi	80002750 <spi_setupChipReg+0xac>
			options->stay_act > 1 ||
			options->bits < 8 || options->bits > 16) {
		return SPI_ERROR_ARGUMENT;
	}

	int baudDiv = getBaudDiv(options->baudrate, pb_hz);
800026e0:	14 9b       	mov	r11,r10
800026e2:	6e 1c       	ld.w	r12,r7[0x4]
800026e4:	f0 1f 00 1d 	mcall	80002758 <spi_setupChipReg+0xb4>

	if (baudDiv < 0) {
800026e8:	c3 45       	brlt	80002750 <spi_setupChipReg+0xac>
		return SPI_ERROR_ARGUMENT;
	}

	/* Will use CSR0 offsets; these are the same for CSR0 to CSR3. */
	u_avr32_spi_csr.csr = 0;
800026ea:	30 08       	mov	r8,0
	u_avr32_spi_csr.CSR.cpol   = options->spi_mode >> 1;
800026ec:	ec 09 16 01 	lsr	r9,r6,0x1
800026f0:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
	u_avr32_spi_csr.CSR.ncpha  = (options->spi_mode & 0x1) ^ 0x1;
800026f4:	ec 16 00 01 	eorl	r6,0x1
800026f8:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
	u_avr32_spi_csr.CSR.csaat  = options->stay_act;
800026fc:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
	u_avr32_spi_csr.CSR.bits   = options->bits - 8;
80002700:	20 83       	sub	r3,8
80002702:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
	u_avr32_spi_csr.CSR.scbr   = baudDiv;
80002706:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
	u_avr32_spi_csr.CSR.dlybs  = options->spck_delay;
8000270a:	ef 39 00 09 	ld.ub	r9,r7[9]
8000270e:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
	u_avr32_spi_csr.CSR.dlybct = options->trans_delay;
80002712:	ef 39 00 0a 	ld.ub	r9,r7[10]
80002716:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8

	switch (options->reg) {
8000271a:	0f 89       	ld.ub	r9,r7[0x0]
8000271c:	30 1a       	mov	r10,1
8000271e:	f4 09 18 00 	cp.b	r9,r10
80002722:	c0 e0       	breq	8000273e <spi_setupChipReg+0x9a>
80002724:	c0 a3       	brcs	80002738 <spi_setupChipReg+0x94>
80002726:	30 2a       	mov	r10,2
80002728:	f4 09 18 00 	cp.b	r9,r10
8000272c:	c0 c0       	breq	80002744 <spi_setupChipReg+0xa0>
8000272e:	30 3a       	mov	r10,3
80002730:	f4 09 18 00 	cp.b	r9,r10
80002734:	c0 e1       	brne	80002750 <spi_setupChipReg+0xac>
80002736:	c0 a8       	rjmp	8000274a <spi_setupChipReg+0xa6>
	case 0:
		spi->csr0 = u_avr32_spi_csr.csr;
80002738:	8b c8       	st.w	r5[0x30],r8
8000273a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
		break;

	case 1:
		spi->csr1 = u_avr32_spi_csr.csr;
8000273e:	8b d8       	st.w	r5[0x34],r8
80002740:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
		break;

	case 2:
		spi->csr2 = u_avr32_spi_csr.csr;
80002744:	8b e8       	st.w	r5[0x38],r8
80002746:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
		break;

	case 3:
		spi->csr3 = u_avr32_spi_csr.csr;
8000274a:	8b f8       	st.w	r5[0x3c],r8
8000274c:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
		break;
80002750:	30 2c       	mov	r12,2
		}
	}
#endif

	return SPI_OK;
}
80002752:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002756:	00 00       	add	r0,r0
80002758:	80 00       	ld.sh	r0,r0[0x0]
8000275a:	25 ae       	sub	lr,90

8000275c <spi_enable>:

void spi_enable(volatile avr32_spi_t *spi)
{
	spi->cr = AVR32_SPI_CR_SPIEN_MASK;
8000275c:	30 18       	mov	r8,1
8000275e:	99 08       	st.w	r12[0x0],r8
}
80002760:	5e fc       	retal	r12

80002762 <spi_write>:
{
	return ((spi->sr & AVR32_SPI_SR_TDRE_MASK) != 0);
}

spi_status_t spi_write(volatile avr32_spi_t *spi, uint16_t data)
{
80002762:	e0 68 3a 98 	mov	r8,15000
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TDRE_MASK)) {
80002766:	c0 58       	rjmp	80002770 <spi_write+0xe>
		if (!timeout--) {
80002768:	58 08       	cp.w	r8,0
8000276a:	c0 21       	brne	8000276e <spi_write+0xc>
8000276c:	5e ff       	retal	1
8000276e:	20 18       	sub	r8,1

spi_status_t spi_write(volatile avr32_spi_t *spi, uint16_t data)
{
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TDRE_MASK)) {
80002770:	78 49       	ld.w	r9,r12[0x10]
80002772:	e2 19 00 02 	andl	r9,0x2,COH
80002776:	cf 90       	breq	80002768 <spi_write+0x6>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80002778:	5c 7b       	castu.h	r11
8000277a:	99 3b       	st.w	r12[0xc],r11
8000277c:	5e fd       	retal	0

8000277e <spi_read>:
{
	return ((spi->sr & AVR32_SPI_SR_RDRF_MASK) != 0);
}

spi_status_t spi_read(volatile avr32_spi_t *spi, uint16_t *data)
{
8000277e:	e0 68 3a 98 	mov	r8,15000
	unsigned int timeout = SPI_TIMEOUT;

	while ((spi->sr &
80002782:	c0 58       	rjmp	8000278c <spi_read+0xe>
			(AVR32_SPI_SR_RDRF_MASK | AVR32_SPI_SR_TXEMPTY_MASK)) !=
			(AVR32_SPI_SR_RDRF_MASK | AVR32_SPI_SR_TXEMPTY_MASK)) {
		if (!timeout--) {
80002784:	58 08       	cp.w	r8,0
80002786:	c0 21       	brne	8000278a <spi_read+0xc>
80002788:	5e ff       	retal	1
8000278a:	20 18       	sub	r8,1

spi_status_t spi_read(volatile avr32_spi_t *spi, uint16_t *data)
{
	unsigned int timeout = SPI_TIMEOUT;

	while ((spi->sr &
8000278c:	78 49       	ld.w	r9,r12[0x10]
8000278e:	e2 19 02 01 	andl	r9,0x201,COH
80002792:	e0 49 02 01 	cp.w	r9,513
80002796:	cf 71       	brne	80002784 <spi_read+0x6>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	*data = spi->rdr >> AVR32_SPI_RDR_RD_OFFSET;
80002798:	78 28       	ld.w	r8,r12[0x8]
8000279a:	b6 08       	st.h	r11[0x0],r8
8000279c:	5e fd       	retal	0
8000279e:	d7 03       	nop

800027a0 <board_init>:
#if defined (CONF_BOARD_AT45DBX)
#  define AT45DBX_MEM_CNT  1
#endif

void board_init(void)
{
800027a0:	d4 01       	pushm	lr
	gpio_configure_pin(LED0_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027a2:	30 3b       	mov	r11,3
800027a4:	33 bc       	mov	r12,59
800027a6:	f0 1f 00 2c 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED1_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027aa:	30 3b       	mov	r11,3
800027ac:	33 cc       	mov	r12,60
800027ae:	f0 1f 00 2a 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED2_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027b2:	30 3b       	mov	r11,3
800027b4:	33 dc       	mov	r12,61
800027b6:	f0 1f 00 28 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED3_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027ba:	30 3b       	mov	r11,3
800027bc:	33 ec       	mov	r12,62
800027be:	f0 1f 00 26 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED4_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027c2:	30 3b       	mov	r11,3
800027c4:	33 3c       	mov	r12,51
800027c6:	f0 1f 00 24 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED5_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027ca:	30 3b       	mov	r11,3
800027cc:	33 4c       	mov	r12,52
800027ce:	f0 1f 00 22 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED6_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027d2:	30 3b       	mov	r11,3
800027d4:	33 5c       	mov	r12,53
800027d6:	f0 1f 00 20 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(LED7_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800027da:	30 3b       	mov	r11,3
800027dc:	33 6c       	mov	r12,54
800027de:	f0 1f 00 1e 	mcall	80002854 <board_init+0xb4>

	gpio_configure_pin(GPIO_PUSH_BUTTON_0,GPIO_DIR_INPUT);
800027e2:	30 0b       	mov	r11,0
800027e4:	35 8c       	mov	r12,88
800027e6:	f0 1f 00 1c 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_PUSH_BUTTON_1,GPIO_DIR_INPUT);
800027ea:	30 0b       	mov	r11,0
800027ec:	35 5c       	mov	r12,85
800027ee:	f0 1f 00 1a 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_PUSH_BUTTON_2,GPIO_DIR_INPUT);
800027f2:	30 0b       	mov	r11,0
800027f4:	35 2c       	mov	r12,82
800027f6:	f0 1f 00 18 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_PUSH,GPIO_DIR_INPUT);
800027fa:	30 0b       	mov	r11,0
800027fc:	31 4c       	mov	r12,20
800027fe:	f0 1f 00 16 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_LEFT,GPIO_DIR_INPUT);
80002802:	30 0b       	mov	r11,0
80002804:	31 9c       	mov	r12,25
80002806:	f0 1f 00 14 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_UP,GPIO_DIR_INPUT);
8000280a:	30 0b       	mov	r11,0
8000280c:	31 ac       	mov	r12,26
8000280e:	f0 1f 00 12 	mcall	80002854 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_DOWN,GPIO_DIR_INPUT);
80002812:	30 0b       	mov	r11,0
80002814:	31 bc       	mov	r12,27
80002816:	f0 1f 00 10 	mcall	80002854 <board_init+0xb4>
		MREPEAT(AT45DBX_MEM_CNT, AT45DBX_ENABLE_NPCS_PIN, ~)
#  undef AT45DBX_ENABLE_NPCS_PIN
	};

	// Assign I/Os to SPI.
	gpio_enable_module(AT45DBX_SPI_GPIO_MAP,
8000281a:	30 4b       	mov	r11,4
8000281c:	48 fc       	lddpc	r12,80002858 <board_init+0xb8>
8000281e:	f0 1f 00 10 	mcall	8000285c <board_init+0xbc>
		{SD_MMC_SPI_MOSI_PIN, SD_MMC_SPI_MOSI_FUNCTION},
		{SD_MMC_SPI_NPCS_PIN, SD_MMC_SPI_NPCS_FUNCTION},
	};

	// Assign I/Os to SPI.
	gpio_enable_module(SD_MMC_SPI_GPIO_MAP,
80002822:	30 4b       	mov	r11,4
80002824:	48 fc       	lddpc	r12,80002860 <board_init+0xc0>
80002826:	f0 1f 00 0e 	mcall	8000285c <board_init+0xbc>

	// Configure SD/MMC card detect and write protect pins
#  define SD_MMC_CONFIGURE_CD_WP_PIN(slot, unused) \
	gpio_configure_pin(SD_MMC_##slot##_CD_GPIO,GPIO_DIR_INPUT); \
	gpio_configure_pin(SD_MMC_##slot##_WP_GPIO,GPIO_DIR_INPUT);
	MREPEAT(SD_MMC_SPI_MEM_CNT, SD_MMC_CONFIGURE_CD_WP_PIN, ~)
8000282a:	30 0b       	mov	r11,0
8000282c:	30 2c       	mov	r12,2
8000282e:	f0 1f 00 0a 	mcall	80002854 <board_init+0xb4>
80002832:	30 0b       	mov	r11,0
80002834:	30 7c       	mov	r12,7
80002836:	f0 1f 00 08 	mcall	80002854 <board_init+0xb4>
		{AVR32_TWI_SDA_0_0_PIN, AVR32_TWI_SDA_0_0_FUNCTION},
		{AVR32_TWI_SCL_0_0_PIN, AVR32_TWI_SCL_0_0_FUNCTION},
	};

	// TWI gpio pins configuration
	gpio_enable_module(TWI_GPIO_MAP,
8000283a:	30 2b       	mov	r11,2
8000283c:	48 ac       	lddpc	r12,80002864 <board_init+0xc4>
8000283e:	f0 1f 00 08 	mcall	8000285c <board_init+0xbc>
	// USART GPIO pin configuration.
	static const gpio_map_t COMPORT_GPIO_MAP = {
		{USART_RXD_PIN, USART_RXD_FUNCTION },
		{USART_TXD_PIN, USART_TXD_FUNCTION },
	};
	gpio_enable_module(COMPORT_GPIO_MAP,
80002842:	30 2b       	mov	r11,2
80002844:	48 9c       	lddpc	r12,80002868 <board_init+0xc8>
80002846:	f0 1f 00 06 	mcall	8000285c <board_init+0xbc>
	// USART GPIO pin configuration.
	static const gpio_map_t COMPORT0_GPIO_MAP = {
		{USART0_RXD_PIN, USART0_RXD_FUNCTION },
		{USART0_TXD_PIN, USART0_TXD_FUNCTION },
	};
	gpio_enable_module(COMPORT0_GPIO_MAP,
8000284a:	30 2b       	mov	r11,2
8000284c:	48 8c       	lddpc	r12,8000286c <board_init+0xcc>
8000284e:	f0 1f 00 04 	mcall	8000285c <board_init+0xbc>
			sizeof(COMPORT0_GPIO_MAP) / sizeof(COMPORT0_GPIO_MAP[0]));
#endif
}
80002852:	d8 02       	popm	pc
80002854:	80 00       	ld.sh	r0,r0[0x0]
80002856:	28 f4       	sub	r4,-113
80002858:	80 00       	ld.sh	r0,r0[0x0]
8000285a:	88 50       	ld.sh	r0,r4[0xa]
8000285c:	80 00       	ld.sh	r0,r0[0x0]
8000285e:	28 c4       	sub	r4,-116
80002860:	80 00       	ld.sh	r0,r0[0x0]
80002862:	88 00       	ld.sh	r0,r4[0x0]
80002864:	80 00       	ld.sh	r0,r0[0x0]
80002866:	88 40       	ld.sh	r0,r4[0x8]
80002868:	80 00       	ld.sh	r0,r0[0x0]
8000286a:	88 30       	ld.sh	r0,r4[0x6]
8000286c:	80 00       	ld.sh	r0,r0[0x0]
8000286e:	88 20       	ld.sh	r0,r4[0x4]

80002870 <gpio_enable_module_pin>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module_pin(uint32_t pin, uint32_t function)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80002870:	f8 08 16 05 	lsr	r8,r12,0x5
80002874:	a9 68       	lsl	r8,0x8
80002876:	e0 28 f0 00 	sub	r8,61440

	/* Enable the correct function. */
	switch (function) {
8000287a:	58 1b       	cp.w	r11,1
8000287c:	c0 d0       	breq	80002896 <gpio_enable_module_pin+0x26>
8000287e:	c0 63       	brcs	8000288a <gpio_enable_module_pin+0x1a>
80002880:	58 2b       	cp.w	r11,2
80002882:	c1 00       	breq	800028a2 <gpio_enable_module_pin+0x32>
80002884:	58 3b       	cp.w	r11,3
80002886:	c1 40       	breq	800028ae <gpio_enable_module_pin+0x3e>
80002888:	5e ff       	retal	1
	case 0: /* A function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
8000288a:	30 19       	mov	r9,1
8000288c:	f2 0c 09 49 	lsl	r9,r9,r12
80002890:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
80002892:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
80002894:	c1 28       	rjmp	800028b8 <gpio_enable_module_pin+0x48>

	case 1: /* B function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
80002896:	30 19       	mov	r9,1
80002898:	f2 0c 09 49 	lsl	r9,r9,r12
8000289c:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
8000289e:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
800028a0:	c0 c8       	rjmp	800028b8 <gpio_enable_module_pin+0x48>

	case 2: /* C function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
800028a2:	30 19       	mov	r9,1
800028a4:	f2 0c 09 49 	lsl	r9,r9,r12
800028a8:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
800028aa:	91 99       	st.w	r8[0x24],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
800028ac:	c0 68       	rjmp	800028b8 <gpio_enable_module_pin+0x48>

	case 3: /* D function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
800028ae:	30 19       	mov	r9,1
800028b0:	f2 0c 09 49 	lsl	r9,r9,r12
800028b4:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
800028b6:	91 99       	st.w	r8[0x24],r9
	default:
		return GPIO_INVALID_ARGUMENT;
	}

	/* Disable GPIO control. */
	gpio_port->gperc = 1 << (pin & 0x1F);
800028b8:	30 19       	mov	r9,1
800028ba:	f2 0c 09 4c 	lsl	r12,r9,r12
800028be:	91 2c       	st.w	r8[0x8],r12
800028c0:	5e fd       	retal	0
800028c2:	d7 03       	nop

800028c4 <gpio_enable_module>:
 * \param size The number of pins in \a gpiomap.
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
800028c4:	d4 21       	pushm	r4-r7,lr
800028c6:	18 97       	mov	r7,r12
800028c8:	16 94       	mov	r4,r11
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
800028ca:	58 0b       	cp.w	r11,0
800028cc:	c0 31       	brne	800028d2 <gpio_enable_module+0xe>
800028ce:	30 05       	mov	r5,0
800028d0:	c0 d8       	rjmp	800028ea <gpio_enable_module+0x26>
800028d2:	30 06       	mov	r6,0
800028d4:	0c 95       	mov	r5,r6
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
800028d6:	6e 1b       	ld.w	r11,r7[0x4]
800028d8:	6e 0c       	ld.w	r12,r7[0x0]
800028da:	f0 1f 00 06 	mcall	800028f0 <gpio_enable_module+0x2c>
800028de:	18 45       	or	r5,r12
		gpiomap++;
800028e0:	2f 87       	sub	r7,-8
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
800028e2:	2f f6       	sub	r6,-1
800028e4:	0c 34       	cp.w	r4,r6
800028e6:	fe 9b ff f8 	brhi	800028d6 <gpio_enable_module+0x12>
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
		gpiomap++;
	}

	return status;
}
800028ea:	0a 9c       	mov	r12,r5
800028ec:	d8 22       	popm	r4-r7,pc
800028ee:	00 00       	add	r0,r0
800028f0:	80 00       	ld.sh	r0,r0[0x0]
800028f2:	28 70       	sub	r0,-121

800028f4 <gpio_configure_pin>:
 * \param pin The pin number.
 * \param flags The configuration.
 */
void gpio_configure_pin(uint32_t pin, uint32_t flags)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800028f4:	f8 08 16 05 	lsr	r8,r12,0x5
800028f8:	a9 68       	lsl	r8,0x8
800028fa:	e0 28 f0 00 	sub	r8,61440
	} else {
		gpio_port->pderc = 1 << (pin & 0x1F);
	}

#endif
	if (flags & GPIO_PULL_UP) {
800028fe:	16 99       	mov	r9,r11
80002900:	e2 19 00 04 	andl	r9,0x4,COH
80002904:	c0 70       	breq	80002912 <gpio_configure_pin+0x1e>
		gpio_port->puers = 1 << (pin & 0x1F);
80002906:	30 19       	mov	r9,1
80002908:	f2 0c 09 49 	lsl	r9,r9,r12
8000290c:	f1 49 00 74 	st.w	r8[116],r9
80002910:	c0 68       	rjmp	8000291c <gpio_configure_pin+0x28>
	} else {
		gpio_port->puerc = 1 << (pin & 0x1F);
80002912:	30 19       	mov	r9,1
80002914:	f2 0c 09 49 	lsl	r9,r9,r12
80002918:	f1 49 00 78 	st.w	r8[120],r9
	}

#endif

	/* Select interrupt level for group */
	if (flags & GPIO_INTERRUPT) {
8000291c:	16 99       	mov	r9,r11
8000291e:	e2 19 00 80 	andl	r9,0x80,COH
80002922:	c2 40       	breq	8000296a <gpio_configure_pin+0x76>
		if (flags & GPIO_BOTHEDGES) {
80002924:	16 99       	mov	r9,r11
80002926:	e2 19 01 80 	andl	r9,0x180,COH
8000292a:	c0 90       	breq	8000293c <gpio_configure_pin+0x48>
			gpio_port->imr0c = 1 << (pin & 0x1F);
8000292c:	30 19       	mov	r9,1
8000292e:	f2 0c 09 49 	lsl	r9,r9,r12
80002932:	f1 49 00 a8 	st.w	r8[168],r9
			gpio_port->imr1c = 1 << (pin & 0x1F);
80002936:	f1 49 00 b8 	st.w	r8[184],r9
8000293a:	c1 88       	rjmp	8000296a <gpio_configure_pin+0x76>
		} else if (flags & GPIO_RISING) {
8000293c:	16 99       	mov	r9,r11
8000293e:	e2 19 02 80 	andl	r9,0x280,COH
80002942:	c0 90       	breq	80002954 <gpio_configure_pin+0x60>
			gpio_port->imr0s = 1 << (pin & 0x1F);
80002944:	30 19       	mov	r9,1
80002946:	f2 0c 09 49 	lsl	r9,r9,r12
8000294a:	f1 49 00 a4 	st.w	r8[164],r9
			gpio_port->imr1c = 1 << (pin & 0x1F);
8000294e:	f1 49 00 b8 	st.w	r8[184],r9
80002952:	c0 c8       	rjmp	8000296a <gpio_configure_pin+0x76>
		} else if (flags & GPIO_FALLING) {
80002954:	16 99       	mov	r9,r11
80002956:	e2 19 03 80 	andl	r9,0x380,COH
8000295a:	c0 80       	breq	8000296a <gpio_configure_pin+0x76>
			gpio_port->imr0c = 1 << (pin & 0x1F);
8000295c:	30 19       	mov	r9,1
8000295e:	f2 0c 09 49 	lsl	r9,r9,r12
80002962:	f1 49 00 a8 	st.w	r8[168],r9
			gpio_port->imr1s = 1 << (pin & 0x1F);
80002966:	f1 49 00 b4 	st.w	r8[180],r9
		}
	}

	/* Select direction and initial pin state */
	if (flags & GPIO_DIR_OUTPUT) {
8000296a:	f3 db c0 01 	bfextu	r9,r11,0x0,0x1
8000296e:	c1 50       	breq	80002998 <gpio_configure_pin+0xa4>
		if (flags & GPIO_INIT_HIGH) {
80002970:	e2 1b 00 02 	andl	r11,0x2,COH
80002974:	c0 70       	breq	80002982 <gpio_configure_pin+0x8e>
			gpio_port->ovrs = 1 << (pin & 0x1F);
80002976:	30 19       	mov	r9,1
80002978:	f2 0c 09 49 	lsl	r9,r9,r12
8000297c:	f1 49 00 54 	st.w	r8[84],r9
80002980:	c0 68       	rjmp	8000298c <gpio_configure_pin+0x98>
		} else {
			gpio_port->ovrc = 1 << (pin & 0x1F);
80002982:	30 19       	mov	r9,1
80002984:	f2 0c 09 49 	lsl	r9,r9,r12
80002988:	f1 49 00 58 	st.w	r8[88],r9
		}

		gpio_port->oders = 1 << (pin & 0x1F);
8000298c:	30 19       	mov	r9,1
8000298e:	f2 0c 09 49 	lsl	r9,r9,r12
80002992:	f1 49 00 44 	st.w	r8[68],r9
80002996:	c0 68       	rjmp	800029a2 <gpio_configure_pin+0xae>
	} else {
		gpio_port->oderc = 1 << (pin & 0x1F);
80002998:	30 19       	mov	r9,1
8000299a:	f2 0c 09 49 	lsl	r9,r9,r12
8000299e:	f1 49 00 48 	st.w	r8[72],r9
	}

	/* Enable GPIO */
	gpio_port->gpers = 1 << (pin & 0x1F);
800029a2:	30 19       	mov	r9,1
800029a4:	f2 0c 09 4c 	lsl	r12,r9,r12
800029a8:	91 1c       	st.w	r8[0x4],r12
}
800029aa:	5e fc       	retal	r12

800029ac <gpio_set_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_set_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800029ac:	f8 08 16 05 	lsr	r8,r12,0x5
800029b0:	a9 68       	lsl	r8,0x8
800029b2:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 1. */
	gpio_port->ovrs  = 1 << (pin & 0x1F);
800029b6:	30 19       	mov	r9,1
800029b8:	f2 0c 09 4c 	lsl	r12,r9,r12
800029bc:	f1 4c 00 54 	st.w	r8[84],r12
	/* The GPIO output driver is enabled for that pin. */ 
	gpio_port->oders = 1 << (pin & 0x1F);
800029c0:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
800029c4:	91 1c       	st.w	r8[0x4],r12
}
800029c6:	5e fc       	retal	r12

800029c8 <gpio_clr_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_clr_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800029c8:	f8 08 16 05 	lsr	r8,r12,0x5
800029cc:	a9 68       	lsl	r8,0x8
800029ce:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 0. */
	gpio_port->ovrc  = 1 << (pin & 0x1F);
800029d2:	30 19       	mov	r9,1
800029d4:	f2 0c 09 4c 	lsl	r12,r9,r12
800029d8:	f1 4c 00 58 	st.w	r8[88],r12
	/* The GPIO output driver is enabled for that pin. */
	gpio_port->oders = 1 << (pin & 0x1F);
800029dc:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
800029e0:	91 1c       	st.w	r8[0x4],r12
}
800029e2:	5e fc       	retal	r12

800029e4 <gpio_enable_pin_interrupt>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_pin_interrupt(uint32_t pin, uint32_t mode)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800029e4:	f8 08 16 05 	lsr	r8,r12,0x5
800029e8:	a9 68       	lsl	r8,0x8
800029ea:	e0 28 f0 00 	sub	r8,61440

	/* Enable the glitch filter. */
	gpio_port->gfers = 1 << (pin & 0x1F);
800029ee:	30 19       	mov	r9,1
800029f0:	f2 0c 09 4c 	lsl	r12,r9,r12
800029f4:	f1 4c 00 c4 	st.w	r8[196],r12
static uint32_t gpio_configure_edge_detector(uint32_t pin, uint32_t mode)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];

	/* Configure the edge detector. */
	switch (mode) {
800029f8:	12 3b       	cp.w	r11,r9
800029fa:	c0 a0       	breq	80002a0e <gpio_enable_pin_interrupt+0x2a>
800029fc:	c0 43       	brcs	80002a04 <gpio_enable_pin_interrupt+0x20>
800029fe:	58 2b       	cp.w	r11,2
80002a00:	c1 11       	brne	80002a22 <gpio_enable_pin_interrupt+0x3e>
80002a02:	c0 b8       	rjmp	80002a18 <gpio_enable_pin_interrupt+0x34>
	case GPIO_PIN_CHANGE:
		gpio_port->imr0c = 1 << (pin & 0x1F);
80002a04:	f1 4c 00 a8 	st.w	r8[168],r12
		gpio_port->imr1c = 1 << (pin & 0x1F);
80002a08:	f1 4c 00 b8 	st.w	r8[184],r12
80002a0c:	c0 c8       	rjmp	80002a24 <gpio_enable_pin_interrupt+0x40>
		break;

	case GPIO_RISING_EDGE:
		gpio_port->imr0s = 1 << (pin & 0x1F);
80002a0e:	f1 4c 00 a4 	st.w	r8[164],r12
		gpio_port->imr1c = 1 << (pin & 0x1F);
80002a12:	f1 4c 00 b8 	st.w	r8[184],r12
80002a16:	c0 78       	rjmp	80002a24 <gpio_enable_pin_interrupt+0x40>
		break;

	case GPIO_FALLING_EDGE:
		gpio_port->imr0c = 1 << (pin & 0x1F);
80002a18:	f1 4c 00 a8 	st.w	r8[168],r12
		gpio_port->imr1s = 1 << (pin & 0x1F);
80002a1c:	f1 4c 00 b4 	st.w	r8[180],r12
80002a20:	c0 28       	rjmp	80002a24 <gpio_enable_pin_interrupt+0x40>
80002a22:	5e ff       	retal	1
	if (GPIO_INVALID_ARGUMENT == gpio_configure_edge_detector(pin, mode)) {
		return(GPIO_INVALID_ARGUMENT);
	}

	/* Enable interrupt. */
	gpio_port->iers = 1 << (pin & 0x1F);
80002a24:	f1 4c 00 94 	st.w	r8[148],r12
80002a28:	5e fd       	retal	0

80002a2a <gpio_get_pin_interrupt_flag>:
 *
 * \return The pin interrupt flag.
 */
bool gpio_get_pin_interrupt_flag(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80002a2a:	f8 08 16 05 	lsr	r8,r12,0x5
80002a2e:	a9 68       	lsl	r8,0x8
80002a30:	e0 28 f0 00 	sub	r8,61440
	
	return (gpio_port->ifr >> (pin & 0x1F)) & 1;
80002a34:	f0 f8 00 d0 	ld.w	r8,r8[208]
80002a38:	f0 0c 0a 4c 	lsr	r12,r8,r12
}
80002a3c:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80002a40:	5e fc       	retal	r12

80002a42 <gpio_clear_pin_interrupt_flag>:
 *
 * \param pin The pin number.
 */
void gpio_clear_pin_interrupt_flag(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80002a42:	f8 08 16 05 	lsr	r8,r12,0x5
80002a46:	a9 68       	lsl	r8,0x8
80002a48:	e0 28 f0 00 	sub	r8,61440
	gpio_port->ifrc = 1 << (pin & 0x1F);

	/* Restore interrupt enable register. */
	gpio_port->ier = gpio_ier;
#else
	gpio_port->ifrc = 1 << (pin & 0x1F);
80002a4c:	30 19       	mov	r9,1
80002a4e:	f2 0c 09 4c 	lsl	r12,r9,r12
80002a52:	f1 4c 00 d8 	st.w	r8[216],r12
#endif
}
80002a56:	5e fc       	retal	r12

80002a58 <INTC_register_interrupt>:
 */
void INTC_register_interrupt(__int_handler handler, uint32_t irq,
	uint32_t int_level)
{
	// Determine the group of the IRQ.
	uint32_t int_grp = irq / AVR32_INTC_MAX_NUM_IRQS_PER_GRP;
80002a58:	f6 08 16 05 	lsr	r8,r11,0x5

	/* Store in _int_line_handler_table_x the pointer to the interrupt
	handler, so that _get_interrupt_handler can retrieve it when the
	interrupt is vectored. */
	_int_handler_table[int_grp]
		._int_line_handler_table[irq % AVR32_INTC_MAX_NUM_IRQS_PER_GRP]
80002a5c:	49 99       	lddpc	r9,80002ac0 <INTC_register_interrupt+0x68>
80002a5e:	f2 08 00 39 	add	r9,r9,r8<<0x3
80002a62:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
80002a66:	72 19       	ld.w	r9,r9[0x4]
	uint32_t int_grp = irq / AVR32_INTC_MAX_NUM_IRQS_PER_GRP;

	/* Store in _int_line_handler_table_x the pointer to the interrupt
	handler, so that _get_interrupt_handler can retrieve it when the
	interrupt is vectored. */
	_int_handler_table[int_grp]
80002a68:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
	/* Program the corresponding IPRX register to set the interrupt priority
	level and the interrupt vector offset that will be fetched by the core
	interrupt system.
	NOTE: The _intx functions are intermediate assembly functions between
	the core interrupt system and the user interrupt handler. */
	if (int_level == AVR32_INTC_INT0) {
80002a6c:	58 0a       	cp.w	r10,0
80002a6e:	c0 91       	brne	80002a80 <INTC_register_interrupt+0x28>
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80002a70:	49 59       	lddpc	r9,80002ac4 <INTC_register_interrupt+0x6c>
80002a72:	49 6a       	lddpc	r10,80002ac8 <INTC_register_interrupt+0x70>
80002a74:	12 1a       	sub	r10,r9
80002a76:	fe 79 08 00 	mov	r9,-63488
80002a7a:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002a7e:	5e fc       	retal	r12
	} else if (int_level == AVR32_INTC_INT1) {
80002a80:	58 1a       	cp.w	r10,1
80002a82:	c0 a1       	brne	80002a96 <INTC_register_interrupt+0x3e>
		AVR32_INTC.ipr[int_grp] = IPR_INT1;
80002a84:	49 09       	lddpc	r9,80002ac4 <INTC_register_interrupt+0x6c>
80002a86:	49 2a       	lddpc	r10,80002acc <INTC_register_interrupt+0x74>
80002a88:	12 1a       	sub	r10,r9
80002a8a:	bf aa       	sbr	r10,0x1e
80002a8c:	fe 79 08 00 	mov	r9,-63488
80002a90:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002a94:	5e fc       	retal	r12
	} else if (int_level == AVR32_INTC_INT2) {
80002a96:	58 2a       	cp.w	r10,2
80002a98:	c0 a1       	brne	80002aac <INTC_register_interrupt+0x54>
		AVR32_INTC.ipr[int_grp] = IPR_INT2;
80002a9a:	48 b9       	lddpc	r9,80002ac4 <INTC_register_interrupt+0x6c>
80002a9c:	48 da       	lddpc	r10,80002ad0 <INTC_register_interrupt+0x78>
80002a9e:	12 1a       	sub	r10,r9
80002aa0:	bf ba       	sbr	r10,0x1f
80002aa2:	fe 79 08 00 	mov	r9,-63488
80002aa6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002aaa:	5e fc       	retal	r12
	} else {
		AVR32_INTC.ipr[int_grp] = IPR_INT3;
80002aac:	48 69       	lddpc	r9,80002ac4 <INTC_register_interrupt+0x6c>
80002aae:	48 aa       	lddpc	r10,80002ad4 <INTC_register_interrupt+0x7c>
80002ab0:	12 1a       	sub	r10,r9
80002ab2:	ea 1a c0 00 	orh	r10,0xc000
80002ab6:	fe 79 08 00 	mov	r9,-63488
80002aba:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002abe:	5e fc       	retal	r12
80002ac0:	80 00       	ld.sh	r0,r0[0x0]
80002ac2:	88 70       	ld.sh	r0,r4[0xe]
80002ac4:	80 00       	ld.sh	r0,r0[0x0]
80002ac6:	86 00       	ld.sh	r0,r3[0x0]
80002ac8:	80 00       	ld.sh	r0,r0[0x0]
80002aca:	87 04       	st.w	r3[0x0],r4
80002acc:	80 00       	ld.sh	r0,r0[0x0]
80002ace:	87 12       	st.w	r3[0x4],r2
80002ad0:	80 00       	ld.sh	r0,r0[0x0]
80002ad2:	87 20       	st.w	r3[0x8],r0
80002ad4:	80 00       	ld.sh	r0,r0[0x0]
80002ad6:	87 2e       	st.w	r3[0x8],lr

80002ad8 <_get_interrupt_handler>:
__int_handler _get_interrupt_handler(uint32_t int_level)
{
	/* ICR3 is mapped first, ICR0 last.
	Code in exception.S puts int_level in R12 which is used by the compiler
	to pass a single argument to a function. */
	uint32_t int_grp = AVR32_INTC.icr[AVR32_INTC_INT3 - int_level];
80002ad8:	fe 78 08 00 	mov	r8,-63488
80002adc:	e0 69 00 83 	mov	r9,131
80002ae0:	f2 0c 01 0c 	sub	r12,r9,r12
80002ae4:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
	uint32_t int_req = AVR32_INTC.irr[int_grp];
80002ae8:	f2 ca ff c0 	sub	r10,r9,-64
80002aec:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80002af0:	58 08       	cp.w	r8,0
80002af2:	c0 21       	brne	80002af6 <_get_interrupt_handler+0x1e>
80002af4:	5e fd       	retal	0
		? _int_handler_table[int_grp]._int_line_handler_table[32
80002af6:	f0 08 12 00 	clz	r8,r8
80002afa:	48 5a       	lddpc	r10,80002b0c <_get_interrupt_handler+0x34>
80002afc:	f4 09 00 39 	add	r9,r10,r9<<0x3
80002b00:	f0 08 11 1f 	rsub	r8,r8,31
80002b04:	72 19       	ld.w	r9,r9[0x4]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80002b06:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
		? _int_handler_table[int_grp]._int_line_handler_table[32
			- clz(int_req) - 1]
		: NULL;
}
80002b0a:	5e fc       	retal	r12
80002b0c:	80 00       	ld.sh	r0,r0[0x0]
80002b0e:	88 70       	ld.sh	r0,r4[0xe]

80002b10 <_stext>:

  .global _stext
  .type _stext, @function
_stext:
  // Set initial stack pointer.
  lda.w   sp, _estack
80002b10:	e0 7d 00 00 	mov	sp,65536

  // Set up EVBA so interrupts can be enabled.
  lda.w   r0, _evba
  mtsr    AVR32_EVBA, r0
80002b14:	fe c0 a5 14 	sub	r0,pc,-23276

  // Enable the exception processing.
  csrf    AVR32_SR_EM_OFFSET
80002b18:	e3 b0 00 01 	mtsr	0x4,r0

  // Load initialized data having a global lifetime from the data LMA.
  lda.w   r0, _data
  lda.w   r1, _edata
80002b1c:	d5 53       	csrf	0x15
  cp      r0, r1
80002b1e:	30 80       	mov	r0,8
  brhs    idata_load_loop_end
80002b20:	e0 61 05 10 	mov	r1,1296
  lda.w   r2, _data_lma
idata_load_loop:
  ld.d    r4, r2++
80002b24:	02 30       	cp.w	r0,r1
  st.d    r0++, r4
80002b26:	c0 72       	brcc	80002b34 <idata_load_loop_end>
  cp      r0, r1
80002b28:	fe c2 9c 30 	sub	r2,pc,-25552

80002b2c <idata_load_loop>:
  brlo    idata_load_loop
idata_load_loop_end:

  // Clear uninitialized data having a global lifetime in the blank static storage section.
  lda.w   r0, __bss_start
80002b2c:	a5 05       	ld.d	r4,r2++
  lda.w   r1, _end
80002b2e:	a1 24       	st.d	r0++,r4
  cp      r0, r1
80002b30:	02 30       	cp.w	r0,r1
  brhs    udata_clear_loop_end
80002b32:	cf d3       	brcs	80002b2c <idata_load_loop>

80002b34 <idata_load_loop_end>:
  mov     r2, 0
80002b34:	e0 60 05 10 	mov	r0,1296
  mov     r3, 0
udata_clear_loop:
  st.d    r0++, r2
80002b38:	e0 61 06 60 	mov	r1,1632
  cp      r0, r1
  brlo    udata_clear_loop
80002b3c:	02 30       	cp.w	r0,r1
  // Safety: Set the default "return" @ to the exit routine address.
  lda.w   lr, exit
#endif

  // Start the show.
  lda.w   pc, main
80002b3e:	c0 62       	brcc	80002b4a <udata_clear_loop_end>
80002b40:	30 02       	mov	r2,0
80002b42:	30 03       	mov	r3,0

80002b44 <udata_clear_loop>:
80002b44:	a1 22       	st.d	r0++,r2
80002b46:	02 30       	cp.w	r0,r1
80002b48:	cf e3       	brcs	80002b44 <udata_clear_loop>

80002b4a <udata_clear_loop_end>:
80002b4a:	fe cf fe fa 	sub	pc,pc,-262
80002b4e:	d7 03       	nop

80002b50 <configure_PB_int>:
	}
	gpio_clear_pin_interrupt_flag(GPIO_SET_TIME);
}

void configure_PB_int(void)
{
80002b50:	d4 01       	pushm	lr
	gpio_enable_pin_interrupt(GPIO_SET_TIME, GPIO_FALLING_EDGE); /* Enable interrupt */
80002b52:	30 2b       	mov	r11,2
80002b54:	35 8c       	mov	r12,88
80002b56:	f0 1f 00 06 	mcall	80002b6c <configure_PB_int+0x1c>

	/* Disable interrupts */
	Disable_global_interrupt();
80002b5a:	d3 03       	ssrf	0x10
	/* Connect interrupt routines to interrupt */
    INTC_register_interrupt( &PB_int_handler, AVR32_GPIO_IRQ_0 + (GPIO_SET_TIME/8), AVR32_INTC_INT1);
80002b5c:	30 1a       	mov	r10,1
80002b5e:	34 bb       	mov	r11,75
80002b60:	48 4c       	lddpc	r12,80002b70 <configure_PB_int+0x20>
80002b62:	f0 1f 00 05 	mcall	80002b74 <configure_PB_int+0x24>
	/* Enable interrupts */
	Enable_global_interrupt();
80002b66:	d5 03       	csrf	0x10
}
80002b68:	d8 02       	popm	pc
80002b6a:	00 00       	add	r0,r0
80002b6c:	80 00       	ld.sh	r0,r0[0x0]
80002b6e:	29 e4       	sub	r4,-98
80002b70:	80 00       	ld.sh	r0,r0[0x0]
80002b72:	2b 78       	sub	r8,-73
80002b74:	80 00       	ld.sh	r0,r0[0x0]
80002b76:	2a 58       	sub	r8,-91

80002b78 <PB_int_handler>:
__attribute__((__interrupt__))
#elif __ICCAVR32__
__interrupt
#endif
void PB_int_handler(void) 
{
80002b78:	d4 01       	pushm	lr
	if (gpio_get_pin_interrupt_flag(GPIO_SET_TIME))
80002b7a:	35 8c       	mov	r12,88
80002b7c:	f0 1f 00 0f 	mcall	80002bb8 <PB_int_handler+0x40>
80002b80:	c1 60       	breq	80002bac <PB_int_handler+0x34>
	{
		dip204_set_cursor_position(1,3);
80002b82:	30 3b       	mov	r11,3
80002b84:	30 1c       	mov	r12,1
80002b86:	f0 1f 00 0e 	mcall	80002bbc <PB_int_handler+0x44>
		dip204_write_string("Count: ");
80002b8a:	48 ec       	lddpc	r12,80002bc0 <PB_int_handler+0x48>
80002b8c:	f0 1f 00 0e 	mcall	80002bc4 <PB_int_handler+0x4c>
		dip204_set_cursor_position(8,3);
80002b90:	30 3b       	mov	r11,3
80002b92:	30 8c       	mov	r12,8
80002b94:	f0 1f 00 0a 	mcall	80002bbc <PB_int_handler+0x44>
		dip204_printf_string("%i", count++);
80002b98:	48 c9       	lddpc	r9,80002bc8 <PB_int_handler+0x50>
80002b9a:	13 88       	ld.ub	r8,r9[0x0]
80002b9c:	f0 ca ff ff 	sub	r10,r8,-1
80002ba0:	b2 8a       	st.b	r9[0x0],r10
80002ba2:	1a d8       	st.w	--sp,r8
80002ba4:	48 ac       	lddpc	r12,80002bcc <PB_int_handler+0x54>
80002ba6:	f0 1f 00 0b 	mcall	80002bd0 <PB_int_handler+0x58>
80002baa:	2f fd       	sub	sp,-4
	}
	gpio_clear_pin_interrupt_flag(GPIO_SET_TIME);
80002bac:	35 8c       	mov	r12,88
80002bae:	f0 1f 00 0a 	mcall	80002bd4 <PB_int_handler+0x5c>
}
80002bb2:	d4 02       	popm	lr
80002bb4:	d6 03       	rete
80002bb6:	00 00       	add	r0,r0
80002bb8:	80 00       	ld.sh	r0,r0[0x0]
80002bba:	2a 2a       	sub	r10,-94
80002bbc:	80 00       	ld.sh	r0,r0[0x0]
80002bbe:	21 e8       	sub	r8,30
80002bc0:	80 00       	ld.sh	r0,r0[0x0]
80002bc2:	89 10       	st.w	r4[0x4],r0
80002bc4:	80 00       	ld.sh	r0,r0[0x0]
80002bc6:	21 90       	sub	r0,25
80002bc8:	00 00       	add	r0,r0
80002bca:	06 20       	rsub	r0,r3
80002bcc:	80 00       	ld.sh	r0,r0[0x0]
80002bce:	89 18       	st.w	r4[0x4],r8
80002bd0:	80 00       	ld.sh	r0,r0[0x0]
80002bd2:	20 f8       	sub	r8,15
80002bd4:	80 00       	ld.sh	r0,r0[0x0]
80002bd6:	2a 42       	sub	r2,-92

80002bd8 <config_dip204>:
		dip204_write_data(sec++);
	}
}

void config_dip204(void)
{
80002bd8:	eb cd 40 80 	pushm	r7,lr
80002bdc:	20 4d       	sub	sp,16
	.spck_delay   = 0,
	.trans_delay  = 0,
	.stay_act     = 1,
	.spi_mode     = 0,
	.modfdis      = 1
	};
80002bde:	49 68       	lddpc	r8,80002c34 <config_dip204+0x5c>
80002be0:	1a 97       	mov	r7,sp
80002be2:	f0 ea 00 00 	ld.d	r10,r8[0]
80002be6:	fa eb 00 00 	st.d	sp[0],r10
80002bea:	f0 e8 00 08 	ld.d	r8,r8[8]
80002bee:	fa e9 00 08 	st.d	sp[8],r8
	gpio_enable_module(DIP204_SPI_GPIO_MAP,
80002bf2:	30 4b       	mov	r11,4
80002bf4:	49 1c       	lddpc	r12,80002c38 <config_dip204+0x60>
80002bf6:	f0 1f 00 12 	mcall	80002c3c <config_dip204+0x64>
	sizeof(DIP204_SPI_GPIO_MAP) / sizeof(DIP204_SPI_GPIO_MAP[0]));

	spi_initMaster(DIP204_SPI, &spiOptions2);
80002bfa:	1a 9b       	mov	r11,sp
80002bfc:	fe 7c 28 00 	mov	r12,-55296
80002c00:	f0 1f 00 10 	mcall	80002c40 <config_dip204+0x68>
	spi_selectionMode(DIP204_SPI, 0, 0, 0);
80002c04:	30 09       	mov	r9,0
80002c06:	12 9a       	mov	r10,r9
80002c08:	12 9b       	mov	r11,r9
80002c0a:	fe 7c 28 00 	mov	r12,-55296
80002c0e:	f0 1f 00 0e 	mcall	80002c44 <config_dip204+0x6c>
	spi_enable(DIP204_SPI);
80002c12:	fe 7c 28 00 	mov	r12,-55296
80002c16:	f0 1f 00 0d 	mcall	80002c48 <config_dip204+0x70>
	spi_setupChipReg(DIP204_SPI, &spiOptions2, FOSC0);
80002c1a:	e0 6a 1b 00 	mov	r10,6912
80002c1e:	ea 1a 00 b7 	orh	r10,0xb7
80002c22:	1a 9b       	mov	r11,sp
80002c24:	fe 7c 28 00 	mov	r12,-55296
80002c28:	f0 1f 00 09 	mcall	80002c4c <config_dip204+0x74>
}
80002c2c:	2f cd       	sub	sp,-16
80002c2e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002c32:	00 00       	add	r0,r0
80002c34:	80 00       	ld.sh	r0,r0[0x0]
80002c36:	89 5c       	st.w	r4[0x14],r12
80002c38:	80 00       	ld.sh	r0,r0[0x0]
80002c3a:	89 3c       	st.w	r4[0xc],r12
80002c3c:	80 00       	ld.sh	r0,r0[0x0]
80002c3e:	28 c4       	sub	r4,-116
80002c40:	80 00       	ld.sh	r0,r0[0x0]
80002c42:	25 ce       	sub	lr,92
80002c44:	80 00       	ld.sh	r0,r0[0x0]
80002c46:	26 06       	sub	r6,96
80002c48:	80 00       	ld.sh	r0,r0[0x0]
80002c4a:	27 5c       	sub	r12,117
80002c4c:	80 00       	ld.sh	r0,r0[0x0]
80002c4e:	26 a4       	sub	r4,106

80002c50 <main>:
#include "main.h"

volatile unsigned char count = 0;

int main (void)
{
80002c50:	eb cd 40 e0 	pushm	r5-r7,lr
	unsigned char sec = 0;
	board_init(); /* Initialize board */
80002c54:	f0 1f 00 20 	mcall	80002cd4 <main+0x84>
	config_dip204(); /* Configure display */
80002c58:	f0 1f 00 20 	mcall	80002cd8 <main+0x88>
	configure_PB_int(); /* Configure push button interrupts */
80002c5c:	f0 1f 00 20 	mcall	80002cdc <main+0x8c>
	dip204_init(100, true); /* Initialize display */
80002c60:	30 1b       	mov	r11,1
80002c62:	36 4c       	mov	r12,100
80002c64:	f0 1f 00 1f 	mcall	80002ce0 <main+0x90>

	dip204_clear_display();
80002c68:	f0 1f 00 1f 	mcall	80002ce4 <main+0x94>
	dip204_set_cursor_position(1,1);
80002c6c:	30 1b       	mov	r11,1
80002c6e:	16 9c       	mov	r12,r11
80002c70:	f0 1f 00 1e 	mcall	80002ce8 <main+0x98>
	dip204_write_string("Hello, World!");
80002c74:	49 ec       	lddpc	r12,80002cec <main+0x9c>
80002c76:	f0 1f 00 1f 	mcall	80002cf0 <main+0xa0>
	dip204_set_cursor_position(1,2);
80002c7a:	30 2b       	mov	r11,2
80002c7c:	30 1c       	mov	r12,1
80002c7e:	f0 1f 00 1b 	mcall	80002ce8 <main+0x98>
	dip204_write_string("And the rest");
80002c82:	49 dc       	lddpc	r12,80002cf4 <main+0xa4>
80002c84:	f0 1f 00 1b 	mcall	80002cf0 <main+0xa0>
	dip204_hide_cursor();
80002c88:	f0 1f 00 1c 	mcall	80002cf8 <main+0xa8>
80002c8c:	30 07       	mov	r7,0
	while(1) 
	{
		delay_ms(1000);
		dip204_set_cursor_position(1,4);
80002c8e:	30 46       	mov	r6,4
80002c90:	30 15       	mov	r5,1
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002c92:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002c96:	e0 79 c2 00 	mov	r9,115200
80002c9a:	f0 09 00 0a 	add	r10,r8,r9
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002c9e:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002ca2:	14 38       	cp.w	r8,r10
80002ca4:	e0 88 00 08 	brls	80002cb4 <main+0x64>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002ca8:	12 38       	cp.w	r8,r9
80002caa:	fe 98 ff fa 	brls	80002c9e <main+0x4e>
80002cae:	12 3a       	cp.w	r10,r9
80002cb0:	c0 73       	brcs	80002cbe <main+0x6e>
80002cb2:	cf 6b       	rjmp	80002c9e <main+0x4e>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002cb4:	12 38       	cp.w	r8,r9
80002cb6:	e0 8b 00 04 	brhi	80002cbe <main+0x6e>
80002cba:	12 3a       	cp.w	r10,r9
80002cbc:	cf 12       	brcc	80002c9e <main+0x4e>
80002cbe:	0c 9b       	mov	r11,r6
80002cc0:	0a 9c       	mov	r12,r5
80002cc2:	f0 1f 00 0a 	mcall	80002ce8 <main+0x98>
		dip204_write_data(sec++);
80002cc6:	0e 9c       	mov	r12,r7
80002cc8:	2f f7       	sub	r7,-1
80002cca:	5c 57       	castu.b	r7
80002ccc:	f0 1f 00 0c 	mcall	80002cfc <main+0xac>
	}
80002cd0:	ce 1b       	rjmp	80002c92 <main+0x42>
80002cd2:	00 00       	add	r0,r0
80002cd4:	80 00       	ld.sh	r0,r0[0x0]
80002cd6:	27 a0       	sub	r0,122
80002cd8:	80 00       	ld.sh	r0,r0[0x0]
80002cda:	2b d8       	sub	r8,-67
80002cdc:	80 00       	ld.sh	r0,r0[0x0]
80002cde:	2b 50       	sub	r0,-75
80002ce0:	80 00       	ld.sh	r0,r0[0x0]
80002ce2:	23 00       	sub	r0,48
80002ce4:	80 00       	ld.sh	r0,r0[0x0]
80002ce6:	22 a8       	sub	r8,42
80002ce8:	80 00       	ld.sh	r0,r0[0x0]
80002cea:	21 e8       	sub	r8,30
80002cec:	80 00       	ld.sh	r0,r0[0x0]
80002cee:	89 1c       	st.w	r4[0x4],r12
80002cf0:	80 00       	ld.sh	r0,r0[0x0]
80002cf2:	21 90       	sub	r0,25
80002cf4:	80 00       	ld.sh	r0,r0[0x0]
80002cf6:	89 2c       	st.w	r4[0x8],r12
80002cf8:	80 00       	ld.sh	r0,r0[0x0]
80002cfa:	22 78       	sub	r8,39
80002cfc:	80 00       	ld.sh	r0,r0[0x0]
80002cfe:	22 44       	sub	r4,36

80002d00 <memcpy>:
80002d00:	58 8a       	cp.w	r10,8
80002d02:	c2 f5       	brlt	80002d60 <memcpy+0x60>
80002d04:	f9 eb 10 09 	or	r9,r12,r11
80002d08:	e2 19 00 03 	andl	r9,0x3,COH
80002d0c:	e0 81 00 97 	brne	80002e3a <memcpy+0x13a>
80002d10:	e0 4a 00 20 	cp.w	r10,32
80002d14:	c3 b4       	brge	80002d8a <memcpy+0x8a>
80002d16:	f4 08 14 02 	asr	r8,r10,0x2
80002d1a:	f0 09 11 08 	rsub	r9,r8,8
80002d1e:	fe 09 00 2f 	add	pc,pc,r9<<0x2
80002d22:	76 69       	ld.w	r9,r11[0x18]
80002d24:	99 69       	st.w	r12[0x18],r9
80002d26:	76 59       	ld.w	r9,r11[0x14]
80002d28:	99 59       	st.w	r12[0x14],r9
80002d2a:	76 49       	ld.w	r9,r11[0x10]
80002d2c:	99 49       	st.w	r12[0x10],r9
80002d2e:	76 39       	ld.w	r9,r11[0xc]
80002d30:	99 39       	st.w	r12[0xc],r9
80002d32:	76 29       	ld.w	r9,r11[0x8]
80002d34:	99 29       	st.w	r12[0x8],r9
80002d36:	76 19       	ld.w	r9,r11[0x4]
80002d38:	99 19       	st.w	r12[0x4],r9
80002d3a:	76 09       	ld.w	r9,r11[0x0]
80002d3c:	99 09       	st.w	r12[0x0],r9
80002d3e:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80002d42:	f8 08 00 28 	add	r8,r12,r8<<0x2
80002d46:	e0 1a 00 03 	andl	r10,0x3
80002d4a:	f4 0a 11 04 	rsub	r10,r10,4
80002d4e:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80002d52:	17 a9       	ld.ub	r9,r11[0x2]
80002d54:	b0 a9       	st.b	r8[0x2],r9
80002d56:	17 99       	ld.ub	r9,r11[0x1]
80002d58:	b0 99       	st.b	r8[0x1],r9
80002d5a:	17 89       	ld.ub	r9,r11[0x0]
80002d5c:	b0 89       	st.b	r8[0x0],r9
80002d5e:	5e fc       	retal	r12
80002d60:	f4 0a 11 09 	rsub	r10,r10,9
80002d64:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80002d68:	17 f9       	ld.ub	r9,r11[0x7]
80002d6a:	b8 f9       	st.b	r12[0x7],r9
80002d6c:	17 e9       	ld.ub	r9,r11[0x6]
80002d6e:	b8 e9       	st.b	r12[0x6],r9
80002d70:	17 d9       	ld.ub	r9,r11[0x5]
80002d72:	b8 d9       	st.b	r12[0x5],r9
80002d74:	17 c9       	ld.ub	r9,r11[0x4]
80002d76:	b8 c9       	st.b	r12[0x4],r9
80002d78:	17 b9       	ld.ub	r9,r11[0x3]
80002d7a:	b8 b9       	st.b	r12[0x3],r9
80002d7c:	17 a9       	ld.ub	r9,r11[0x2]
80002d7e:	b8 a9       	st.b	r12[0x2],r9
80002d80:	17 99       	ld.ub	r9,r11[0x1]
80002d82:	b8 99       	st.b	r12[0x1],r9
80002d84:	17 89       	ld.ub	r9,r11[0x0]
80002d86:	b8 89       	st.b	r12[0x0],r9
80002d88:	5e fc       	retal	r12
80002d8a:	eb cd 40 c0 	pushm	r6-r7,lr
80002d8e:	18 99       	mov	r9,r12
80002d90:	22 0a       	sub	r10,32
80002d92:	b7 07       	ld.d	r6,r11++
80002d94:	b3 26       	st.d	r9++,r6
80002d96:	b7 07       	ld.d	r6,r11++
80002d98:	b3 26       	st.d	r9++,r6
80002d9a:	b7 07       	ld.d	r6,r11++
80002d9c:	b3 26       	st.d	r9++,r6
80002d9e:	b7 07       	ld.d	r6,r11++
80002da0:	b3 26       	st.d	r9++,r6
80002da2:	22 0a       	sub	r10,32
80002da4:	cf 74       	brge	80002d92 <memcpy+0x92>
80002da6:	2f 0a       	sub	r10,-16
80002da8:	c0 65       	brlt	80002db4 <memcpy+0xb4>
80002daa:	b7 07       	ld.d	r6,r11++
80002dac:	b3 26       	st.d	r9++,r6
80002dae:	b7 07       	ld.d	r6,r11++
80002db0:	b3 26       	st.d	r9++,r6
80002db2:	21 0a       	sub	r10,16
80002db4:	5c 3a       	neg	r10
80002db6:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
80002dba:	d7 03       	nop
80002dbc:	d7 03       	nop
80002dbe:	f7 36 00 0e 	ld.ub	r6,r11[14]
80002dc2:	f3 66 00 0e 	st.b	r9[14],r6
80002dc6:	f7 36 00 0d 	ld.ub	r6,r11[13]
80002dca:	f3 66 00 0d 	st.b	r9[13],r6
80002dce:	f7 36 00 0c 	ld.ub	r6,r11[12]
80002dd2:	f3 66 00 0c 	st.b	r9[12],r6
80002dd6:	f7 36 00 0b 	ld.ub	r6,r11[11]
80002dda:	f3 66 00 0b 	st.b	r9[11],r6
80002dde:	f7 36 00 0a 	ld.ub	r6,r11[10]
80002de2:	f3 66 00 0a 	st.b	r9[10],r6
80002de6:	f7 36 00 09 	ld.ub	r6,r11[9]
80002dea:	f3 66 00 09 	st.b	r9[9],r6
80002dee:	f7 36 00 08 	ld.ub	r6,r11[8]
80002df2:	f3 66 00 08 	st.b	r9[8],r6
80002df6:	f7 36 00 07 	ld.ub	r6,r11[7]
80002dfa:	f3 66 00 07 	st.b	r9[7],r6
80002dfe:	f7 36 00 06 	ld.ub	r6,r11[6]
80002e02:	f3 66 00 06 	st.b	r9[6],r6
80002e06:	f7 36 00 05 	ld.ub	r6,r11[5]
80002e0a:	f3 66 00 05 	st.b	r9[5],r6
80002e0e:	f7 36 00 04 	ld.ub	r6,r11[4]
80002e12:	f3 66 00 04 	st.b	r9[4],r6
80002e16:	f7 36 00 03 	ld.ub	r6,r11[3]
80002e1a:	f3 66 00 03 	st.b	r9[3],r6
80002e1e:	f7 36 00 02 	ld.ub	r6,r11[2]
80002e22:	f3 66 00 02 	st.b	r9[2],r6
80002e26:	f7 36 00 01 	ld.ub	r6,r11[1]
80002e2a:	f3 66 00 01 	st.b	r9[1],r6
80002e2e:	f7 36 00 00 	ld.ub	r6,r11[0]
80002e32:	f3 66 00 00 	st.b	r9[0],r6
80002e36:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002e3a:	20 1a       	sub	r10,1
80002e3c:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80002e40:	f8 0a 0b 09 	st.b	r12[r10],r9
80002e44:	cf b1       	brne	80002e3a <memcpy+0x13a>
80002e46:	5e fc       	retal	r12

80002e48 <_vsprintf_r>:
80002e48:	d4 01       	pushm	lr
80002e4a:	21 7d       	sub	sp,92
80002e4c:	e0 68 ff ff 	mov	r8,65535
80002e50:	ea 18 7f ff 	orh	r8,0x7fff
80002e54:	50 58       	stdsp	sp[0x14],r8
80002e56:	50 28       	stdsp	sp[0x8],r8
80002e58:	e0 68 02 08 	mov	r8,520
80002e5c:	ba 68       	st.h	sp[0xc],r8
80002e5e:	3f f8       	mov	r8,-1
80002e60:	50 4b       	stdsp	sp[0x10],r11
80002e62:	50 0b       	stdsp	sp[0x0],r11
80002e64:	ba 78       	st.h	sp[0xe],r8
80002e66:	1a 9b       	mov	r11,sp
80002e68:	ca 8d       	rcall	800031b8 <_vfprintf_r>
80002e6a:	30 09       	mov	r9,0
80002e6c:	40 08       	lddsp	r8,sp[0x0]
80002e6e:	b0 89       	st.b	r8[0x0],r9
80002e70:	2e 9d       	sub	sp,-92
80002e72:	d8 02       	popm	pc

80002e74 <vsprintf>:
80002e74:	d4 01       	pushm	lr
80002e76:	e0 68 00 fc 	mov	r8,252
80002e7a:	14 99       	mov	r9,r10
80002e7c:	16 9a       	mov	r10,r11
80002e7e:	18 9b       	mov	r11,r12
80002e80:	70 0c       	ld.w	r12,r8[0x0]
80002e82:	ce 3f       	rcall	80002e48 <_vsprintf_r>
80002e84:	d8 02       	popm	pc
80002e86:	d7 03       	nop

80002e88 <get_arg>:
80002e88:	d4 31       	pushm	r0-r7,lr
80002e8a:	20 8d       	sub	sp,32
80002e8c:	fa c4 ff bc 	sub	r4,sp,-68
80002e90:	50 4b       	stdsp	sp[0x10],r11
80002e92:	68 2e       	ld.w	lr,r4[0x8]
80002e94:	50 58       	stdsp	sp[0x14],r8
80002e96:	12 96       	mov	r6,r9
80002e98:	7c 0b       	ld.w	r11,lr[0x0]
80002e9a:	70 05       	ld.w	r5,r8[0x0]
80002e9c:	50 6e       	stdsp	sp[0x18],lr
80002e9e:	58 0b       	cp.w	r11,0
80002ea0:	f4 0b 17 00 	moveq	r11,r10
80002ea4:	68 03       	ld.w	r3,r4[0x0]
80002ea6:	68 11       	ld.w	r1,r4[0x4]
80002ea8:	40 49       	lddsp	r9,sp[0x10]
80002eaa:	30 08       	mov	r8,0
80002eac:	c2 89       	rjmp	800030fc <get_arg+0x274>
80002eae:	2f fb       	sub	r11,-1
80002eb0:	32 5c       	mov	r12,37
80002eb2:	17 8a       	ld.ub	r10,r11[0x0]
80002eb4:	f8 0a 18 00 	cp.b	r10,r12
80002eb8:	5f 1e       	srne	lr
80002eba:	f0 0a 18 00 	cp.b	r10,r8
80002ebe:	5f 1c       	srne	r12
80002ec0:	fd ec 00 0c 	and	r12,lr,r12
80002ec4:	f0 0c 18 00 	cp.b	r12,r8
80002ec8:	cf 31       	brne	80002eae <get_arg+0x26>
80002eca:	58 0a       	cp.w	r10,0
80002ecc:	e0 80 01 25 	breq	80003116 <get_arg+0x28e>
80002ed0:	30 0c       	mov	r12,0
80002ed2:	3f fa       	mov	r10,-1
80002ed4:	18 90       	mov	r0,r12
80002ed6:	50 3a       	stdsp	sp[0xc],r10
80002ed8:	18 94       	mov	r4,r12
80002eda:	18 92       	mov	r2,r12
80002edc:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
80002ee0:	16 97       	mov	r7,r11
80002ee2:	50 7c       	stdsp	sp[0x1c],r12
80002ee4:	fe cc a2 9c 	sub	r12,pc,-23908
80002ee8:	0f 3a       	ld.ub	r10,r7++
80002eea:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
80002eee:	40 7c       	lddsp	r12,sp[0x1c]
80002ef0:	1c 0c       	add	r12,lr
80002ef2:	fe ce a3 72 	sub	lr,pc,-23694
80002ef6:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
80002efa:	20 1e       	sub	lr,1
80002efc:	50 0e       	stdsp	sp[0x0],lr
80002efe:	fe ce a3 ea 	sub	lr,pc,-23574
80002f02:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
80002f06:	50 7c       	stdsp	sp[0x1c],r12
80002f08:	40 0c       	lddsp	r12,sp[0x0]
80002f0a:	58 7c       	cp.w	r12,7
80002f0c:	e0 8b 00 f1 	brhi	800030ee <get_arg+0x266>
80002f10:	fe ce a5 9c 	sub	lr,pc,-23140
80002f14:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
80002f18:	36 8b       	mov	r11,104
80002f1a:	f6 0a 18 00 	cp.b	r10,r11
80002f1e:	e0 80 00 e8 	breq	800030ee <get_arg+0x266>
80002f22:	37 1b       	mov	r11,113
80002f24:	f6 0a 18 00 	cp.b	r10,r11
80002f28:	c0 70       	breq	80002f36 <get_arg+0xae>
80002f2a:	34 cb       	mov	r11,76
80002f2c:	f6 0a 18 00 	cp.b	r10,r11
80002f30:	c0 51       	brne	80002f3a <get_arg+0xb2>
80002f32:	a3 b4       	sbr	r4,0x3
80002f34:	cd d8       	rjmp	800030ee <get_arg+0x266>
80002f36:	a5 b4       	sbr	r4,0x5
80002f38:	cd b8       	rjmp	800030ee <get_arg+0x266>
80002f3a:	08 9a       	mov	r10,r4
80002f3c:	0e 9b       	mov	r11,r7
80002f3e:	a5 aa       	sbr	r10,0x4
80002f40:	17 3c       	ld.ub	r12,r11++
80002f42:	a5 b4       	sbr	r4,0x5
80002f44:	36 ce       	mov	lr,108
80002f46:	fc 0c 18 00 	cp.b	r12,lr
80002f4a:	e0 80 00 d3 	breq	800030f0 <get_arg+0x268>
80002f4e:	14 94       	mov	r4,r10
80002f50:	cc f8       	rjmp	800030ee <get_arg+0x266>
80002f52:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
80002f56:	36 7c       	mov	r12,103
80002f58:	f8 0a 18 00 	cp.b	r10,r12
80002f5c:	e0 8b 00 27 	brhi	80002faa <get_arg+0x122>
80002f60:	36 5b       	mov	r11,101
80002f62:	f6 0a 18 00 	cp.b	r10,r11
80002f66:	c4 82       	brcc	80002ff6 <get_arg+0x16e>
80002f68:	34 fb       	mov	r11,79
80002f6a:	f6 0a 18 00 	cp.b	r10,r11
80002f6e:	c4 80       	breq	80002ffe <get_arg+0x176>
80002f70:	e0 8b 00 0c 	brhi	80002f88 <get_arg+0x100>
80002f74:	34 5b       	mov	r11,69
80002f76:	f6 0a 18 00 	cp.b	r10,r11
80002f7a:	c3 e0       	breq	80002ff6 <get_arg+0x16e>
80002f7c:	34 7b       	mov	r11,71
80002f7e:	f6 0a 18 00 	cp.b	r10,r11
80002f82:	c3 a0       	breq	80002ff6 <get_arg+0x16e>
80002f84:	34 4b       	mov	r11,68
80002f86:	c0 88       	rjmp	80002f96 <get_arg+0x10e>
80002f88:	35 8b       	mov	r11,88
80002f8a:	f6 0a 18 00 	cp.b	r10,r11
80002f8e:	c2 c0       	breq	80002fe6 <get_arg+0x15e>
80002f90:	e0 8b 00 07 	brhi	80002f9e <get_arg+0x116>
80002f94:	35 5b       	mov	r11,85
80002f96:	f6 0a 18 00 	cp.b	r10,r11
80002f9a:	c3 51       	brne	80003004 <get_arg+0x17c>
80002f9c:	c3 18       	rjmp	80002ffe <get_arg+0x176>
80002f9e:	36 3b       	mov	r11,99
80002fa0:	f6 0a 18 00 	cp.b	r10,r11
80002fa4:	c2 f0       	breq	80003002 <get_arg+0x17a>
80002fa6:	36 4b       	mov	r11,100
80002fa8:	c0 e8       	rjmp	80002fc4 <get_arg+0x13c>
80002faa:	37 0b       	mov	r11,112
80002fac:	f6 0a 18 00 	cp.b	r10,r11
80002fb0:	c2 50       	breq	80002ffa <get_arg+0x172>
80002fb2:	e0 8b 00 0d 	brhi	80002fcc <get_arg+0x144>
80002fb6:	36 eb       	mov	r11,110
80002fb8:	f6 0a 18 00 	cp.b	r10,r11
80002fbc:	c1 f0       	breq	80002ffa <get_arg+0x172>
80002fbe:	e0 8b 00 14 	brhi	80002fe6 <get_arg+0x15e>
80002fc2:	36 9b       	mov	r11,105
80002fc4:	f6 0a 18 00 	cp.b	r10,r11
80002fc8:	c1 e1       	brne	80003004 <get_arg+0x17c>
80002fca:	c0 e8       	rjmp	80002fe6 <get_arg+0x15e>
80002fcc:	37 5b       	mov	r11,117
80002fce:	f6 0a 18 00 	cp.b	r10,r11
80002fd2:	c0 a0       	breq	80002fe6 <get_arg+0x15e>
80002fd4:	37 8b       	mov	r11,120
80002fd6:	f6 0a 18 00 	cp.b	r10,r11
80002fda:	c0 60       	breq	80002fe6 <get_arg+0x15e>
80002fdc:	37 3b       	mov	r11,115
80002fde:	f6 0a 18 00 	cp.b	r10,r11
80002fe2:	c1 11       	brne	80003004 <get_arg+0x17c>
80002fe4:	c0 b8       	rjmp	80002ffa <get_arg+0x172>
80002fe6:	ed b4 00 04 	bld	r4,0x4
80002fea:	c0 a0       	breq	80002ffe <get_arg+0x176>
80002fec:	ed b4 00 05 	bld	r4,0x5
80002ff0:	c0 91       	brne	80003002 <get_arg+0x17a>
80002ff2:	30 20       	mov	r0,2
80002ff4:	c0 88       	rjmp	80003004 <get_arg+0x17c>
80002ff6:	30 40       	mov	r0,4
80002ff8:	c0 68       	rjmp	80003004 <get_arg+0x17c>
80002ffa:	30 30       	mov	r0,3
80002ffc:	c0 48       	rjmp	80003004 <get_arg+0x17c>
80002ffe:	30 10       	mov	r0,1
80003000:	c0 28       	rjmp	80003004 <get_arg+0x17c>
80003002:	30 00       	mov	r0,0
80003004:	40 3b       	lddsp	r11,sp[0xc]
80003006:	5b fb       	cp.w	r11,-1
80003008:	c0 40       	breq	80003010 <get_arg+0x188>
8000300a:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
8000300e:	c7 08       	rjmp	800030ee <get_arg+0x266>
80003010:	58 60       	cp.w	r0,6
80003012:	e0 8b 00 6e 	brhi	800030ee <get_arg+0x266>
80003016:	6c 0a       	ld.w	r10,r6[0x0]
80003018:	ea cc ff ff 	sub	r12,r5,-1
8000301c:	fe ce a6 88 	sub	lr,pc,-22904
80003020:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
80003024:	f4 cb ff f8 	sub	r11,r10,-8
80003028:	8d 0b       	st.w	r6[0x0],r11
8000302a:	f4 ea 00 00 	ld.d	r10,r10[0]
8000302e:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003032:	c0 f8       	rjmp	80003050 <get_arg+0x1c8>
80003034:	f4 cb ff fc 	sub	r11,r10,-4
80003038:	8d 0b       	st.w	r6[0x0],r11
8000303a:	74 0a       	ld.w	r10,r10[0x0]
8000303c:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003040:	c0 88       	rjmp	80003050 <get_arg+0x1c8>
80003042:	f4 cb ff f8 	sub	r11,r10,-8
80003046:	8d 0b       	st.w	r6[0x0],r11
80003048:	f4 ea 00 00 	ld.d	r10,r10[0]
8000304c:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003050:	0e 9b       	mov	r11,r7
80003052:	18 95       	mov	r5,r12
80003054:	c4 e8       	rjmp	800030f0 <get_arg+0x268>
80003056:	62 0a       	ld.w	r10,r1[0x0]
80003058:	5b fa       	cp.w	r10,-1
8000305a:	c0 b1       	brne	80003070 <get_arg+0x1e8>
8000305c:	50 19       	stdsp	sp[0x4],r9
8000305e:	50 28       	stdsp	sp[0x8],r8
80003060:	e0 6a 00 80 	mov	r10,128
80003064:	30 0b       	mov	r11,0
80003066:	02 9c       	mov	r12,r1
80003068:	e0 a0 1d 78 	rcall	80006b58 <memset>
8000306c:	40 28       	lddsp	r8,sp[0x8]
8000306e:	40 19       	lddsp	r9,sp[0x4]
80003070:	e4 cc 00 01 	sub	r12,r2,1
80003074:	0e 9b       	mov	r11,r7
80003076:	50 3c       	stdsp	sp[0xc],r12
80003078:	f2 0c 0c 49 	max	r9,r9,r12
8000307c:	c3 a8       	rjmp	800030f0 <get_arg+0x268>
8000307e:	62 0a       	ld.w	r10,r1[0x0]
80003080:	5b fa       	cp.w	r10,-1
80003082:	c0 b1       	brne	80003098 <get_arg+0x210>
80003084:	50 19       	stdsp	sp[0x4],r9
80003086:	50 28       	stdsp	sp[0x8],r8
80003088:	e0 6a 00 80 	mov	r10,128
8000308c:	30 0b       	mov	r11,0
8000308e:	02 9c       	mov	r12,r1
80003090:	e0 a0 1d 64 	rcall	80006b58 <memset>
80003094:	40 28       	lddsp	r8,sp[0x8]
80003096:	40 19       	lddsp	r9,sp[0x4]
80003098:	20 12       	sub	r2,1
8000309a:	30 0a       	mov	r10,0
8000309c:	0e 9b       	mov	r11,r7
8000309e:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
800030a2:	f2 02 0c 49 	max	r9,r9,r2
800030a6:	c2 58       	rjmp	800030f0 <get_arg+0x268>
800030a8:	16 97       	mov	r7,r11
800030aa:	6c 0a       	ld.w	r10,r6[0x0]
800030ac:	f4 cb ff fc 	sub	r11,r10,-4
800030b0:	8d 0b       	st.w	r6[0x0],r11
800030b2:	74 0a       	ld.w	r10,r10[0x0]
800030b4:	0e 9b       	mov	r11,r7
800030b6:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
800030ba:	2f f5       	sub	r5,-1
800030bc:	c1 a8       	rjmp	800030f0 <get_arg+0x268>
800030be:	f4 c2 00 30 	sub	r2,r10,48
800030c2:	c0 68       	rjmp	800030ce <get_arg+0x246>
800030c4:	e4 02 00 22 	add	r2,r2,r2<<0x2
800030c8:	2f f7       	sub	r7,-1
800030ca:	f4 02 00 12 	add	r2,r10,r2<<0x1
800030ce:	0f 8a       	ld.ub	r10,r7[0x0]
800030d0:	58 0a       	cp.w	r10,0
800030d2:	c0 e0       	breq	800030ee <get_arg+0x266>
800030d4:	23 0a       	sub	r10,48
800030d6:	58 9a       	cp.w	r10,9
800030d8:	fe 98 ff f6 	brls	800030c4 <get_arg+0x23c>
800030dc:	c0 98       	rjmp	800030ee <get_arg+0x266>
800030de:	2f f7       	sub	r7,-1
800030e0:	0f 8a       	ld.ub	r10,r7[0x0]
800030e2:	58 0a       	cp.w	r10,0
800030e4:	c0 50       	breq	800030ee <get_arg+0x266>
800030e6:	23 0a       	sub	r10,48
800030e8:	58 9a       	cp.w	r10,9
800030ea:	fe 98 ff fa 	brls	800030de <get_arg+0x256>
800030ee:	0e 9b       	mov	r11,r7
800030f0:	40 7c       	lddsp	r12,sp[0x1c]
800030f2:	30 ba       	mov	r10,11
800030f4:	f4 0c 18 00 	cp.b	r12,r10
800030f8:	fe 91 fe f2 	brne	80002edc <get_arg+0x54>
800030fc:	40 42       	lddsp	r2,sp[0x10]
800030fe:	17 8c       	ld.ub	r12,r11[0x0]
80003100:	0a 32       	cp.w	r2,r5
80003102:	5f 4a       	srge	r10
80003104:	f0 0c 18 00 	cp.b	r12,r8
80003108:	5f 1c       	srne	r12
8000310a:	f9 ea 00 0a 	and	r10,r12,r10
8000310e:	f0 0a 18 00 	cp.b	r10,r8
80003112:	fe 91 fe cf 	brne	80002eb0 <get_arg+0x28>
80003116:	30 08       	mov	r8,0
80003118:	40 4e       	lddsp	lr,sp[0x10]
8000311a:	17 8a       	ld.ub	r10,r11[0x0]
8000311c:	e2 05 00 21 	add	r1,r1,r5<<0x2
80003120:	f0 0a 18 00 	cp.b	r10,r8
80003124:	fc 09 17 10 	movne	r9,lr
80003128:	e6 05 00 38 	add	r8,r3,r5<<0x3
8000312c:	06 9e       	mov	lr,r3
8000312e:	c2 a8       	rjmp	80003182 <get_arg+0x2fa>
80003130:	62 0a       	ld.w	r10,r1[0x0]
80003132:	58 3a       	cp.w	r10,3
80003134:	c1 e0       	breq	80003170 <get_arg+0x2e8>
80003136:	e0 89 00 07 	brgt	80003144 <get_arg+0x2bc>
8000313a:	58 1a       	cp.w	r10,1
8000313c:	c1 a0       	breq	80003170 <get_arg+0x2e8>
8000313e:	58 2a       	cp.w	r10,2
80003140:	c1 81       	brne	80003170 <get_arg+0x2e8>
80003142:	c0 58       	rjmp	8000314c <get_arg+0x2c4>
80003144:	58 5a       	cp.w	r10,5
80003146:	c0 c0       	breq	8000315e <get_arg+0x2d6>
80003148:	c0 b5       	brlt	8000315e <get_arg+0x2d6>
8000314a:	c1 38       	rjmp	80003170 <get_arg+0x2e8>
8000314c:	6c 0a       	ld.w	r10,r6[0x0]
8000314e:	f4 cc ff f8 	sub	r12,r10,-8
80003152:	8d 0c       	st.w	r6[0x0],r12
80003154:	f4 e2 00 00 	ld.d	r2,r10[0]
80003158:	f0 e3 00 00 	st.d	r8[0],r2
8000315c:	c1 08       	rjmp	8000317c <get_arg+0x2f4>
8000315e:	6c 0a       	ld.w	r10,r6[0x0]
80003160:	f4 cc ff f8 	sub	r12,r10,-8
80003164:	8d 0c       	st.w	r6[0x0],r12
80003166:	f4 e2 00 00 	ld.d	r2,r10[0]
8000316a:	f0 e3 00 00 	st.d	r8[0],r2
8000316e:	c0 78       	rjmp	8000317c <get_arg+0x2f4>
80003170:	6c 0a       	ld.w	r10,r6[0x0]
80003172:	f4 cc ff fc 	sub	r12,r10,-4
80003176:	8d 0c       	st.w	r6[0x0],r12
80003178:	74 0a       	ld.w	r10,r10[0x0]
8000317a:	91 0a       	st.w	r8[0x0],r10
8000317c:	2f f5       	sub	r5,-1
8000317e:	2f 88       	sub	r8,-8
80003180:	2f c1       	sub	r1,-4
80003182:	12 35       	cp.w	r5,r9
80003184:	fe 9a ff d6 	brle	80003130 <get_arg+0x2a8>
80003188:	1c 93       	mov	r3,lr
8000318a:	40 52       	lddsp	r2,sp[0x14]
8000318c:	40 6e       	lddsp	lr,sp[0x18]
8000318e:	85 05       	st.w	r2[0x0],r5
80003190:	9d 0b       	st.w	lr[0x0],r11
80003192:	40 4b       	lddsp	r11,sp[0x10]
80003194:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
80003198:	2f 8d       	sub	sp,-32
8000319a:	d8 32       	popm	r0-r7,pc

8000319c <__sprint_r>:
8000319c:	d4 21       	pushm	r4-r7,lr
8000319e:	14 97       	mov	r7,r10
800031a0:	74 28       	ld.w	r8,r10[0x8]
800031a2:	58 08       	cp.w	r8,0
800031a4:	c0 41       	brne	800031ac <__sprint_r+0x10>
800031a6:	95 18       	st.w	r10[0x4],r8
800031a8:	10 9c       	mov	r12,r8
800031aa:	d8 22       	popm	r4-r7,pc
800031ac:	e0 a0 18 b4 	rcall	80006314 <__sfvwrite_r>
800031b0:	30 08       	mov	r8,0
800031b2:	8f 18       	st.w	r7[0x4],r8
800031b4:	8f 28       	st.w	r7[0x8],r8
800031b6:	d8 22       	popm	r4-r7,pc

800031b8 <_vfprintf_r>:
800031b8:	d4 31       	pushm	r0-r7,lr
800031ba:	fa cd 06 bc 	sub	sp,sp,1724
800031be:	51 09       	stdsp	sp[0x40],r9
800031c0:	16 91       	mov	r1,r11
800031c2:	14 97       	mov	r7,r10
800031c4:	18 95       	mov	r5,r12
800031c6:	e0 a0 1a 1d 	rcall	80006600 <_localeconv_r>
800031ca:	78 0c       	ld.w	r12,r12[0x0]
800031cc:	50 cc       	stdsp	sp[0x30],r12
800031ce:	58 05       	cp.w	r5,0
800031d0:	c0 70       	breq	800031de <_vfprintf_r+0x26>
800031d2:	6a 68       	ld.w	r8,r5[0x18]
800031d4:	58 08       	cp.w	r8,0
800031d6:	c0 41       	brne	800031de <_vfprintf_r+0x26>
800031d8:	0a 9c       	mov	r12,r5
800031da:	e0 a0 17 3d 	rcall	80006054 <__sinit>
800031de:	fe c8 a4 86 	sub	r8,pc,-23418
800031e2:	10 31       	cp.w	r1,r8
800031e4:	c0 31       	brne	800031ea <_vfprintf_r+0x32>
800031e6:	6a 01       	ld.w	r1,r5[0x0]
800031e8:	c0 c8       	rjmp	80003200 <_vfprintf_r+0x48>
800031ea:	fe c8 a4 72 	sub	r8,pc,-23438
800031ee:	10 31       	cp.w	r1,r8
800031f0:	c0 31       	brne	800031f6 <_vfprintf_r+0x3e>
800031f2:	6a 11       	ld.w	r1,r5[0x4]
800031f4:	c0 68       	rjmp	80003200 <_vfprintf_r+0x48>
800031f6:	fe c8 a4 5e 	sub	r8,pc,-23458
800031fa:	10 31       	cp.w	r1,r8
800031fc:	eb f1 00 02 	ld.weq	r1,r5[0x8]
80003200:	82 68       	ld.sh	r8,r1[0xc]
80003202:	ed b8 00 03 	bld	r8,0x3
80003206:	c0 41       	brne	8000320e <_vfprintf_r+0x56>
80003208:	62 48       	ld.w	r8,r1[0x10]
8000320a:	58 08       	cp.w	r8,0
8000320c:	c0 71       	brne	8000321a <_vfprintf_r+0x62>
8000320e:	02 9b       	mov	r11,r1
80003210:	0a 9c       	mov	r12,r5
80003212:	e0 a0 0f 5d 	rcall	800050cc <__swsetup_r>
80003216:	e0 81 0f 54 	brne	800050be <_vfprintf_r+0x1f06>
8000321a:	82 68       	ld.sh	r8,r1[0xc]
8000321c:	10 99       	mov	r9,r8
8000321e:	e2 19 00 1a 	andl	r9,0x1a,COH
80003222:	58 a9       	cp.w	r9,10
80003224:	c3 c1       	brne	8000329c <_vfprintf_r+0xe4>
80003226:	82 79       	ld.sh	r9,r1[0xe]
80003228:	30 0a       	mov	r10,0
8000322a:	f4 09 19 00 	cp.h	r9,r10
8000322e:	c3 75       	brlt	8000329c <_vfprintf_r+0xe4>
80003230:	a1 d8       	cbr	r8,0x1
80003232:	fb 58 05 d0 	st.h	sp[1488],r8
80003236:	62 88       	ld.w	r8,r1[0x20]
80003238:	fb 48 05 e4 	st.w	sp[1508],r8
8000323c:	62 a8       	ld.w	r8,r1[0x28]
8000323e:	fb 48 05 ec 	st.w	sp[1516],r8
80003242:	fa c8 ff bc 	sub	r8,sp,-68
80003246:	fb 48 05 d4 	st.w	sp[1492],r8
8000324a:	fb 48 05 c4 	st.w	sp[1476],r8
8000324e:	e0 68 04 00 	mov	r8,1024
80003252:	fb 48 05 d8 	st.w	sp[1496],r8
80003256:	fb 48 05 cc 	st.w	sp[1484],r8
8000325a:	30 08       	mov	r8,0
8000325c:	fb 59 05 d2 	st.h	sp[1490],r9
80003260:	0e 9a       	mov	r10,r7
80003262:	41 09       	lddsp	r9,sp[0x40]
80003264:	fa c7 fa 3c 	sub	r7,sp,-1476
80003268:	fb 48 05 dc 	st.w	sp[1500],r8
8000326c:	0a 9c       	mov	r12,r5
8000326e:	0e 9b       	mov	r11,r7
80003270:	ca 4f       	rcall	800031b8 <_vfprintf_r>
80003272:	50 bc       	stdsp	sp[0x2c],r12
80003274:	c0 95       	brlt	80003286 <_vfprintf_r+0xce>
80003276:	0e 9b       	mov	r11,r7
80003278:	0a 9c       	mov	r12,r5
8000327a:	e0 a0 16 15 	rcall	80005ea4 <_fflush_r>
8000327e:	40 be       	lddsp	lr,sp[0x2c]
80003280:	f9 be 01 ff 	movne	lr,-1
80003284:	50 be       	stdsp	sp[0x2c],lr
80003286:	fb 08 05 d0 	ld.sh	r8,sp[1488]
8000328a:	ed b8 00 06 	bld	r8,0x6
8000328e:	e0 81 0f 1a 	brne	800050c2 <_vfprintf_r+0x1f0a>
80003292:	82 68       	ld.sh	r8,r1[0xc]
80003294:	a7 a8       	sbr	r8,0x6
80003296:	a2 68       	st.h	r1[0xc],r8
80003298:	e0 8f 0f 15 	bral	800050c2 <_vfprintf_r+0x1f0a>
8000329c:	30 08       	mov	r8,0
8000329e:	fb 48 06 b4 	st.w	sp[1716],r8
800032a2:	fb 48 06 90 	st.w	sp[1680],r8
800032a6:	fb 48 06 8c 	st.w	sp[1676],r8
800032aa:	fb 48 06 b0 	st.w	sp[1712],r8
800032ae:	30 08       	mov	r8,0
800032b0:	30 09       	mov	r9,0
800032b2:	50 a7       	stdsp	sp[0x28],r7
800032b4:	50 78       	stdsp	sp[0x1c],r8
800032b6:	fa c3 f9 e0 	sub	r3,sp,-1568
800032ba:	3f f8       	mov	r8,-1
800032bc:	50 59       	stdsp	sp[0x14],r9
800032be:	fb 43 06 88 	st.w	sp[1672],r3
800032c2:	fb 48 05 44 	st.w	sp[1348],r8
800032c6:	12 9c       	mov	r12,r9
800032c8:	50 69       	stdsp	sp[0x18],r9
800032ca:	50 d9       	stdsp	sp[0x34],r9
800032cc:	50 e9       	stdsp	sp[0x38],r9
800032ce:	50 b9       	stdsp	sp[0x2c],r9
800032d0:	12 97       	mov	r7,r9
800032d2:	0a 94       	mov	r4,r5
800032d4:	40 a2       	lddsp	r2,sp[0x28]
800032d6:	32 5a       	mov	r10,37
800032d8:	30 08       	mov	r8,0
800032da:	c0 28       	rjmp	800032de <_vfprintf_r+0x126>
800032dc:	2f f2       	sub	r2,-1
800032de:	05 89       	ld.ub	r9,r2[0x0]
800032e0:	f0 09 18 00 	cp.b	r9,r8
800032e4:	5f 1b       	srne	r11
800032e6:	f4 09 18 00 	cp.b	r9,r10
800032ea:	5f 19       	srne	r9
800032ec:	f3 eb 00 0b 	and	r11,r9,r11
800032f0:	f0 0b 18 00 	cp.b	r11,r8
800032f4:	cf 41       	brne	800032dc <_vfprintf_r+0x124>
800032f6:	40 ab       	lddsp	r11,sp[0x28]
800032f8:	e4 0b 01 06 	sub	r6,r2,r11
800032fc:	c1 e0       	breq	80003338 <_vfprintf_r+0x180>
800032fe:	fa f8 06 90 	ld.w	r8,sp[1680]
80003302:	0c 08       	add	r8,r6
80003304:	87 0b       	st.w	r3[0x0],r11
80003306:	fb 48 06 90 	st.w	sp[1680],r8
8000330a:	87 16       	st.w	r3[0x4],r6
8000330c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80003310:	2f f8       	sub	r8,-1
80003312:	fb 48 06 8c 	st.w	sp[1676],r8
80003316:	58 78       	cp.w	r8,7
80003318:	e0 89 00 04 	brgt	80003320 <_vfprintf_r+0x168>
8000331c:	2f 83       	sub	r3,-8
8000331e:	c0 a8       	rjmp	80003332 <_vfprintf_r+0x17a>
80003320:	fa ca f9 78 	sub	r10,sp,-1672
80003324:	02 9b       	mov	r11,r1
80003326:	08 9c       	mov	r12,r4
80003328:	c3 af       	rcall	8000319c <__sprint_r>
8000332a:	e0 81 0e c6 	brne	800050b6 <_vfprintf_r+0x1efe>
8000332e:	fa c3 f9 e0 	sub	r3,sp,-1568
80003332:	40 ba       	lddsp	r10,sp[0x2c]
80003334:	0c 0a       	add	r10,r6
80003336:	50 ba       	stdsp	sp[0x2c],r10
80003338:	05 89       	ld.ub	r9,r2[0x0]
8000333a:	30 08       	mov	r8,0
8000333c:	f0 09 18 00 	cp.b	r9,r8
80003340:	e0 80 0e aa 	breq	80005094 <_vfprintf_r+0x1edc>
80003344:	30 09       	mov	r9,0
80003346:	fb 68 06 bb 	st.b	sp[1723],r8
8000334a:	0e 96       	mov	r6,r7
8000334c:	e4 c8 ff ff 	sub	r8,r2,-1
80003350:	3f fe       	mov	lr,-1
80003352:	50 93       	stdsp	sp[0x24],r3
80003354:	50 41       	stdsp	sp[0x10],r1
80003356:	0e 93       	mov	r3,r7
80003358:	04 91       	mov	r1,r2
8000335a:	50 89       	stdsp	sp[0x20],r9
8000335c:	50 a8       	stdsp	sp[0x28],r8
8000335e:	50 2e       	stdsp	sp[0x8],lr
80003360:	50 39       	stdsp	sp[0xc],r9
80003362:	12 95       	mov	r5,r9
80003364:	12 90       	mov	r0,r9
80003366:	10 97       	mov	r7,r8
80003368:	08 92       	mov	r2,r4
8000336a:	c0 78       	rjmp	80003378 <_vfprintf_r+0x1c0>
8000336c:	3f fc       	mov	r12,-1
8000336e:	08 97       	mov	r7,r4
80003370:	50 2c       	stdsp	sp[0x8],r12
80003372:	c0 38       	rjmp	80003378 <_vfprintf_r+0x1c0>
80003374:	30 0b       	mov	r11,0
80003376:	50 3b       	stdsp	sp[0xc],r11
80003378:	0f 38       	ld.ub	r8,r7++
8000337a:	c0 28       	rjmp	8000337e <_vfprintf_r+0x1c6>
8000337c:	12 90       	mov	r0,r9
8000337e:	f0 c9 00 20 	sub	r9,r8,32
80003382:	e0 49 00 58 	cp.w	r9,88
80003386:	e0 8b 0a 30 	brhi	800047e6 <_vfprintf_r+0x162e>
8000338a:	fe ca a9 da 	sub	r10,pc,-22054
8000338e:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
80003392:	50 a7       	stdsp	sp[0x28],r7
80003394:	50 80       	stdsp	sp[0x20],r0
80003396:	0c 97       	mov	r7,r6
80003398:	04 94       	mov	r4,r2
8000339a:	06 96       	mov	r6,r3
8000339c:	02 92       	mov	r2,r1
8000339e:	fe c9 a7 b2 	sub	r9,pc,-22606
800033a2:	40 93       	lddsp	r3,sp[0x24]
800033a4:	10 90       	mov	r0,r8
800033a6:	40 41       	lddsp	r1,sp[0x10]
800033a8:	50 d9       	stdsp	sp[0x34],r9
800033aa:	e0 8f 08 8e 	bral	800044c6 <_vfprintf_r+0x130e>
800033ae:	30 08       	mov	r8,0
800033b0:	fb 39 06 bb 	ld.ub	r9,sp[1723]
800033b4:	f0 09 18 00 	cp.b	r9,r8
800033b8:	ce 01       	brne	80003378 <_vfprintf_r+0x1c0>
800033ba:	32 08       	mov	r8,32
800033bc:	c6 e8       	rjmp	80003498 <_vfprintf_r+0x2e0>
800033be:	a1 a5       	sbr	r5,0x0
800033c0:	cd cb       	rjmp	80003378 <_vfprintf_r+0x1c0>
800033c2:	0f 89       	ld.ub	r9,r7[0x0]
800033c4:	f2 c8 00 30 	sub	r8,r9,48
800033c8:	58 98       	cp.w	r8,9
800033ca:	e0 8b 00 1d 	brhi	80003404 <_vfprintf_r+0x24c>
800033ce:	ee c8 ff ff 	sub	r8,r7,-1
800033d2:	30 0b       	mov	r11,0
800033d4:	23 09       	sub	r9,48
800033d6:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
800033da:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
800033de:	11 39       	ld.ub	r9,r8++
800033e0:	f2 ca 00 30 	sub	r10,r9,48
800033e4:	58 9a       	cp.w	r10,9
800033e6:	fe 98 ff f7 	brls	800033d4 <_vfprintf_r+0x21c>
800033ea:	e0 49 00 24 	cp.w	r9,36
800033ee:	cc 31       	brne	80003374 <_vfprintf_r+0x1bc>
800033f0:	e0 4b 00 20 	cp.w	r11,32
800033f4:	e0 89 0e 60 	brgt	800050b4 <_vfprintf_r+0x1efc>
800033f8:	20 1b       	sub	r11,1
800033fa:	fa f9 06 b4 	ld.w	r9,sp[1716]
800033fe:	12 3b       	cp.w	r11,r9
80003400:	c0 95       	brlt	80003412 <_vfprintf_r+0x25a>
80003402:	c1 08       	rjmp	80003422 <_vfprintf_r+0x26a>
80003404:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003408:	ec ca ff ff 	sub	r10,r6,-1
8000340c:	12 36       	cp.w	r6,r9
8000340e:	c1 f5       	brlt	8000344c <_vfprintf_r+0x294>
80003410:	c2 68       	rjmp	8000345c <_vfprintf_r+0x2a4>
80003412:	fa ce f9 44 	sub	lr,sp,-1724
80003416:	10 97       	mov	r7,r8
80003418:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
8000341c:	f6 f0 fd 88 	ld.w	r0,r11[-632]
80003420:	c3 58       	rjmp	8000348a <_vfprintf_r+0x2d2>
80003422:	10 97       	mov	r7,r8
80003424:	fa c8 f9 50 	sub	r8,sp,-1712
80003428:	1a d8       	st.w	--sp,r8
8000342a:	fa c8 fa b8 	sub	r8,sp,-1352
8000342e:	1a d8       	st.w	--sp,r8
80003430:	fa c8 fb b4 	sub	r8,sp,-1100
80003434:	02 9a       	mov	r10,r1
80003436:	1a d8       	st.w	--sp,r8
80003438:	04 9c       	mov	r12,r2
8000343a:	fa c8 f9 40 	sub	r8,sp,-1728
8000343e:	fa c9 ff b4 	sub	r9,sp,-76
80003442:	fe b0 fd 23 	rcall	80002e88 <get_arg>
80003446:	2f dd       	sub	sp,-12
80003448:	78 00       	ld.w	r0,r12[0x0]
8000344a:	c2 08       	rjmp	8000348a <_vfprintf_r+0x2d2>
8000344c:	fa cc f9 44 	sub	r12,sp,-1724
80003450:	14 96       	mov	r6,r10
80003452:	f8 03 00 38 	add	r8,r12,r3<<0x3
80003456:	f0 f0 fd 88 	ld.w	r0,r8[-632]
8000345a:	c1 88       	rjmp	8000348a <_vfprintf_r+0x2d2>
8000345c:	41 08       	lddsp	r8,sp[0x40]
8000345e:	59 f9       	cp.w	r9,31
80003460:	e0 89 00 11 	brgt	80003482 <_vfprintf_r+0x2ca>
80003464:	f0 cb ff fc 	sub	r11,r8,-4
80003468:	51 0b       	stdsp	sp[0x40],r11
8000346a:	70 00       	ld.w	r0,r8[0x0]
8000346c:	fa cb f9 44 	sub	r11,sp,-1724
80003470:	f6 09 00 38 	add	r8,r11,r9<<0x3
80003474:	f1 40 fd 88 	st.w	r8[-632],r0
80003478:	2f f9       	sub	r9,-1
8000347a:	14 96       	mov	r6,r10
8000347c:	fb 49 06 b4 	st.w	sp[1716],r9
80003480:	c0 58       	rjmp	8000348a <_vfprintf_r+0x2d2>
80003482:	70 00       	ld.w	r0,r8[0x0]
80003484:	14 96       	mov	r6,r10
80003486:	2f c8       	sub	r8,-4
80003488:	51 08       	stdsp	sp[0x40],r8
8000348a:	58 00       	cp.w	r0,0
8000348c:	fe 94 ff 76 	brge	80003378 <_vfprintf_r+0x1c0>
80003490:	5c 30       	neg	r0
80003492:	a3 a5       	sbr	r5,0x2
80003494:	c7 2b       	rjmp	80003378 <_vfprintf_r+0x1c0>
80003496:	32 b8       	mov	r8,43
80003498:	fb 68 06 bb 	st.b	sp[1723],r8
8000349c:	c6 eb       	rjmp	80003378 <_vfprintf_r+0x1c0>
8000349e:	0f 38       	ld.ub	r8,r7++
800034a0:	e0 48 00 2a 	cp.w	r8,42
800034a4:	c0 30       	breq	800034aa <_vfprintf_r+0x2f2>
800034a6:	30 09       	mov	r9,0
800034a8:	c7 98       	rjmp	8000359a <_vfprintf_r+0x3e2>
800034aa:	0f 88       	ld.ub	r8,r7[0x0]
800034ac:	f0 c9 00 30 	sub	r9,r8,48
800034b0:	58 99       	cp.w	r9,9
800034b2:	e0 8b 00 1f 	brhi	800034f0 <_vfprintf_r+0x338>
800034b6:	ee c4 ff ff 	sub	r4,r7,-1
800034ba:	30 0b       	mov	r11,0
800034bc:	23 08       	sub	r8,48
800034be:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
800034c2:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
800034c6:	09 38       	ld.ub	r8,r4++
800034c8:	f0 c9 00 30 	sub	r9,r8,48
800034cc:	58 99       	cp.w	r9,9
800034ce:	fe 98 ff f7 	brls	800034bc <_vfprintf_r+0x304>
800034d2:	e0 48 00 24 	cp.w	r8,36
800034d6:	fe 91 ff 4f 	brne	80003374 <_vfprintf_r+0x1bc>
800034da:	e0 4b 00 20 	cp.w	r11,32
800034de:	e0 89 0d eb 	brgt	800050b4 <_vfprintf_r+0x1efc>
800034e2:	20 1b       	sub	r11,1
800034e4:	fa f8 06 b4 	ld.w	r8,sp[1716]
800034e8:	10 3b       	cp.w	r11,r8
800034ea:	c0 a5       	brlt	800034fe <_vfprintf_r+0x346>
800034ec:	c1 18       	rjmp	8000350e <_vfprintf_r+0x356>
800034ee:	d7 03       	nop
800034f0:	fa fa 06 b4 	ld.w	r10,sp[1716]
800034f4:	ec c9 ff ff 	sub	r9,r6,-1
800034f8:	14 36       	cp.w	r6,r10
800034fa:	c1 f5       	brlt	80003538 <_vfprintf_r+0x380>
800034fc:	c2 88       	rjmp	8000354c <_vfprintf_r+0x394>
800034fe:	fa ca f9 44 	sub	r10,sp,-1724
80003502:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
80003506:	f6 fb fd 88 	ld.w	r11,r11[-632]
8000350a:	50 2b       	stdsp	sp[0x8],r11
8000350c:	c3 c8       	rjmp	80003584 <_vfprintf_r+0x3cc>
8000350e:	fa c8 f9 50 	sub	r8,sp,-1712
80003512:	1a d8       	st.w	--sp,r8
80003514:	fa c8 fa b8 	sub	r8,sp,-1352
80003518:	1a d8       	st.w	--sp,r8
8000351a:	fa c8 fb b4 	sub	r8,sp,-1100
8000351e:	02 9a       	mov	r10,r1
80003520:	1a d8       	st.w	--sp,r8
80003522:	04 9c       	mov	r12,r2
80003524:	fa c8 f9 40 	sub	r8,sp,-1728
80003528:	fa c9 ff b4 	sub	r9,sp,-76
8000352c:	fe b0 fc ae 	rcall	80002e88 <get_arg>
80003530:	2f dd       	sub	sp,-12
80003532:	78 0c       	ld.w	r12,r12[0x0]
80003534:	50 2c       	stdsp	sp[0x8],r12
80003536:	c2 78       	rjmp	80003584 <_vfprintf_r+0x3cc>
80003538:	12 96       	mov	r6,r9
8000353a:	0e 94       	mov	r4,r7
8000353c:	fa c9 f9 44 	sub	r9,sp,-1724
80003540:	f2 03 00 38 	add	r8,r9,r3<<0x3
80003544:	f0 f8 fd 88 	ld.w	r8,r8[-632]
80003548:	50 28       	stdsp	sp[0x8],r8
8000354a:	c1 d8       	rjmp	80003584 <_vfprintf_r+0x3cc>
8000354c:	41 08       	lddsp	r8,sp[0x40]
8000354e:	59 fa       	cp.w	r10,31
80003550:	e0 89 00 14 	brgt	80003578 <_vfprintf_r+0x3c0>
80003554:	f0 cb ff fc 	sub	r11,r8,-4
80003558:	70 08       	ld.w	r8,r8[0x0]
8000355a:	51 0b       	stdsp	sp[0x40],r11
8000355c:	50 28       	stdsp	sp[0x8],r8
8000355e:	fa c6 f9 44 	sub	r6,sp,-1724
80003562:	40 2e       	lddsp	lr,sp[0x8]
80003564:	ec 0a 00 38 	add	r8,r6,r10<<0x3
80003568:	f1 4e fd 88 	st.w	r8[-632],lr
8000356c:	2f fa       	sub	r10,-1
8000356e:	0e 94       	mov	r4,r7
80003570:	fb 4a 06 b4 	st.w	sp[1716],r10
80003574:	12 96       	mov	r6,r9
80003576:	c0 78       	rjmp	80003584 <_vfprintf_r+0x3cc>
80003578:	70 0c       	ld.w	r12,r8[0x0]
8000357a:	0e 94       	mov	r4,r7
8000357c:	2f c8       	sub	r8,-4
8000357e:	50 2c       	stdsp	sp[0x8],r12
80003580:	12 96       	mov	r6,r9
80003582:	51 08       	stdsp	sp[0x40],r8
80003584:	40 2b       	lddsp	r11,sp[0x8]
80003586:	58 0b       	cp.w	r11,0
80003588:	fe 95 fe f2 	brlt	8000336c <_vfprintf_r+0x1b4>
8000358c:	08 97       	mov	r7,r4
8000358e:	cf 5a       	rjmp	80003378 <_vfprintf_r+0x1c0>
80003590:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003594:	0f 38       	ld.ub	r8,r7++
80003596:	f4 09 00 19 	add	r9,r10,r9<<0x1
8000359a:	f0 ca 00 30 	sub	r10,r8,48
8000359e:	58 9a       	cp.w	r10,9
800035a0:	fe 98 ff f8 	brls	80003590 <_vfprintf_r+0x3d8>
800035a4:	3f fa       	mov	r10,-1
800035a6:	f2 0a 0c 49 	max	r9,r9,r10
800035aa:	50 29       	stdsp	sp[0x8],r9
800035ac:	ce 9a       	rjmp	8000337e <_vfprintf_r+0x1c6>
800035ae:	a7 b5       	sbr	r5,0x7
800035b0:	ce 4a       	rjmp	80003378 <_vfprintf_r+0x1c0>
800035b2:	30 09       	mov	r9,0
800035b4:	23 08       	sub	r8,48
800035b6:	f2 09 00 29 	add	r9,r9,r9<<0x2
800035ba:	f0 09 00 19 	add	r9,r8,r9<<0x1
800035be:	0f 38       	ld.ub	r8,r7++
800035c0:	f0 ca 00 30 	sub	r10,r8,48
800035c4:	58 9a       	cp.w	r10,9
800035c6:	fe 98 ff f7 	brls	800035b4 <_vfprintf_r+0x3fc>
800035ca:	e0 48 00 24 	cp.w	r8,36
800035ce:	fe 91 fe d7 	brne	8000337c <_vfprintf_r+0x1c4>
800035d2:	e0 49 00 20 	cp.w	r9,32
800035d6:	e0 89 0d 6f 	brgt	800050b4 <_vfprintf_r+0x1efc>
800035da:	f2 c3 00 01 	sub	r3,r9,1
800035de:	30 19       	mov	r9,1
800035e0:	50 39       	stdsp	sp[0xc],r9
800035e2:	cc ba       	rjmp	80003378 <_vfprintf_r+0x1c0>
800035e4:	a3 b5       	sbr	r5,0x3
800035e6:	cc 9a       	rjmp	80003378 <_vfprintf_r+0x1c0>
800035e8:	a7 a5       	sbr	r5,0x6
800035ea:	cc 7a       	rjmp	80003378 <_vfprintf_r+0x1c0>
800035ec:	0a 98       	mov	r8,r5
800035ee:	a5 b5       	sbr	r5,0x5
800035f0:	a5 a8       	sbr	r8,0x4
800035f2:	0f 89       	ld.ub	r9,r7[0x0]
800035f4:	36 ce       	mov	lr,108
800035f6:	fc 09 18 00 	cp.b	r9,lr
800035fa:	f7 b7 00 ff 	subeq	r7,-1
800035fe:	f0 05 17 10 	movne	r5,r8
80003602:	cb ba       	rjmp	80003378 <_vfprintf_r+0x1c0>
80003604:	a5 b5       	sbr	r5,0x5
80003606:	cb 9a       	rjmp	80003378 <_vfprintf_r+0x1c0>
80003608:	50 a7       	stdsp	sp[0x28],r7
8000360a:	50 80       	stdsp	sp[0x20],r0
8000360c:	0c 97       	mov	r7,r6
8000360e:	10 90       	mov	r0,r8
80003610:	06 96       	mov	r6,r3
80003612:	04 94       	mov	r4,r2
80003614:	40 93       	lddsp	r3,sp[0x24]
80003616:	02 92       	mov	r2,r1
80003618:	0e 99       	mov	r9,r7
8000361a:	40 41       	lddsp	r1,sp[0x10]
8000361c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003620:	40 3c       	lddsp	r12,sp[0xc]
80003622:	58 0c       	cp.w	r12,0
80003624:	c1 d0       	breq	8000365e <_vfprintf_r+0x4a6>
80003626:	10 36       	cp.w	r6,r8
80003628:	c0 64       	brge	80003634 <_vfprintf_r+0x47c>
8000362a:	fa cb f9 44 	sub	r11,sp,-1724
8000362e:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003632:	c1 d8       	rjmp	8000366c <_vfprintf_r+0x4b4>
80003634:	fa c8 f9 50 	sub	r8,sp,-1712
80003638:	1a d8       	st.w	--sp,r8
8000363a:	fa c8 fa b8 	sub	r8,sp,-1352
8000363e:	1a d8       	st.w	--sp,r8
80003640:	fa c8 fb b4 	sub	r8,sp,-1100
80003644:	1a d8       	st.w	--sp,r8
80003646:	fa c8 f9 40 	sub	r8,sp,-1728
8000364a:	fa c9 ff b4 	sub	r9,sp,-76
8000364e:	04 9a       	mov	r10,r2
80003650:	0c 9b       	mov	r11,r6
80003652:	08 9c       	mov	r12,r4
80003654:	fe b0 fc 1a 	rcall	80002e88 <get_arg>
80003658:	2f dd       	sub	sp,-12
8000365a:	19 b8       	ld.ub	r8,r12[0x3]
8000365c:	c2 28       	rjmp	800036a0 <_vfprintf_r+0x4e8>
8000365e:	2f f7       	sub	r7,-1
80003660:	10 39       	cp.w	r9,r8
80003662:	c0 84       	brge	80003672 <_vfprintf_r+0x4ba>
80003664:	fa ca f9 44 	sub	r10,sp,-1724
80003668:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000366c:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
80003670:	c1 88       	rjmp	800036a0 <_vfprintf_r+0x4e8>
80003672:	41 09       	lddsp	r9,sp[0x40]
80003674:	59 f8       	cp.w	r8,31
80003676:	e0 89 00 12 	brgt	8000369a <_vfprintf_r+0x4e2>
8000367a:	f2 ca ff fc 	sub	r10,r9,-4
8000367e:	51 0a       	stdsp	sp[0x40],r10
80003680:	72 09       	ld.w	r9,r9[0x0]
80003682:	fa c6 f9 44 	sub	r6,sp,-1724
80003686:	ec 08 00 3a 	add	r10,r6,r8<<0x3
8000368a:	2f f8       	sub	r8,-1
8000368c:	f5 49 fd 88 	st.w	r10[-632],r9
80003690:	fb 48 06 b4 	st.w	sp[1716],r8
80003694:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
80003698:	c0 48       	rjmp	800036a0 <_vfprintf_r+0x4e8>
8000369a:	13 b8       	ld.ub	r8,r9[0x3]
8000369c:	2f c9       	sub	r9,-4
8000369e:	51 09       	stdsp	sp[0x40],r9
800036a0:	fb 68 06 60 	st.b	sp[1632],r8
800036a4:	30 0e       	mov	lr,0
800036a6:	30 08       	mov	r8,0
800036a8:	30 12       	mov	r2,1
800036aa:	fb 68 06 bb 	st.b	sp[1723],r8
800036ae:	50 2e       	stdsp	sp[0x8],lr
800036b0:	e0 8f 08 ad 	bral	8000480a <_vfprintf_r+0x1652>
800036b4:	50 a7       	stdsp	sp[0x28],r7
800036b6:	50 80       	stdsp	sp[0x20],r0
800036b8:	0c 97       	mov	r7,r6
800036ba:	04 94       	mov	r4,r2
800036bc:	06 96       	mov	r6,r3
800036be:	02 92       	mov	r2,r1
800036c0:	40 93       	lddsp	r3,sp[0x24]
800036c2:	10 90       	mov	r0,r8
800036c4:	40 41       	lddsp	r1,sp[0x10]
800036c6:	a5 a5       	sbr	r5,0x4
800036c8:	c0 a8       	rjmp	800036dc <_vfprintf_r+0x524>
800036ca:	50 a7       	stdsp	sp[0x28],r7
800036cc:	50 80       	stdsp	sp[0x20],r0
800036ce:	0c 97       	mov	r7,r6
800036d0:	04 94       	mov	r4,r2
800036d2:	06 96       	mov	r6,r3
800036d4:	02 92       	mov	r2,r1
800036d6:	40 93       	lddsp	r3,sp[0x24]
800036d8:	10 90       	mov	r0,r8
800036da:	40 41       	lddsp	r1,sp[0x10]
800036dc:	ed b5 00 05 	bld	r5,0x5
800036e0:	c5 11       	brne	80003782 <_vfprintf_r+0x5ca>
800036e2:	fa f8 06 b4 	ld.w	r8,sp[1716]
800036e6:	40 3c       	lddsp	r12,sp[0xc]
800036e8:	58 0c       	cp.w	r12,0
800036ea:	c1 e0       	breq	80003726 <_vfprintf_r+0x56e>
800036ec:	10 36       	cp.w	r6,r8
800036ee:	c0 64       	brge	800036fa <_vfprintf_r+0x542>
800036f0:	fa cb f9 44 	sub	r11,sp,-1724
800036f4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800036f8:	c2 08       	rjmp	80003738 <_vfprintf_r+0x580>
800036fa:	fa c8 f9 50 	sub	r8,sp,-1712
800036fe:	1a d8       	st.w	--sp,r8
80003700:	fa c8 fa b8 	sub	r8,sp,-1352
80003704:	0c 9b       	mov	r11,r6
80003706:	1a d8       	st.w	--sp,r8
80003708:	fa c8 fb b4 	sub	r8,sp,-1100
8000370c:	1a d8       	st.w	--sp,r8
8000370e:	fa c9 ff b4 	sub	r9,sp,-76
80003712:	fa c8 f9 40 	sub	r8,sp,-1728
80003716:	04 9a       	mov	r10,r2
80003718:	08 9c       	mov	r12,r4
8000371a:	fe b0 fb b7 	rcall	80002e88 <get_arg>
8000371e:	2f dd       	sub	sp,-12
80003720:	78 1b       	ld.w	r11,r12[0x4]
80003722:	78 09       	ld.w	r9,r12[0x0]
80003724:	c2 b8       	rjmp	8000377a <_vfprintf_r+0x5c2>
80003726:	ee ca ff ff 	sub	r10,r7,-1
8000372a:	10 37       	cp.w	r7,r8
8000372c:	c0 b4       	brge	80003742 <_vfprintf_r+0x58a>
8000372e:	fa c9 f9 44 	sub	r9,sp,-1724
80003732:	14 97       	mov	r7,r10
80003734:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003738:	ec fb fd 8c 	ld.w	r11,r6[-628]
8000373c:	ec f9 fd 88 	ld.w	r9,r6[-632]
80003740:	c1 d8       	rjmp	8000377a <_vfprintf_r+0x5c2>
80003742:	41 09       	lddsp	r9,sp[0x40]
80003744:	59 f8       	cp.w	r8,31
80003746:	e0 89 00 14 	brgt	8000376e <_vfprintf_r+0x5b6>
8000374a:	f2 cb ff f8 	sub	r11,r9,-8
8000374e:	51 0b       	stdsp	sp[0x40],r11
80003750:	fa c6 f9 44 	sub	r6,sp,-1724
80003754:	72 1b       	ld.w	r11,r9[0x4]
80003756:	ec 08 00 3c 	add	r12,r6,r8<<0x3
8000375a:	72 09       	ld.w	r9,r9[0x0]
8000375c:	f9 4b fd 8c 	st.w	r12[-628],r11
80003760:	f9 49 fd 88 	st.w	r12[-632],r9
80003764:	2f f8       	sub	r8,-1
80003766:	14 97       	mov	r7,r10
80003768:	fb 48 06 b4 	st.w	sp[1716],r8
8000376c:	c0 78       	rjmp	8000377a <_vfprintf_r+0x5c2>
8000376e:	f2 c8 ff f8 	sub	r8,r9,-8
80003772:	72 1b       	ld.w	r11,r9[0x4]
80003774:	14 97       	mov	r7,r10
80003776:	51 08       	stdsp	sp[0x40],r8
80003778:	72 09       	ld.w	r9,r9[0x0]
8000377a:	16 98       	mov	r8,r11
8000377c:	fa e9 00 00 	st.d	sp[0],r8
80003780:	ca e8       	rjmp	800038dc <_vfprintf_r+0x724>
80003782:	ed b5 00 04 	bld	r5,0x4
80003786:	c1 71       	brne	800037b4 <_vfprintf_r+0x5fc>
80003788:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000378c:	40 3e       	lddsp	lr,sp[0xc]
8000378e:	58 0e       	cp.w	lr,0
80003790:	c0 80       	breq	800037a0 <_vfprintf_r+0x5e8>
80003792:	10 36       	cp.w	r6,r8
80003794:	c6 94       	brge	80003866 <_vfprintf_r+0x6ae>
80003796:	fa cc f9 44 	sub	r12,sp,-1724
8000379a:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000379e:	c8 28       	rjmp	800038a2 <_vfprintf_r+0x6ea>
800037a0:	ee ca ff ff 	sub	r10,r7,-1
800037a4:	10 37       	cp.w	r7,r8
800037a6:	e0 84 00 81 	brge	800038a8 <_vfprintf_r+0x6f0>
800037aa:	fa cb f9 44 	sub	r11,sp,-1724
800037ae:	f6 06 00 36 	add	r6,r11,r6<<0x3
800037b2:	c7 78       	rjmp	800038a0 <_vfprintf_r+0x6e8>
800037b4:	ed b5 00 06 	bld	r5,0x6
800037b8:	c4 b1       	brne	8000384e <_vfprintf_r+0x696>
800037ba:	fa f8 06 b4 	ld.w	r8,sp[1716]
800037be:	40 3c       	lddsp	r12,sp[0xc]
800037c0:	58 0c       	cp.w	r12,0
800037c2:	c1 d0       	breq	800037fc <_vfprintf_r+0x644>
800037c4:	10 36       	cp.w	r6,r8
800037c6:	c0 64       	brge	800037d2 <_vfprintf_r+0x61a>
800037c8:	fa cb f9 44 	sub	r11,sp,-1724
800037cc:	f6 06 00 36 	add	r6,r11,r6<<0x3
800037d0:	c1 f8       	rjmp	8000380e <_vfprintf_r+0x656>
800037d2:	fa c8 f9 50 	sub	r8,sp,-1712
800037d6:	1a d8       	st.w	--sp,r8
800037d8:	fa c8 fa b8 	sub	r8,sp,-1352
800037dc:	1a d8       	st.w	--sp,r8
800037de:	fa c8 fb b4 	sub	r8,sp,-1100
800037e2:	1a d8       	st.w	--sp,r8
800037e4:	fa c8 f9 40 	sub	r8,sp,-1728
800037e8:	fa c9 ff b4 	sub	r9,sp,-76
800037ec:	04 9a       	mov	r10,r2
800037ee:	0c 9b       	mov	r11,r6
800037f0:	08 9c       	mov	r12,r4
800037f2:	fe b0 fb 4b 	rcall	80002e88 <get_arg>
800037f6:	2f dd       	sub	sp,-12
800037f8:	98 18       	ld.sh	r8,r12[0x2]
800037fa:	c2 68       	rjmp	80003846 <_vfprintf_r+0x68e>
800037fc:	ee ca ff ff 	sub	r10,r7,-1
80003800:	10 37       	cp.w	r7,r8
80003802:	c0 94       	brge	80003814 <_vfprintf_r+0x65c>
80003804:	fa c9 f9 44 	sub	r9,sp,-1724
80003808:	14 97       	mov	r7,r10
8000380a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000380e:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80003812:	c1 a8       	rjmp	80003846 <_vfprintf_r+0x68e>
80003814:	41 09       	lddsp	r9,sp[0x40]
80003816:	59 f8       	cp.w	r8,31
80003818:	e0 89 00 13 	brgt	8000383e <_vfprintf_r+0x686>
8000381c:	f2 cb ff fc 	sub	r11,r9,-4
80003820:	51 0b       	stdsp	sp[0x40],r11
80003822:	72 09       	ld.w	r9,r9[0x0]
80003824:	fa c6 f9 44 	sub	r6,sp,-1724
80003828:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000382c:	2f f8       	sub	r8,-1
8000382e:	f7 49 fd 88 	st.w	r11[-632],r9
80003832:	fb 48 06 b4 	st.w	sp[1716],r8
80003836:	14 97       	mov	r7,r10
80003838:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000383c:	c0 58       	rjmp	80003846 <_vfprintf_r+0x68e>
8000383e:	92 18       	ld.sh	r8,r9[0x2]
80003840:	14 97       	mov	r7,r10
80003842:	2f c9       	sub	r9,-4
80003844:	51 09       	stdsp	sp[0x40],r9
80003846:	50 18       	stdsp	sp[0x4],r8
80003848:	bf 58       	asr	r8,0x1f
8000384a:	50 08       	stdsp	sp[0x0],r8
8000384c:	c4 88       	rjmp	800038dc <_vfprintf_r+0x724>
8000384e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003852:	40 3c       	lddsp	r12,sp[0xc]
80003854:	58 0c       	cp.w	r12,0
80003856:	c1 d0       	breq	80003890 <_vfprintf_r+0x6d8>
80003858:	10 36       	cp.w	r6,r8
8000385a:	c0 64       	brge	80003866 <_vfprintf_r+0x6ae>
8000385c:	fa cb f9 44 	sub	r11,sp,-1724
80003860:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003864:	c1 f8       	rjmp	800038a2 <_vfprintf_r+0x6ea>
80003866:	fa c8 f9 50 	sub	r8,sp,-1712
8000386a:	1a d8       	st.w	--sp,r8
8000386c:	fa c8 fa b8 	sub	r8,sp,-1352
80003870:	0c 9b       	mov	r11,r6
80003872:	1a d8       	st.w	--sp,r8
80003874:	fa c8 fb b4 	sub	r8,sp,-1100
80003878:	04 9a       	mov	r10,r2
8000387a:	1a d8       	st.w	--sp,r8
8000387c:	08 9c       	mov	r12,r4
8000387e:	fa c8 f9 40 	sub	r8,sp,-1728
80003882:	fa c9 ff b4 	sub	r9,sp,-76
80003886:	fe b0 fb 01 	rcall	80002e88 <get_arg>
8000388a:	2f dd       	sub	sp,-12
8000388c:	78 0b       	ld.w	r11,r12[0x0]
8000388e:	c2 48       	rjmp	800038d6 <_vfprintf_r+0x71e>
80003890:	ee ca ff ff 	sub	r10,r7,-1
80003894:	10 37       	cp.w	r7,r8
80003896:	c0 94       	brge	800038a8 <_vfprintf_r+0x6f0>
80003898:	fa c9 f9 44 	sub	r9,sp,-1724
8000389c:	f2 06 00 36 	add	r6,r9,r6<<0x3
800038a0:	14 97       	mov	r7,r10
800038a2:	ec fb fd 88 	ld.w	r11,r6[-632]
800038a6:	c1 88       	rjmp	800038d6 <_vfprintf_r+0x71e>
800038a8:	41 09       	lddsp	r9,sp[0x40]
800038aa:	59 f8       	cp.w	r8,31
800038ac:	e0 89 00 11 	brgt	800038ce <_vfprintf_r+0x716>
800038b0:	f2 cb ff fc 	sub	r11,r9,-4
800038b4:	51 0b       	stdsp	sp[0x40],r11
800038b6:	fa c6 f9 44 	sub	r6,sp,-1724
800038ba:	72 0b       	ld.w	r11,r9[0x0]
800038bc:	ec 08 00 39 	add	r9,r6,r8<<0x3
800038c0:	f3 4b fd 88 	st.w	r9[-632],r11
800038c4:	2f f8       	sub	r8,-1
800038c6:	14 97       	mov	r7,r10
800038c8:	fb 48 06 b4 	st.w	sp[1716],r8
800038cc:	c0 58       	rjmp	800038d6 <_vfprintf_r+0x71e>
800038ce:	72 0b       	ld.w	r11,r9[0x0]
800038d0:	14 97       	mov	r7,r10
800038d2:	2f c9       	sub	r9,-4
800038d4:	51 09       	stdsp	sp[0x40],r9
800038d6:	50 1b       	stdsp	sp[0x4],r11
800038d8:	bf 5b       	asr	r11,0x1f
800038da:	50 0b       	stdsp	sp[0x0],r11
800038dc:	fa ea 00 00 	ld.d	r10,sp[0]
800038e0:	58 0a       	cp.w	r10,0
800038e2:	5c 2b       	cpc	r11
800038e4:	c0 e4       	brge	80003900 <_vfprintf_r+0x748>
800038e6:	30 08       	mov	r8,0
800038e8:	fa ea 00 00 	ld.d	r10,sp[0]
800038ec:	30 09       	mov	r9,0
800038ee:	f0 0a 01 0a 	sub	r10,r8,r10
800038f2:	f2 0b 01 4b 	sbc	r11,r9,r11
800038f6:	32 d8       	mov	r8,45
800038f8:	fa eb 00 00 	st.d	sp[0],r10
800038fc:	fb 68 06 bb 	st.b	sp[1723],r8
80003900:	30 18       	mov	r8,1
80003902:	e0 8f 06 fa 	bral	800046f6 <_vfprintf_r+0x153e>
80003906:	50 a7       	stdsp	sp[0x28],r7
80003908:	50 80       	stdsp	sp[0x20],r0
8000390a:	0c 97       	mov	r7,r6
8000390c:	04 94       	mov	r4,r2
8000390e:	06 96       	mov	r6,r3
80003910:	02 92       	mov	r2,r1
80003912:	40 93       	lddsp	r3,sp[0x24]
80003914:	10 90       	mov	r0,r8
80003916:	40 41       	lddsp	r1,sp[0x10]
80003918:	0e 99       	mov	r9,r7
8000391a:	ed b5 00 03 	bld	r5,0x3
8000391e:	c4 11       	brne	800039a0 <_vfprintf_r+0x7e8>
80003920:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003924:	40 3a       	lddsp	r10,sp[0xc]
80003926:	58 0a       	cp.w	r10,0
80003928:	c1 90       	breq	8000395a <_vfprintf_r+0x7a2>
8000392a:	10 36       	cp.w	r6,r8
8000392c:	c6 45       	brlt	800039f4 <_vfprintf_r+0x83c>
8000392e:	fa c8 f9 50 	sub	r8,sp,-1712
80003932:	1a d8       	st.w	--sp,r8
80003934:	fa c8 fa b8 	sub	r8,sp,-1352
80003938:	1a d8       	st.w	--sp,r8
8000393a:	fa c8 fb b4 	sub	r8,sp,-1100
8000393e:	0c 9b       	mov	r11,r6
80003940:	1a d8       	st.w	--sp,r8
80003942:	04 9a       	mov	r10,r2
80003944:	fa c8 f9 40 	sub	r8,sp,-1728
80003948:	fa c9 ff b4 	sub	r9,sp,-76
8000394c:	08 9c       	mov	r12,r4
8000394e:	fe b0 fa 9d 	rcall	80002e88 <get_arg>
80003952:	2f dd       	sub	sp,-12
80003954:	78 16       	ld.w	r6,r12[0x4]
80003956:	50 76       	stdsp	sp[0x1c],r6
80003958:	c4 88       	rjmp	800039e8 <_vfprintf_r+0x830>
8000395a:	2f f7       	sub	r7,-1
8000395c:	10 39       	cp.w	r9,r8
8000395e:	c0 c4       	brge	80003976 <_vfprintf_r+0x7be>
80003960:	fa ce f9 44 	sub	lr,sp,-1724
80003964:	fc 06 00 36 	add	r6,lr,r6<<0x3
80003968:	ec fc fd 8c 	ld.w	r12,r6[-628]
8000396c:	50 7c       	stdsp	sp[0x1c],r12
8000396e:	ec f6 fd 88 	ld.w	r6,r6[-632]
80003972:	50 56       	stdsp	sp[0x14],r6
80003974:	c6 68       	rjmp	80003a40 <_vfprintf_r+0x888>
80003976:	41 09       	lddsp	r9,sp[0x40]
80003978:	59 f8       	cp.w	r8,31
8000397a:	e0 89 00 10 	brgt	8000399a <_vfprintf_r+0x7e2>
8000397e:	f2 ca ff f8 	sub	r10,r9,-8
80003982:	72 1b       	ld.w	r11,r9[0x4]
80003984:	51 0a       	stdsp	sp[0x40],r10
80003986:	72 09       	ld.w	r9,r9[0x0]
80003988:	fa ca f9 44 	sub	r10,sp,-1724
8000398c:	50 7b       	stdsp	sp[0x1c],r11
8000398e:	50 59       	stdsp	sp[0x14],r9
80003990:	f4 08 00 39 	add	r9,r10,r8<<0x3
80003994:	40 5b       	lddsp	r11,sp[0x14]
80003996:	40 7a       	lddsp	r10,sp[0x1c]
80003998:	c4 78       	rjmp	80003a26 <_vfprintf_r+0x86e>
8000399a:	72 18       	ld.w	r8,r9[0x4]
8000399c:	50 78       	stdsp	sp[0x1c],r8
8000399e:	c4 c8       	rjmp	80003a36 <_vfprintf_r+0x87e>
800039a0:	fa f8 06 b4 	ld.w	r8,sp[1716]
800039a4:	40 3e       	lddsp	lr,sp[0xc]
800039a6:	58 0e       	cp.w	lr,0
800039a8:	c2 30       	breq	800039ee <_vfprintf_r+0x836>
800039aa:	10 36       	cp.w	r6,r8
800039ac:	c0 94       	brge	800039be <_vfprintf_r+0x806>
800039ae:	fa cc f9 44 	sub	r12,sp,-1724
800039b2:	f8 06 00 36 	add	r6,r12,r6<<0x3
800039b6:	ec fb fd 8c 	ld.w	r11,r6[-628]
800039ba:	50 7b       	stdsp	sp[0x1c],r11
800039bc:	cd 9b       	rjmp	8000396e <_vfprintf_r+0x7b6>
800039be:	fa c8 f9 50 	sub	r8,sp,-1712
800039c2:	1a d8       	st.w	--sp,r8
800039c4:	fa c8 fa b8 	sub	r8,sp,-1352
800039c8:	04 9a       	mov	r10,r2
800039ca:	1a d8       	st.w	--sp,r8
800039cc:	fa c8 fb b4 	sub	r8,sp,-1100
800039d0:	0c 9b       	mov	r11,r6
800039d2:	1a d8       	st.w	--sp,r8
800039d4:	08 9c       	mov	r12,r4
800039d6:	fa c8 f9 40 	sub	r8,sp,-1728
800039da:	fa c9 ff b4 	sub	r9,sp,-76
800039de:	fe b0 fa 55 	rcall	80002e88 <get_arg>
800039e2:	2f dd       	sub	sp,-12
800039e4:	78 1a       	ld.w	r10,r12[0x4]
800039e6:	50 7a       	stdsp	sp[0x1c],r10
800039e8:	78 0c       	ld.w	r12,r12[0x0]
800039ea:	50 5c       	stdsp	sp[0x14],r12
800039ec:	c2 a8       	rjmp	80003a40 <_vfprintf_r+0x888>
800039ee:	2f f7       	sub	r7,-1
800039f0:	10 39       	cp.w	r9,r8
800039f2:	c0 94       	brge	80003a04 <_vfprintf_r+0x84c>
800039f4:	fa c9 f9 44 	sub	r9,sp,-1724
800039f8:	f2 06 00 36 	add	r6,r9,r6<<0x3
800039fc:	ec f8 fd 8c 	ld.w	r8,r6[-628]
80003a00:	50 78       	stdsp	sp[0x1c],r8
80003a02:	cb 6b       	rjmp	8000396e <_vfprintf_r+0x7b6>
80003a04:	41 09       	lddsp	r9,sp[0x40]
80003a06:	59 f8       	cp.w	r8,31
80003a08:	e0 89 00 15 	brgt	80003a32 <_vfprintf_r+0x87a>
80003a0c:	f2 ca ff f8 	sub	r10,r9,-8
80003a10:	72 16       	ld.w	r6,r9[0x4]
80003a12:	72 09       	ld.w	r9,r9[0x0]
80003a14:	51 0a       	stdsp	sp[0x40],r10
80003a16:	50 59       	stdsp	sp[0x14],r9
80003a18:	fa ce f9 44 	sub	lr,sp,-1724
80003a1c:	50 76       	stdsp	sp[0x1c],r6
80003a1e:	fc 08 00 39 	add	r9,lr,r8<<0x3
80003a22:	40 5b       	lddsp	r11,sp[0x14]
80003a24:	0c 9a       	mov	r10,r6
80003a26:	f2 eb fd 88 	st.d	r9[-632],r10
80003a2a:	2f f8       	sub	r8,-1
80003a2c:	fb 48 06 b4 	st.w	sp[1716],r8
80003a30:	c0 88       	rjmp	80003a40 <_vfprintf_r+0x888>
80003a32:	72 1c       	ld.w	r12,r9[0x4]
80003a34:	50 7c       	stdsp	sp[0x1c],r12
80003a36:	f2 c8 ff f8 	sub	r8,r9,-8
80003a3a:	51 08       	stdsp	sp[0x40],r8
80003a3c:	72 09       	ld.w	r9,r9[0x0]
80003a3e:	50 59       	stdsp	sp[0x14],r9
80003a40:	40 5b       	lddsp	r11,sp[0x14]
80003a42:	40 7a       	lddsp	r10,sp[0x1c]
80003a44:	e0 a0 1c de 	rcall	80007400 <__isinfd>
80003a48:	18 96       	mov	r6,r12
80003a4a:	c1 70       	breq	80003a78 <_vfprintf_r+0x8c0>
80003a4c:	30 08       	mov	r8,0
80003a4e:	30 09       	mov	r9,0
80003a50:	40 5b       	lddsp	r11,sp[0x14]
80003a52:	40 7a       	lddsp	r10,sp[0x1c]
80003a54:	e0 a0 21 cc 	rcall	80007dec <__avr32_f64_cmp_lt>
80003a58:	c0 40       	breq	80003a60 <_vfprintf_r+0x8a8>
80003a5a:	32 d8       	mov	r8,45
80003a5c:	fb 68 06 bb 	st.b	sp[1723],r8
80003a60:	fe c8 ae 60 	sub	r8,pc,-20896
80003a64:	fe c6 ae 60 	sub	r6,pc,-20896
80003a68:	a7 d5       	cbr	r5,0x7
80003a6a:	e0 40 00 47 	cp.w	r0,71
80003a6e:	f0 06 17 a0 	movle	r6,r8
80003a72:	30 32       	mov	r2,3
80003a74:	e0 8f 06 ce 	bral	80004810 <_vfprintf_r+0x1658>
80003a78:	40 5b       	lddsp	r11,sp[0x14]
80003a7a:	40 7a       	lddsp	r10,sp[0x1c]
80003a7c:	e0 a0 1c d7 	rcall	8000742a <__isnand>
80003a80:	c0 e0       	breq	80003a9c <_vfprintf_r+0x8e4>
80003a82:	50 26       	stdsp	sp[0x8],r6
80003a84:	fe c8 ae 7c 	sub	r8,pc,-20868
80003a88:	fe c6 ae 7c 	sub	r6,pc,-20868
80003a8c:	a7 d5       	cbr	r5,0x7
80003a8e:	e0 40 00 47 	cp.w	r0,71
80003a92:	f0 06 17 a0 	movle	r6,r8
80003a96:	30 32       	mov	r2,3
80003a98:	e0 8f 06 c2 	bral	8000481c <_vfprintf_r+0x1664>
80003a9c:	40 2a       	lddsp	r10,sp[0x8]
80003a9e:	5b fa       	cp.w	r10,-1
80003aa0:	c0 41       	brne	80003aa8 <_vfprintf_r+0x8f0>
80003aa2:	30 69       	mov	r9,6
80003aa4:	50 29       	stdsp	sp[0x8],r9
80003aa6:	c1 18       	rjmp	80003ac8 <_vfprintf_r+0x910>
80003aa8:	e0 40 00 47 	cp.w	r0,71
80003aac:	5f 09       	sreq	r9
80003aae:	e0 40 00 67 	cp.w	r0,103
80003ab2:	5f 08       	sreq	r8
80003ab4:	f3 e8 10 08 	or	r8,r9,r8
80003ab8:	f8 08 18 00 	cp.b	r8,r12
80003abc:	c0 60       	breq	80003ac8 <_vfprintf_r+0x910>
80003abe:	40 28       	lddsp	r8,sp[0x8]
80003ac0:	58 08       	cp.w	r8,0
80003ac2:	f9 b8 00 01 	moveq	r8,1
80003ac6:	50 28       	stdsp	sp[0x8],r8
80003ac8:	40 78       	lddsp	r8,sp[0x1c]
80003aca:	40 59       	lddsp	r9,sp[0x14]
80003acc:	fa e9 06 94 	st.d	sp[1684],r8
80003ad0:	a9 a5       	sbr	r5,0x8
80003ad2:	fa f8 06 94 	ld.w	r8,sp[1684]
80003ad6:	58 08       	cp.w	r8,0
80003ad8:	c0 65       	brlt	80003ae4 <_vfprintf_r+0x92c>
80003ada:	40 5e       	lddsp	lr,sp[0x14]
80003adc:	30 0c       	mov	r12,0
80003ade:	50 6e       	stdsp	sp[0x18],lr
80003ae0:	50 9c       	stdsp	sp[0x24],r12
80003ae2:	c0 78       	rjmp	80003af0 <_vfprintf_r+0x938>
80003ae4:	40 5b       	lddsp	r11,sp[0x14]
80003ae6:	32 da       	mov	r10,45
80003ae8:	ee 1b 80 00 	eorh	r11,0x8000
80003aec:	50 9a       	stdsp	sp[0x24],r10
80003aee:	50 6b       	stdsp	sp[0x18],r11
80003af0:	e0 40 00 46 	cp.w	r0,70
80003af4:	5f 09       	sreq	r9
80003af6:	e0 40 00 66 	cp.w	r0,102
80003afa:	5f 08       	sreq	r8
80003afc:	f3 e8 10 08 	or	r8,r9,r8
80003b00:	50 48       	stdsp	sp[0x10],r8
80003b02:	c0 40       	breq	80003b0a <_vfprintf_r+0x952>
80003b04:	40 22       	lddsp	r2,sp[0x8]
80003b06:	30 39       	mov	r9,3
80003b08:	c1 08       	rjmp	80003b28 <_vfprintf_r+0x970>
80003b0a:	e0 40 00 45 	cp.w	r0,69
80003b0e:	5f 09       	sreq	r9
80003b10:	e0 40 00 65 	cp.w	r0,101
80003b14:	5f 08       	sreq	r8
80003b16:	40 22       	lddsp	r2,sp[0x8]
80003b18:	10 49       	or	r9,r8
80003b1a:	2f f2       	sub	r2,-1
80003b1c:	40 46       	lddsp	r6,sp[0x10]
80003b1e:	ec 09 18 00 	cp.b	r9,r6
80003b22:	fb f2 00 02 	ld.weq	r2,sp[0x8]
80003b26:	30 29       	mov	r9,2
80003b28:	fa c8 f9 5c 	sub	r8,sp,-1700
80003b2c:	1a d8       	st.w	--sp,r8
80003b2e:	fa c8 f9 54 	sub	r8,sp,-1708
80003b32:	1a d8       	st.w	--sp,r8
80003b34:	fa c8 f9 4c 	sub	r8,sp,-1716
80003b38:	08 9c       	mov	r12,r4
80003b3a:	1a d8       	st.w	--sp,r8
80003b3c:	04 98       	mov	r8,r2
80003b3e:	40 9b       	lddsp	r11,sp[0x24]
80003b40:	40 aa       	lddsp	r10,sp[0x28]
80003b42:	e0 a0 0b c3 	rcall	800052c8 <_dtoa_r>
80003b46:	e0 40 00 47 	cp.w	r0,71
80003b4a:	5f 19       	srne	r9
80003b4c:	e0 40 00 67 	cp.w	r0,103
80003b50:	5f 18       	srne	r8
80003b52:	18 96       	mov	r6,r12
80003b54:	2f dd       	sub	sp,-12
80003b56:	f3 e8 00 08 	and	r8,r9,r8
80003b5a:	c0 41       	brne	80003b62 <_vfprintf_r+0x9aa>
80003b5c:	ed b5 00 00 	bld	r5,0x0
80003b60:	c3 01       	brne	80003bc0 <_vfprintf_r+0xa08>
80003b62:	ec 02 00 0e 	add	lr,r6,r2
80003b66:	50 3e       	stdsp	sp[0xc],lr
80003b68:	40 4c       	lddsp	r12,sp[0x10]
80003b6a:	58 0c       	cp.w	r12,0
80003b6c:	c1 50       	breq	80003b96 <_vfprintf_r+0x9de>
80003b6e:	0d 89       	ld.ub	r9,r6[0x0]
80003b70:	33 08       	mov	r8,48
80003b72:	f0 09 18 00 	cp.b	r9,r8
80003b76:	c0 b1       	brne	80003b8c <_vfprintf_r+0x9d4>
80003b78:	30 08       	mov	r8,0
80003b7a:	30 09       	mov	r9,0
80003b7c:	40 6b       	lddsp	r11,sp[0x18]
80003b7e:	40 7a       	lddsp	r10,sp[0x1c]
80003b80:	e0 a0 20 ef 	rcall	80007d5e <__avr32_f64_cmp_eq>
80003b84:	fb b2 00 01 	rsubeq	r2,1
80003b88:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
80003b8c:	40 3b       	lddsp	r11,sp[0xc]
80003b8e:	fa f8 06 ac 	ld.w	r8,sp[1708]
80003b92:	10 0b       	add	r11,r8
80003b94:	50 3b       	stdsp	sp[0xc],r11
80003b96:	40 6b       	lddsp	r11,sp[0x18]
80003b98:	30 08       	mov	r8,0
80003b9a:	30 09       	mov	r9,0
80003b9c:	40 7a       	lddsp	r10,sp[0x1c]
80003b9e:	e0 a0 20 e0 	rcall	80007d5e <__avr32_f64_cmp_eq>
80003ba2:	c0 90       	breq	80003bb4 <_vfprintf_r+0x9fc>
80003ba4:	40 3a       	lddsp	r10,sp[0xc]
80003ba6:	fb 4a 06 a4 	st.w	sp[1700],r10
80003baa:	c0 58       	rjmp	80003bb4 <_vfprintf_r+0x9fc>
80003bac:	10 c9       	st.b	r8++,r9
80003bae:	fb 48 06 a4 	st.w	sp[1700],r8
80003bb2:	c0 28       	rjmp	80003bb6 <_vfprintf_r+0x9fe>
80003bb4:	33 09       	mov	r9,48
80003bb6:	fa f8 06 a4 	ld.w	r8,sp[1700]
80003bba:	40 3e       	lddsp	lr,sp[0xc]
80003bbc:	1c 38       	cp.w	r8,lr
80003bbe:	cf 73       	brcs	80003bac <_vfprintf_r+0x9f4>
80003bc0:	e0 40 00 47 	cp.w	r0,71
80003bc4:	5f 09       	sreq	r9
80003bc6:	e0 40 00 67 	cp.w	r0,103
80003bca:	5f 08       	sreq	r8
80003bcc:	f3 e8 10 08 	or	r8,r9,r8
80003bd0:	fa f9 06 a4 	ld.w	r9,sp[1700]
80003bd4:	0c 19       	sub	r9,r6
80003bd6:	50 69       	stdsp	sp[0x18],r9
80003bd8:	58 08       	cp.w	r8,0
80003bda:	c0 b0       	breq	80003bf0 <_vfprintf_r+0xa38>
80003bdc:	fa f8 06 ac 	ld.w	r8,sp[1708]
80003be0:	5b d8       	cp.w	r8,-3
80003be2:	c0 55       	brlt	80003bec <_vfprintf_r+0xa34>
80003be4:	40 2c       	lddsp	r12,sp[0x8]
80003be6:	18 38       	cp.w	r8,r12
80003be8:	e0 8a 00 6a 	brle	80003cbc <_vfprintf_r+0xb04>
80003bec:	20 20       	sub	r0,2
80003bee:	c0 58       	rjmp	80003bf8 <_vfprintf_r+0xa40>
80003bf0:	e0 40 00 65 	cp.w	r0,101
80003bf4:	e0 89 00 46 	brgt	80003c80 <_vfprintf_r+0xac8>
80003bf8:	fa fb 06 ac 	ld.w	r11,sp[1708]
80003bfc:	fb 60 06 9c 	st.b	sp[1692],r0
80003c00:	20 1b       	sub	r11,1
80003c02:	fb 4b 06 ac 	st.w	sp[1708],r11
80003c06:	c0 47       	brpl	80003c0e <_vfprintf_r+0xa56>
80003c08:	5c 3b       	neg	r11
80003c0a:	32 d8       	mov	r8,45
80003c0c:	c0 28       	rjmp	80003c10 <_vfprintf_r+0xa58>
80003c0e:	32 b8       	mov	r8,43
80003c10:	fb 68 06 9d 	st.b	sp[1693],r8
80003c14:	58 9b       	cp.w	r11,9
80003c16:	e0 8a 00 1d 	brle	80003c50 <_vfprintf_r+0xa98>
80003c1a:	fa c9 fa 35 	sub	r9,sp,-1483
80003c1e:	30 aa       	mov	r10,10
80003c20:	12 98       	mov	r8,r9
80003c22:	0e 9c       	mov	r12,r7
80003c24:	0c 92       	mov	r2,r6
80003c26:	f6 0a 0c 06 	divs	r6,r11,r10
80003c2a:	0e 9b       	mov	r11,r7
80003c2c:	2d 0b       	sub	r11,-48
80003c2e:	10 fb       	st.b	--r8,r11
80003c30:	0c 9b       	mov	r11,r6
80003c32:	58 96       	cp.w	r6,9
80003c34:	fe 99 ff f9 	brgt	80003c26 <_vfprintf_r+0xa6e>
80003c38:	2d 0b       	sub	r11,-48
80003c3a:	18 97       	mov	r7,r12
80003c3c:	04 96       	mov	r6,r2
80003c3e:	10 fb       	st.b	--r8,r11
80003c40:	fa ca f9 62 	sub	r10,sp,-1694
80003c44:	c0 38       	rjmp	80003c4a <_vfprintf_r+0xa92>
80003c46:	11 3b       	ld.ub	r11,r8++
80003c48:	14 cb       	st.b	r10++,r11
80003c4a:	12 38       	cp.w	r8,r9
80003c4c:	cf d3       	brcs	80003c46 <_vfprintf_r+0xa8e>
80003c4e:	c0 98       	rjmp	80003c60 <_vfprintf_r+0xaa8>
80003c50:	2d 0b       	sub	r11,-48
80003c52:	33 08       	mov	r8,48
80003c54:	fb 6b 06 9f 	st.b	sp[1695],r11
80003c58:	fb 68 06 9e 	st.b	sp[1694],r8
80003c5c:	fa ca f9 60 	sub	r10,sp,-1696
80003c60:	fa c8 f9 64 	sub	r8,sp,-1692
80003c64:	f4 08 01 08 	sub	r8,r10,r8
80003c68:	50 e8       	stdsp	sp[0x38],r8
80003c6a:	10 92       	mov	r2,r8
80003c6c:	40 6b       	lddsp	r11,sp[0x18]
80003c6e:	16 02       	add	r2,r11
80003c70:	58 1b       	cp.w	r11,1
80003c72:	e0 89 00 05 	brgt	80003c7c <_vfprintf_r+0xac4>
80003c76:	ed b5 00 00 	bld	r5,0x0
80003c7a:	c3 51       	brne	80003ce4 <_vfprintf_r+0xb2c>
80003c7c:	2f f2       	sub	r2,-1
80003c7e:	c3 38       	rjmp	80003ce4 <_vfprintf_r+0xb2c>
80003c80:	e0 40 00 66 	cp.w	r0,102
80003c84:	c1 c1       	brne	80003cbc <_vfprintf_r+0xb04>
80003c86:	fa f2 06 ac 	ld.w	r2,sp[1708]
80003c8a:	58 02       	cp.w	r2,0
80003c8c:	e0 8a 00 0c 	brle	80003ca4 <_vfprintf_r+0xaec>
80003c90:	40 2a       	lddsp	r10,sp[0x8]
80003c92:	58 0a       	cp.w	r10,0
80003c94:	c0 41       	brne	80003c9c <_vfprintf_r+0xae4>
80003c96:	ed b5 00 00 	bld	r5,0x0
80003c9a:	c2 51       	brne	80003ce4 <_vfprintf_r+0xb2c>
80003c9c:	2f f2       	sub	r2,-1
80003c9e:	40 29       	lddsp	r9,sp[0x8]
80003ca0:	12 02       	add	r2,r9
80003ca2:	c0 b8       	rjmp	80003cb8 <_vfprintf_r+0xb00>
80003ca4:	40 28       	lddsp	r8,sp[0x8]
80003ca6:	58 08       	cp.w	r8,0
80003ca8:	c0 61       	brne	80003cb4 <_vfprintf_r+0xafc>
80003caa:	ed b5 00 00 	bld	r5,0x0
80003cae:	c0 30       	breq	80003cb4 <_vfprintf_r+0xafc>
80003cb0:	30 12       	mov	r2,1
80003cb2:	c1 98       	rjmp	80003ce4 <_vfprintf_r+0xb2c>
80003cb4:	40 22       	lddsp	r2,sp[0x8]
80003cb6:	2f e2       	sub	r2,-2
80003cb8:	36 60       	mov	r0,102
80003cba:	c1 58       	rjmp	80003ce4 <_vfprintf_r+0xb2c>
80003cbc:	fa f2 06 ac 	ld.w	r2,sp[1708]
80003cc0:	40 6e       	lddsp	lr,sp[0x18]
80003cc2:	1c 32       	cp.w	r2,lr
80003cc4:	c0 65       	brlt	80003cd0 <_vfprintf_r+0xb18>
80003cc6:	ed b5 00 00 	bld	r5,0x0
80003cca:	f7 b2 00 ff 	subeq	r2,-1
80003cce:	c0 a8       	rjmp	80003ce2 <_vfprintf_r+0xb2a>
80003cd0:	e4 08 11 02 	rsub	r8,r2,2
80003cd4:	40 6c       	lddsp	r12,sp[0x18]
80003cd6:	58 02       	cp.w	r2,0
80003cd8:	f0 02 17 a0 	movle	r2,r8
80003cdc:	f9 b2 09 01 	movgt	r2,1
80003ce0:	18 02       	add	r2,r12
80003ce2:	36 70       	mov	r0,103
80003ce4:	40 9b       	lddsp	r11,sp[0x24]
80003ce6:	58 0b       	cp.w	r11,0
80003ce8:	e0 80 05 94 	breq	80004810 <_vfprintf_r+0x1658>
80003cec:	32 d8       	mov	r8,45
80003cee:	fb 68 06 bb 	st.b	sp[1723],r8
80003cf2:	e0 8f 05 93 	bral	80004818 <_vfprintf_r+0x1660>
80003cf6:	50 a7       	stdsp	sp[0x28],r7
80003cf8:	04 94       	mov	r4,r2
80003cfa:	0c 97       	mov	r7,r6
80003cfc:	02 92       	mov	r2,r1
80003cfe:	06 96       	mov	r6,r3
80003d00:	40 41       	lddsp	r1,sp[0x10]
80003d02:	40 93       	lddsp	r3,sp[0x24]
80003d04:	0e 99       	mov	r9,r7
80003d06:	ed b5 00 05 	bld	r5,0x5
80003d0a:	c4 81       	brne	80003d9a <_vfprintf_r+0xbe2>
80003d0c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003d10:	40 3e       	lddsp	lr,sp[0xc]
80003d12:	58 0e       	cp.w	lr,0
80003d14:	c1 d0       	breq	80003d4e <_vfprintf_r+0xb96>
80003d16:	10 36       	cp.w	r6,r8
80003d18:	c0 64       	brge	80003d24 <_vfprintf_r+0xb6c>
80003d1a:	fa cc f9 44 	sub	r12,sp,-1724
80003d1e:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003d22:	c1 d8       	rjmp	80003d5c <_vfprintf_r+0xba4>
80003d24:	fa c8 f9 50 	sub	r8,sp,-1712
80003d28:	1a d8       	st.w	--sp,r8
80003d2a:	fa c8 fa b8 	sub	r8,sp,-1352
80003d2e:	04 9a       	mov	r10,r2
80003d30:	1a d8       	st.w	--sp,r8
80003d32:	fa c8 fb b4 	sub	r8,sp,-1100
80003d36:	0c 9b       	mov	r11,r6
80003d38:	1a d8       	st.w	--sp,r8
80003d3a:	08 9c       	mov	r12,r4
80003d3c:	fa c8 f9 40 	sub	r8,sp,-1728
80003d40:	fa c9 ff b4 	sub	r9,sp,-76
80003d44:	fe b0 f8 a2 	rcall	80002e88 <get_arg>
80003d48:	2f dd       	sub	sp,-12
80003d4a:	78 0a       	ld.w	r10,r12[0x0]
80003d4c:	c2 08       	rjmp	80003d8c <_vfprintf_r+0xbd4>
80003d4e:	2f f7       	sub	r7,-1
80003d50:	10 39       	cp.w	r9,r8
80003d52:	c0 84       	brge	80003d62 <_vfprintf_r+0xbaa>
80003d54:	fa cb f9 44 	sub	r11,sp,-1724
80003d58:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003d5c:	ec fa fd 88 	ld.w	r10,r6[-632]
80003d60:	c1 68       	rjmp	80003d8c <_vfprintf_r+0xbd4>
80003d62:	41 09       	lddsp	r9,sp[0x40]
80003d64:	59 f8       	cp.w	r8,31
80003d66:	e0 89 00 10 	brgt	80003d86 <_vfprintf_r+0xbce>
80003d6a:	f2 ca ff fc 	sub	r10,r9,-4
80003d6e:	51 0a       	stdsp	sp[0x40],r10
80003d70:	fa c6 f9 44 	sub	r6,sp,-1724
80003d74:	72 0a       	ld.w	r10,r9[0x0]
80003d76:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003d7a:	f3 4a fd 88 	st.w	r9[-632],r10
80003d7e:	2f f8       	sub	r8,-1
80003d80:	fb 48 06 b4 	st.w	sp[1716],r8
80003d84:	c0 48       	rjmp	80003d8c <_vfprintf_r+0xbd4>
80003d86:	72 0a       	ld.w	r10,r9[0x0]
80003d88:	2f c9       	sub	r9,-4
80003d8a:	51 09       	stdsp	sp[0x40],r9
80003d8c:	40 be       	lddsp	lr,sp[0x2c]
80003d8e:	1c 98       	mov	r8,lr
80003d90:	95 1e       	st.w	r10[0x4],lr
80003d92:	bf 58       	asr	r8,0x1f
80003d94:	95 08       	st.w	r10[0x0],r8
80003d96:	fe 9f fa 9f 	bral	800032d4 <_vfprintf_r+0x11c>
80003d9a:	ed b5 00 04 	bld	r5,0x4
80003d9e:	c4 80       	breq	80003e2e <_vfprintf_r+0xc76>
80003da0:	e2 15 00 40 	andl	r5,0x40,COH
80003da4:	c4 50       	breq	80003e2e <_vfprintf_r+0xc76>
80003da6:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003daa:	40 3c       	lddsp	r12,sp[0xc]
80003dac:	58 0c       	cp.w	r12,0
80003dae:	c1 d0       	breq	80003de8 <_vfprintf_r+0xc30>
80003db0:	10 36       	cp.w	r6,r8
80003db2:	c0 64       	brge	80003dbe <_vfprintf_r+0xc06>
80003db4:	fa cb f9 44 	sub	r11,sp,-1724
80003db8:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003dbc:	c1 d8       	rjmp	80003df6 <_vfprintf_r+0xc3e>
80003dbe:	fa c8 f9 50 	sub	r8,sp,-1712
80003dc2:	1a d8       	st.w	--sp,r8
80003dc4:	fa c8 fa b8 	sub	r8,sp,-1352
80003dc8:	04 9a       	mov	r10,r2
80003dca:	1a d8       	st.w	--sp,r8
80003dcc:	fa c8 fb b4 	sub	r8,sp,-1100
80003dd0:	0c 9b       	mov	r11,r6
80003dd2:	1a d8       	st.w	--sp,r8
80003dd4:	08 9c       	mov	r12,r4
80003dd6:	fa c8 f9 40 	sub	r8,sp,-1728
80003dda:	fa c9 ff b4 	sub	r9,sp,-76
80003dde:	fe b0 f8 55 	rcall	80002e88 <get_arg>
80003de2:	2f dd       	sub	sp,-12
80003de4:	78 0a       	ld.w	r10,r12[0x0]
80003de6:	c2 08       	rjmp	80003e26 <_vfprintf_r+0xc6e>
80003de8:	2f f7       	sub	r7,-1
80003dea:	10 39       	cp.w	r9,r8
80003dec:	c0 84       	brge	80003dfc <_vfprintf_r+0xc44>
80003dee:	fa ca f9 44 	sub	r10,sp,-1724
80003df2:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003df6:	ec fa fd 88 	ld.w	r10,r6[-632]
80003dfa:	c1 68       	rjmp	80003e26 <_vfprintf_r+0xc6e>
80003dfc:	41 09       	lddsp	r9,sp[0x40]
80003dfe:	59 f8       	cp.w	r8,31
80003e00:	e0 89 00 10 	brgt	80003e20 <_vfprintf_r+0xc68>
80003e04:	f2 ca ff fc 	sub	r10,r9,-4
80003e08:	51 0a       	stdsp	sp[0x40],r10
80003e0a:	fa c6 f9 44 	sub	r6,sp,-1724
80003e0e:	72 0a       	ld.w	r10,r9[0x0]
80003e10:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003e14:	f3 4a fd 88 	st.w	r9[-632],r10
80003e18:	2f f8       	sub	r8,-1
80003e1a:	fb 48 06 b4 	st.w	sp[1716],r8
80003e1e:	c0 48       	rjmp	80003e26 <_vfprintf_r+0xc6e>
80003e20:	72 0a       	ld.w	r10,r9[0x0]
80003e22:	2f c9       	sub	r9,-4
80003e24:	51 09       	stdsp	sp[0x40],r9
80003e26:	40 be       	lddsp	lr,sp[0x2c]
80003e28:	b4 0e       	st.h	r10[0x0],lr
80003e2a:	fe 9f fa 55 	bral	800032d4 <_vfprintf_r+0x11c>
80003e2e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003e32:	40 3c       	lddsp	r12,sp[0xc]
80003e34:	58 0c       	cp.w	r12,0
80003e36:	c1 d0       	breq	80003e70 <_vfprintf_r+0xcb8>
80003e38:	10 36       	cp.w	r6,r8
80003e3a:	c0 64       	brge	80003e46 <_vfprintf_r+0xc8e>
80003e3c:	fa cb f9 44 	sub	r11,sp,-1724
80003e40:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003e44:	c1 d8       	rjmp	80003e7e <_vfprintf_r+0xcc6>
80003e46:	fa c8 f9 50 	sub	r8,sp,-1712
80003e4a:	1a d8       	st.w	--sp,r8
80003e4c:	fa c8 fa b8 	sub	r8,sp,-1352
80003e50:	04 9a       	mov	r10,r2
80003e52:	1a d8       	st.w	--sp,r8
80003e54:	fa c8 fb b4 	sub	r8,sp,-1100
80003e58:	0c 9b       	mov	r11,r6
80003e5a:	1a d8       	st.w	--sp,r8
80003e5c:	08 9c       	mov	r12,r4
80003e5e:	fa c8 f9 40 	sub	r8,sp,-1728
80003e62:	fa c9 ff b4 	sub	r9,sp,-76
80003e66:	fe b0 f8 11 	rcall	80002e88 <get_arg>
80003e6a:	2f dd       	sub	sp,-12
80003e6c:	78 0a       	ld.w	r10,r12[0x0]
80003e6e:	c2 08       	rjmp	80003eae <_vfprintf_r+0xcf6>
80003e70:	2f f7       	sub	r7,-1
80003e72:	10 39       	cp.w	r9,r8
80003e74:	c0 84       	brge	80003e84 <_vfprintf_r+0xccc>
80003e76:	fa ca f9 44 	sub	r10,sp,-1724
80003e7a:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003e7e:	ec fa fd 88 	ld.w	r10,r6[-632]
80003e82:	c1 68       	rjmp	80003eae <_vfprintf_r+0xcf6>
80003e84:	41 09       	lddsp	r9,sp[0x40]
80003e86:	59 f8       	cp.w	r8,31
80003e88:	e0 89 00 10 	brgt	80003ea8 <_vfprintf_r+0xcf0>
80003e8c:	f2 ca ff fc 	sub	r10,r9,-4
80003e90:	51 0a       	stdsp	sp[0x40],r10
80003e92:	fa c6 f9 44 	sub	r6,sp,-1724
80003e96:	72 0a       	ld.w	r10,r9[0x0]
80003e98:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003e9c:	f3 4a fd 88 	st.w	r9[-632],r10
80003ea0:	2f f8       	sub	r8,-1
80003ea2:	fb 48 06 b4 	st.w	sp[1716],r8
80003ea6:	c0 48       	rjmp	80003eae <_vfprintf_r+0xcf6>
80003ea8:	72 0a       	ld.w	r10,r9[0x0]
80003eaa:	2f c9       	sub	r9,-4
80003eac:	51 09       	stdsp	sp[0x40],r9
80003eae:	40 be       	lddsp	lr,sp[0x2c]
80003eb0:	95 0e       	st.w	r10[0x0],lr
80003eb2:	fe 9f fa 11 	bral	800032d4 <_vfprintf_r+0x11c>
80003eb6:	50 a7       	stdsp	sp[0x28],r7
80003eb8:	50 80       	stdsp	sp[0x20],r0
80003eba:	0c 97       	mov	r7,r6
80003ebc:	04 94       	mov	r4,r2
80003ebe:	06 96       	mov	r6,r3
80003ec0:	02 92       	mov	r2,r1
80003ec2:	40 93       	lddsp	r3,sp[0x24]
80003ec4:	10 90       	mov	r0,r8
80003ec6:	40 41       	lddsp	r1,sp[0x10]
80003ec8:	a5 a5       	sbr	r5,0x4
80003eca:	c0 a8       	rjmp	80003ede <_vfprintf_r+0xd26>
80003ecc:	50 a7       	stdsp	sp[0x28],r7
80003ece:	50 80       	stdsp	sp[0x20],r0
80003ed0:	0c 97       	mov	r7,r6
80003ed2:	04 94       	mov	r4,r2
80003ed4:	06 96       	mov	r6,r3
80003ed6:	02 92       	mov	r2,r1
80003ed8:	40 93       	lddsp	r3,sp[0x24]
80003eda:	10 90       	mov	r0,r8
80003edc:	40 41       	lddsp	r1,sp[0x10]
80003ede:	ed b5 00 05 	bld	r5,0x5
80003ee2:	c5 d1       	brne	80003f9c <_vfprintf_r+0xde4>
80003ee4:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003ee8:	40 3c       	lddsp	r12,sp[0xc]
80003eea:	58 0c       	cp.w	r12,0
80003eec:	c2 60       	breq	80003f38 <_vfprintf_r+0xd80>
80003eee:	10 36       	cp.w	r6,r8
80003ef0:	c0 a4       	brge	80003f04 <_vfprintf_r+0xd4c>
80003ef2:	fa cb f9 44 	sub	r11,sp,-1724
80003ef6:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003efa:	ec e8 fd 88 	ld.d	r8,r6[-632]
80003efe:	fa e9 00 00 	st.d	sp[0],r8
80003f02:	c1 88       	rjmp	80003f32 <_vfprintf_r+0xd7a>
80003f04:	fa c8 f9 50 	sub	r8,sp,-1712
80003f08:	1a d8       	st.w	--sp,r8
80003f0a:	fa c8 fa b8 	sub	r8,sp,-1352
80003f0e:	04 9a       	mov	r10,r2
80003f10:	1a d8       	st.w	--sp,r8
80003f12:	0c 9b       	mov	r11,r6
80003f14:	fa c8 fb b4 	sub	r8,sp,-1100
80003f18:	08 9c       	mov	r12,r4
80003f1a:	1a d8       	st.w	--sp,r8
80003f1c:	fa c8 f9 40 	sub	r8,sp,-1728
80003f20:	fa c9 ff b4 	sub	r9,sp,-76
80003f24:	fe b0 f7 b2 	rcall	80002e88 <get_arg>
80003f28:	2f dd       	sub	sp,-12
80003f2a:	f8 ea 00 00 	ld.d	r10,r12[0]
80003f2e:	fa eb 00 00 	st.d	sp[0],r10
80003f32:	30 08       	mov	r8,0
80003f34:	e0 8f 03 de 	bral	800046f0 <_vfprintf_r+0x1538>
80003f38:	ee ca ff ff 	sub	r10,r7,-1
80003f3c:	10 37       	cp.w	r7,r8
80003f3e:	c0 b4       	brge	80003f54 <_vfprintf_r+0xd9c>
80003f40:	fa c9 f9 44 	sub	r9,sp,-1724
80003f44:	14 97       	mov	r7,r10
80003f46:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003f4a:	ec ea fd 88 	ld.d	r10,r6[-632]
80003f4e:	fa eb 00 00 	st.d	sp[0],r10
80003f52:	c1 88       	rjmp	80003f82 <_vfprintf_r+0xdca>
80003f54:	41 09       	lddsp	r9,sp[0x40]
80003f56:	59 f8       	cp.w	r8,31
80003f58:	e0 89 00 18 	brgt	80003f88 <_vfprintf_r+0xdd0>
80003f5c:	f2 e6 00 00 	ld.d	r6,r9[0]
80003f60:	f2 cb ff f8 	sub	r11,r9,-8
80003f64:	fa e7 00 00 	st.d	sp[0],r6
80003f68:	51 0b       	stdsp	sp[0x40],r11
80003f6a:	fa c6 f9 44 	sub	r6,sp,-1724
80003f6e:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003f72:	fa e6 00 00 	ld.d	r6,sp[0]
80003f76:	f2 e7 fd 88 	st.d	r9[-632],r6
80003f7a:	2f f8       	sub	r8,-1
80003f7c:	14 97       	mov	r7,r10
80003f7e:	fb 48 06 b4 	st.w	sp[1716],r8
80003f82:	40 38       	lddsp	r8,sp[0xc]
80003f84:	e0 8f 03 b6 	bral	800046f0 <_vfprintf_r+0x1538>
80003f88:	f2 e6 00 00 	ld.d	r6,r9[0]
80003f8c:	40 38       	lddsp	r8,sp[0xc]
80003f8e:	fa e7 00 00 	st.d	sp[0],r6
80003f92:	2f 89       	sub	r9,-8
80003f94:	14 97       	mov	r7,r10
80003f96:	51 09       	stdsp	sp[0x40],r9
80003f98:	e0 8f 03 ac 	bral	800046f0 <_vfprintf_r+0x1538>
80003f9c:	ed b5 00 04 	bld	r5,0x4
80003fa0:	c1 61       	brne	80003fcc <_vfprintf_r+0xe14>
80003fa2:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003fa6:	40 3e       	lddsp	lr,sp[0xc]
80003fa8:	58 0e       	cp.w	lr,0
80003faa:	c0 80       	breq	80003fba <_vfprintf_r+0xe02>
80003fac:	10 36       	cp.w	r6,r8
80003fae:	c6 74       	brge	8000407c <_vfprintf_r+0xec4>
80003fb0:	fa cc f9 44 	sub	r12,sp,-1724
80003fb4:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003fb8:	c8 08       	rjmp	800040b8 <_vfprintf_r+0xf00>
80003fba:	ee ca ff ff 	sub	r10,r7,-1
80003fbe:	10 37       	cp.w	r7,r8
80003fc0:	c7 f4       	brge	800040be <_vfprintf_r+0xf06>
80003fc2:	fa cb f9 44 	sub	r11,sp,-1724
80003fc6:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003fca:	c7 68       	rjmp	800040b6 <_vfprintf_r+0xefe>
80003fcc:	ed b5 00 06 	bld	r5,0x6
80003fd0:	c4 a1       	brne	80004064 <_vfprintf_r+0xeac>
80003fd2:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003fd6:	40 3c       	lddsp	r12,sp[0xc]
80003fd8:	58 0c       	cp.w	r12,0
80003fda:	c1 d0       	breq	80004014 <_vfprintf_r+0xe5c>
80003fdc:	10 36       	cp.w	r6,r8
80003fde:	c0 64       	brge	80003fea <_vfprintf_r+0xe32>
80003fe0:	fa cb f9 44 	sub	r11,sp,-1724
80003fe4:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003fe8:	c1 f8       	rjmp	80004026 <_vfprintf_r+0xe6e>
80003fea:	fa c8 f9 50 	sub	r8,sp,-1712
80003fee:	1a d8       	st.w	--sp,r8
80003ff0:	fa c8 fa b8 	sub	r8,sp,-1352
80003ff4:	1a d8       	st.w	--sp,r8
80003ff6:	fa c8 fb b4 	sub	r8,sp,-1100
80003ffa:	1a d8       	st.w	--sp,r8
80003ffc:	fa c8 f9 40 	sub	r8,sp,-1728
80004000:	fa c9 ff b4 	sub	r9,sp,-76
80004004:	04 9a       	mov	r10,r2
80004006:	0c 9b       	mov	r11,r6
80004008:	08 9c       	mov	r12,r4
8000400a:	fe b0 f7 3f 	rcall	80002e88 <get_arg>
8000400e:	2f dd       	sub	sp,-12
80004010:	98 18       	ld.sh	r8,r12[0x2]
80004012:	c2 68       	rjmp	8000405e <_vfprintf_r+0xea6>
80004014:	ee ca ff ff 	sub	r10,r7,-1
80004018:	10 37       	cp.w	r7,r8
8000401a:	c0 94       	brge	8000402c <_vfprintf_r+0xe74>
8000401c:	fa c9 f9 44 	sub	r9,sp,-1724
80004020:	14 97       	mov	r7,r10
80004022:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004026:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000402a:	c1 a8       	rjmp	8000405e <_vfprintf_r+0xea6>
8000402c:	41 09       	lddsp	r9,sp[0x40]
8000402e:	59 f8       	cp.w	r8,31
80004030:	e0 89 00 13 	brgt	80004056 <_vfprintf_r+0xe9e>
80004034:	f2 cb ff fc 	sub	r11,r9,-4
80004038:	51 0b       	stdsp	sp[0x40],r11
8000403a:	72 09       	ld.w	r9,r9[0x0]
8000403c:	fa c6 f9 44 	sub	r6,sp,-1724
80004040:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004044:	2f f8       	sub	r8,-1
80004046:	f7 49 fd 88 	st.w	r11[-632],r9
8000404a:	fb 48 06 b4 	st.w	sp[1716],r8
8000404e:	14 97       	mov	r7,r10
80004050:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004054:	c0 58       	rjmp	8000405e <_vfprintf_r+0xea6>
80004056:	92 18       	ld.sh	r8,r9[0x2]
80004058:	14 97       	mov	r7,r10
8000405a:	2f c9       	sub	r9,-4
8000405c:	51 09       	stdsp	sp[0x40],r9
8000405e:	5c 78       	castu.h	r8
80004060:	50 18       	stdsp	sp[0x4],r8
80004062:	c4 68       	rjmp	800040ee <_vfprintf_r+0xf36>
80004064:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004068:	40 3c       	lddsp	r12,sp[0xc]
8000406a:	58 0c       	cp.w	r12,0
8000406c:	c1 d0       	breq	800040a6 <_vfprintf_r+0xeee>
8000406e:	10 36       	cp.w	r6,r8
80004070:	c0 64       	brge	8000407c <_vfprintf_r+0xec4>
80004072:	fa cb f9 44 	sub	r11,sp,-1724
80004076:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000407a:	c1 f8       	rjmp	800040b8 <_vfprintf_r+0xf00>
8000407c:	fa c8 f9 50 	sub	r8,sp,-1712
80004080:	1a d8       	st.w	--sp,r8
80004082:	fa c8 fa b8 	sub	r8,sp,-1352
80004086:	0c 9b       	mov	r11,r6
80004088:	1a d8       	st.w	--sp,r8
8000408a:	fa c8 fb b4 	sub	r8,sp,-1100
8000408e:	04 9a       	mov	r10,r2
80004090:	1a d8       	st.w	--sp,r8
80004092:	08 9c       	mov	r12,r4
80004094:	fa c8 f9 40 	sub	r8,sp,-1728
80004098:	fa c9 ff b4 	sub	r9,sp,-76
8000409c:	fe b0 f6 f6 	rcall	80002e88 <get_arg>
800040a0:	2f dd       	sub	sp,-12
800040a2:	78 0b       	ld.w	r11,r12[0x0]
800040a4:	c2 48       	rjmp	800040ec <_vfprintf_r+0xf34>
800040a6:	ee ca ff ff 	sub	r10,r7,-1
800040aa:	10 37       	cp.w	r7,r8
800040ac:	c0 94       	brge	800040be <_vfprintf_r+0xf06>
800040ae:	fa c9 f9 44 	sub	r9,sp,-1724
800040b2:	f2 06 00 36 	add	r6,r9,r6<<0x3
800040b6:	14 97       	mov	r7,r10
800040b8:	ec fb fd 88 	ld.w	r11,r6[-632]
800040bc:	c1 88       	rjmp	800040ec <_vfprintf_r+0xf34>
800040be:	41 09       	lddsp	r9,sp[0x40]
800040c0:	59 f8       	cp.w	r8,31
800040c2:	e0 89 00 11 	brgt	800040e4 <_vfprintf_r+0xf2c>
800040c6:	f2 cb ff fc 	sub	r11,r9,-4
800040ca:	51 0b       	stdsp	sp[0x40],r11
800040cc:	fa c6 f9 44 	sub	r6,sp,-1724
800040d0:	72 0b       	ld.w	r11,r9[0x0]
800040d2:	ec 08 00 39 	add	r9,r6,r8<<0x3
800040d6:	f3 4b fd 88 	st.w	r9[-632],r11
800040da:	2f f8       	sub	r8,-1
800040dc:	14 97       	mov	r7,r10
800040de:	fb 48 06 b4 	st.w	sp[1716],r8
800040e2:	c0 58       	rjmp	800040ec <_vfprintf_r+0xf34>
800040e4:	72 0b       	ld.w	r11,r9[0x0]
800040e6:	14 97       	mov	r7,r10
800040e8:	2f c9       	sub	r9,-4
800040ea:	51 09       	stdsp	sp[0x40],r9
800040ec:	50 1b       	stdsp	sp[0x4],r11
800040ee:	30 0e       	mov	lr,0
800040f0:	50 0e       	stdsp	sp[0x0],lr
800040f2:	1c 98       	mov	r8,lr
800040f4:	e0 8f 02 fe 	bral	800046f0 <_vfprintf_r+0x1538>
800040f8:	50 a7       	stdsp	sp[0x28],r7
800040fa:	50 80       	stdsp	sp[0x20],r0
800040fc:	0c 97       	mov	r7,r6
800040fe:	04 94       	mov	r4,r2
80004100:	06 96       	mov	r6,r3
80004102:	02 92       	mov	r2,r1
80004104:	40 93       	lddsp	r3,sp[0x24]
80004106:	40 41       	lddsp	r1,sp[0x10]
80004108:	0e 99       	mov	r9,r7
8000410a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000410e:	40 3c       	lddsp	r12,sp[0xc]
80004110:	58 0c       	cp.w	r12,0
80004112:	c1 d0       	breq	8000414c <_vfprintf_r+0xf94>
80004114:	10 36       	cp.w	r6,r8
80004116:	c0 64       	brge	80004122 <_vfprintf_r+0xf6a>
80004118:	fa cb f9 44 	sub	r11,sp,-1724
8000411c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004120:	c1 d8       	rjmp	8000415a <_vfprintf_r+0xfa2>
80004122:	fa c8 f9 50 	sub	r8,sp,-1712
80004126:	1a d8       	st.w	--sp,r8
80004128:	fa c8 fa b8 	sub	r8,sp,-1352
8000412c:	1a d8       	st.w	--sp,r8
8000412e:	fa c8 fb b4 	sub	r8,sp,-1100
80004132:	1a d8       	st.w	--sp,r8
80004134:	fa c9 ff b4 	sub	r9,sp,-76
80004138:	fa c8 f9 40 	sub	r8,sp,-1728
8000413c:	04 9a       	mov	r10,r2
8000413e:	0c 9b       	mov	r11,r6
80004140:	08 9c       	mov	r12,r4
80004142:	fe b0 f6 a3 	rcall	80002e88 <get_arg>
80004146:	2f dd       	sub	sp,-12
80004148:	78 09       	ld.w	r9,r12[0x0]
8000414a:	c2 18       	rjmp	8000418c <_vfprintf_r+0xfd4>
8000414c:	2f f7       	sub	r7,-1
8000414e:	10 39       	cp.w	r9,r8
80004150:	c0 84       	brge	80004160 <_vfprintf_r+0xfa8>
80004152:	fa ca f9 44 	sub	r10,sp,-1724
80004156:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000415a:	ec f9 fd 88 	ld.w	r9,r6[-632]
8000415e:	c1 78       	rjmp	8000418c <_vfprintf_r+0xfd4>
80004160:	41 09       	lddsp	r9,sp[0x40]
80004162:	59 f8       	cp.w	r8,31
80004164:	e0 89 00 10 	brgt	80004184 <_vfprintf_r+0xfcc>
80004168:	f2 ca ff fc 	sub	r10,r9,-4
8000416c:	51 0a       	stdsp	sp[0x40],r10
8000416e:	fa c6 f9 44 	sub	r6,sp,-1724
80004172:	72 09       	ld.w	r9,r9[0x0]
80004174:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80004178:	f5 49 fd 88 	st.w	r10[-632],r9
8000417c:	2f f8       	sub	r8,-1
8000417e:	fb 48 06 b4 	st.w	sp[1716],r8
80004182:	c0 58       	rjmp	8000418c <_vfprintf_r+0xfd4>
80004184:	f2 c8 ff fc 	sub	r8,r9,-4
80004188:	51 08       	stdsp	sp[0x40],r8
8000418a:	72 09       	ld.w	r9,r9[0x0]
8000418c:	33 08       	mov	r8,48
8000418e:	fb 68 06 b8 	st.b	sp[1720],r8
80004192:	37 88       	mov	r8,120
80004194:	30 0e       	mov	lr,0
80004196:	fb 68 06 b9 	st.b	sp[1721],r8
8000419a:	fe cc b5 8a 	sub	r12,pc,-19062
8000419e:	50 19       	stdsp	sp[0x4],r9
800041a0:	a1 b5       	sbr	r5,0x1
800041a2:	50 0e       	stdsp	sp[0x0],lr
800041a4:	50 dc       	stdsp	sp[0x34],r12
800041a6:	30 28       	mov	r8,2
800041a8:	37 80       	mov	r0,120
800041aa:	e0 8f 02 a3 	bral	800046f0 <_vfprintf_r+0x1538>
800041ae:	50 a7       	stdsp	sp[0x28],r7
800041b0:	50 80       	stdsp	sp[0x20],r0
800041b2:	10 90       	mov	r0,r8
800041b4:	30 08       	mov	r8,0
800041b6:	fb 68 06 bb 	st.b	sp[1723],r8
800041ba:	0c 97       	mov	r7,r6
800041bc:	04 94       	mov	r4,r2
800041be:	06 96       	mov	r6,r3
800041c0:	02 92       	mov	r2,r1
800041c2:	40 93       	lddsp	r3,sp[0x24]
800041c4:	40 41       	lddsp	r1,sp[0x10]
800041c6:	0e 99       	mov	r9,r7
800041c8:	fa f8 06 b4 	ld.w	r8,sp[1716]
800041cc:	40 3b       	lddsp	r11,sp[0xc]
800041ce:	58 0b       	cp.w	r11,0
800041d0:	c1 d0       	breq	8000420a <_vfprintf_r+0x1052>
800041d2:	10 36       	cp.w	r6,r8
800041d4:	c0 64       	brge	800041e0 <_vfprintf_r+0x1028>
800041d6:	fa ca f9 44 	sub	r10,sp,-1724
800041da:	f4 06 00 36 	add	r6,r10,r6<<0x3
800041de:	c1 d8       	rjmp	80004218 <_vfprintf_r+0x1060>
800041e0:	fa c8 f9 50 	sub	r8,sp,-1712
800041e4:	1a d8       	st.w	--sp,r8
800041e6:	fa c8 fa b8 	sub	r8,sp,-1352
800041ea:	1a d8       	st.w	--sp,r8
800041ec:	fa c8 fb b4 	sub	r8,sp,-1100
800041f0:	0c 9b       	mov	r11,r6
800041f2:	1a d8       	st.w	--sp,r8
800041f4:	04 9a       	mov	r10,r2
800041f6:	fa c8 f9 40 	sub	r8,sp,-1728
800041fa:	fa c9 ff b4 	sub	r9,sp,-76
800041fe:	08 9c       	mov	r12,r4
80004200:	fe b0 f6 44 	rcall	80002e88 <get_arg>
80004204:	2f dd       	sub	sp,-12
80004206:	78 06       	ld.w	r6,r12[0x0]
80004208:	c2 08       	rjmp	80004248 <_vfprintf_r+0x1090>
8000420a:	2f f7       	sub	r7,-1
8000420c:	10 39       	cp.w	r9,r8
8000420e:	c0 84       	brge	8000421e <_vfprintf_r+0x1066>
80004210:	fa c9 f9 44 	sub	r9,sp,-1724
80004214:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004218:	ec f6 fd 88 	ld.w	r6,r6[-632]
8000421c:	c1 68       	rjmp	80004248 <_vfprintf_r+0x1090>
8000421e:	41 09       	lddsp	r9,sp[0x40]
80004220:	59 f8       	cp.w	r8,31
80004222:	e0 89 00 10 	brgt	80004242 <_vfprintf_r+0x108a>
80004226:	f2 ca ff fc 	sub	r10,r9,-4
8000422a:	51 0a       	stdsp	sp[0x40],r10
8000422c:	72 06       	ld.w	r6,r9[0x0]
8000422e:	fa ce f9 44 	sub	lr,sp,-1724
80004232:	fc 08 00 39 	add	r9,lr,r8<<0x3
80004236:	f3 46 fd 88 	st.w	r9[-632],r6
8000423a:	2f f8       	sub	r8,-1
8000423c:	fb 48 06 b4 	st.w	sp[1716],r8
80004240:	c0 48       	rjmp	80004248 <_vfprintf_r+0x1090>
80004242:	72 06       	ld.w	r6,r9[0x0]
80004244:	2f c9       	sub	r9,-4
80004246:	51 09       	stdsp	sp[0x40],r9
80004248:	40 2c       	lddsp	r12,sp[0x8]
8000424a:	58 0c       	cp.w	r12,0
8000424c:	c1 05       	brlt	8000426c <_vfprintf_r+0x10b4>
8000424e:	18 9a       	mov	r10,r12
80004250:	30 0b       	mov	r11,0
80004252:	0c 9c       	mov	r12,r6
80004254:	e0 a0 14 58 	rcall	80006b04 <memchr>
80004258:	e0 80 02 df 	breq	80004816 <_vfprintf_r+0x165e>
8000425c:	f8 06 01 02 	sub	r2,r12,r6
80004260:	40 2b       	lddsp	r11,sp[0x8]
80004262:	16 32       	cp.w	r2,r11
80004264:	e0 89 02 d9 	brgt	80004816 <_vfprintf_r+0x165e>
80004268:	e0 8f 02 d4 	bral	80004810 <_vfprintf_r+0x1658>
8000426c:	30 0a       	mov	r10,0
8000426e:	0c 9c       	mov	r12,r6
80004270:	50 2a       	stdsp	sp[0x8],r10
80004272:	e0 a0 19 33 	rcall	800074d8 <strlen>
80004276:	18 92       	mov	r2,r12
80004278:	e0 8f 02 d2 	bral	8000481c <_vfprintf_r+0x1664>
8000427c:	50 a7       	stdsp	sp[0x28],r7
8000427e:	50 80       	stdsp	sp[0x20],r0
80004280:	0c 97       	mov	r7,r6
80004282:	04 94       	mov	r4,r2
80004284:	06 96       	mov	r6,r3
80004286:	02 92       	mov	r2,r1
80004288:	40 93       	lddsp	r3,sp[0x24]
8000428a:	10 90       	mov	r0,r8
8000428c:	40 41       	lddsp	r1,sp[0x10]
8000428e:	a5 a5       	sbr	r5,0x4
80004290:	c0 a8       	rjmp	800042a4 <_vfprintf_r+0x10ec>
80004292:	50 a7       	stdsp	sp[0x28],r7
80004294:	50 80       	stdsp	sp[0x20],r0
80004296:	0c 97       	mov	r7,r6
80004298:	04 94       	mov	r4,r2
8000429a:	06 96       	mov	r6,r3
8000429c:	02 92       	mov	r2,r1
8000429e:	40 93       	lddsp	r3,sp[0x24]
800042a0:	10 90       	mov	r0,r8
800042a2:	40 41       	lddsp	r1,sp[0x10]
800042a4:	ed b5 00 05 	bld	r5,0x5
800042a8:	c5 61       	brne	80004354 <_vfprintf_r+0x119c>
800042aa:	fa f8 06 b4 	ld.w	r8,sp[1716]
800042ae:	40 39       	lddsp	r9,sp[0xc]
800042b0:	58 09       	cp.w	r9,0
800042b2:	c2 10       	breq	800042f4 <_vfprintf_r+0x113c>
800042b4:	10 36       	cp.w	r6,r8
800042b6:	c0 74       	brge	800042c4 <_vfprintf_r+0x110c>
800042b8:	fa c8 f9 44 	sub	r8,sp,-1724
800042bc:	f0 06 00 36 	add	r6,r8,r6<<0x3
800042c0:	c2 38       	rjmp	80004306 <_vfprintf_r+0x114e>
800042c2:	d7 03       	nop
800042c4:	fa c8 f9 50 	sub	r8,sp,-1712
800042c8:	1a d8       	st.w	--sp,r8
800042ca:	fa c8 fa b8 	sub	r8,sp,-1352
800042ce:	1a d8       	st.w	--sp,r8
800042d0:	fa c8 fb b4 	sub	r8,sp,-1100
800042d4:	1a d8       	st.w	--sp,r8
800042d6:	fa c8 f9 40 	sub	r8,sp,-1728
800042da:	fa c9 ff b4 	sub	r9,sp,-76
800042de:	04 9a       	mov	r10,r2
800042e0:	0c 9b       	mov	r11,r6
800042e2:	08 9c       	mov	r12,r4
800042e4:	fe b0 f5 d2 	rcall	80002e88 <get_arg>
800042e8:	2f dd       	sub	sp,-12
800042ea:	f8 e8 00 00 	ld.d	r8,r12[0]
800042ee:	fa e9 00 00 	st.d	sp[0],r8
800042f2:	c2 e8       	rjmp	8000434e <_vfprintf_r+0x1196>
800042f4:	ee ca ff ff 	sub	r10,r7,-1
800042f8:	10 37       	cp.w	r7,r8
800042fa:	c0 b4       	brge	80004310 <_vfprintf_r+0x1158>
800042fc:	fa c8 f9 44 	sub	r8,sp,-1724
80004300:	14 97       	mov	r7,r10
80004302:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004306:	ec ea fd 88 	ld.d	r10,r6[-632]
8000430a:	fa eb 00 00 	st.d	sp[0],r10
8000430e:	c2 08       	rjmp	8000434e <_vfprintf_r+0x1196>
80004310:	41 09       	lddsp	r9,sp[0x40]
80004312:	59 f8       	cp.w	r8,31
80004314:	e0 89 00 16 	brgt	80004340 <_vfprintf_r+0x1188>
80004318:	f2 e6 00 00 	ld.d	r6,r9[0]
8000431c:	f2 cb ff f8 	sub	r11,r9,-8
80004320:	fa e7 00 00 	st.d	sp[0],r6
80004324:	51 0b       	stdsp	sp[0x40],r11
80004326:	fa c6 f9 44 	sub	r6,sp,-1724
8000432a:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000432e:	fa e6 00 00 	ld.d	r6,sp[0]
80004332:	f2 e7 fd 88 	st.d	r9[-632],r6
80004336:	2f f8       	sub	r8,-1
80004338:	14 97       	mov	r7,r10
8000433a:	fb 48 06 b4 	st.w	sp[1716],r8
8000433e:	c0 88       	rjmp	8000434e <_vfprintf_r+0x1196>
80004340:	f2 e6 00 00 	ld.d	r6,r9[0]
80004344:	2f 89       	sub	r9,-8
80004346:	fa e7 00 00 	st.d	sp[0],r6
8000434a:	51 09       	stdsp	sp[0x40],r9
8000434c:	14 97       	mov	r7,r10
8000434e:	30 18       	mov	r8,1
80004350:	e0 8f 01 d0 	bral	800046f0 <_vfprintf_r+0x1538>
80004354:	ed b5 00 04 	bld	r5,0x4
80004358:	c1 61       	brne	80004384 <_vfprintf_r+0x11cc>
8000435a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000435e:	40 3e       	lddsp	lr,sp[0xc]
80004360:	58 0e       	cp.w	lr,0
80004362:	c0 80       	breq	80004372 <_vfprintf_r+0x11ba>
80004364:	10 36       	cp.w	r6,r8
80004366:	c6 74       	brge	80004434 <_vfprintf_r+0x127c>
80004368:	fa cc f9 44 	sub	r12,sp,-1724
8000436c:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004370:	c8 08       	rjmp	80004470 <_vfprintf_r+0x12b8>
80004372:	ee ca ff ff 	sub	r10,r7,-1
80004376:	10 37       	cp.w	r7,r8
80004378:	c7 f4       	brge	80004476 <_vfprintf_r+0x12be>
8000437a:	fa cb f9 44 	sub	r11,sp,-1724
8000437e:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004382:	c7 68       	rjmp	8000446e <_vfprintf_r+0x12b6>
80004384:	ed b5 00 06 	bld	r5,0x6
80004388:	c4 a1       	brne	8000441c <_vfprintf_r+0x1264>
8000438a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000438e:	40 3c       	lddsp	r12,sp[0xc]
80004390:	58 0c       	cp.w	r12,0
80004392:	c1 d0       	breq	800043cc <_vfprintf_r+0x1214>
80004394:	10 36       	cp.w	r6,r8
80004396:	c0 64       	brge	800043a2 <_vfprintf_r+0x11ea>
80004398:	fa cb f9 44 	sub	r11,sp,-1724
8000439c:	f6 06 00 36 	add	r6,r11,r6<<0x3
800043a0:	c1 f8       	rjmp	800043de <_vfprintf_r+0x1226>
800043a2:	fa c8 f9 50 	sub	r8,sp,-1712
800043a6:	1a d8       	st.w	--sp,r8
800043a8:	fa c8 fa b8 	sub	r8,sp,-1352
800043ac:	1a d8       	st.w	--sp,r8
800043ae:	fa c8 fb b4 	sub	r8,sp,-1100
800043b2:	1a d8       	st.w	--sp,r8
800043b4:	fa c8 f9 40 	sub	r8,sp,-1728
800043b8:	fa c9 ff b4 	sub	r9,sp,-76
800043bc:	04 9a       	mov	r10,r2
800043be:	0c 9b       	mov	r11,r6
800043c0:	08 9c       	mov	r12,r4
800043c2:	fe b0 f5 63 	rcall	80002e88 <get_arg>
800043c6:	2f dd       	sub	sp,-12
800043c8:	98 18       	ld.sh	r8,r12[0x2]
800043ca:	c2 68       	rjmp	80004416 <_vfprintf_r+0x125e>
800043cc:	ee ca ff ff 	sub	r10,r7,-1
800043d0:	10 37       	cp.w	r7,r8
800043d2:	c0 94       	brge	800043e4 <_vfprintf_r+0x122c>
800043d4:	fa c9 f9 44 	sub	r9,sp,-1724
800043d8:	14 97       	mov	r7,r10
800043da:	f2 06 00 36 	add	r6,r9,r6<<0x3
800043de:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
800043e2:	c1 a8       	rjmp	80004416 <_vfprintf_r+0x125e>
800043e4:	41 09       	lddsp	r9,sp[0x40]
800043e6:	59 f8       	cp.w	r8,31
800043e8:	e0 89 00 13 	brgt	8000440e <_vfprintf_r+0x1256>
800043ec:	f2 cb ff fc 	sub	r11,r9,-4
800043f0:	51 0b       	stdsp	sp[0x40],r11
800043f2:	72 09       	ld.w	r9,r9[0x0]
800043f4:	fa c6 f9 44 	sub	r6,sp,-1724
800043f8:	ec 08 00 3b 	add	r11,r6,r8<<0x3
800043fc:	2f f8       	sub	r8,-1
800043fe:	f7 49 fd 88 	st.w	r11[-632],r9
80004402:	fb 48 06 b4 	st.w	sp[1716],r8
80004406:	14 97       	mov	r7,r10
80004408:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000440c:	c0 58       	rjmp	80004416 <_vfprintf_r+0x125e>
8000440e:	92 18       	ld.sh	r8,r9[0x2]
80004410:	14 97       	mov	r7,r10
80004412:	2f c9       	sub	r9,-4
80004414:	51 09       	stdsp	sp[0x40],r9
80004416:	5c 78       	castu.h	r8
80004418:	50 18       	stdsp	sp[0x4],r8
8000441a:	c4 68       	rjmp	800044a6 <_vfprintf_r+0x12ee>
8000441c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004420:	40 3c       	lddsp	r12,sp[0xc]
80004422:	58 0c       	cp.w	r12,0
80004424:	c1 d0       	breq	8000445e <_vfprintf_r+0x12a6>
80004426:	10 36       	cp.w	r6,r8
80004428:	c0 64       	brge	80004434 <_vfprintf_r+0x127c>
8000442a:	fa cb f9 44 	sub	r11,sp,-1724
8000442e:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004432:	c1 f8       	rjmp	80004470 <_vfprintf_r+0x12b8>
80004434:	fa c8 f9 50 	sub	r8,sp,-1712
80004438:	1a d8       	st.w	--sp,r8
8000443a:	fa c8 fa b8 	sub	r8,sp,-1352
8000443e:	0c 9b       	mov	r11,r6
80004440:	1a d8       	st.w	--sp,r8
80004442:	fa c8 fb b4 	sub	r8,sp,-1100
80004446:	04 9a       	mov	r10,r2
80004448:	1a d8       	st.w	--sp,r8
8000444a:	08 9c       	mov	r12,r4
8000444c:	fa c8 f9 40 	sub	r8,sp,-1728
80004450:	fa c9 ff b4 	sub	r9,sp,-76
80004454:	fe b0 f5 1a 	rcall	80002e88 <get_arg>
80004458:	2f dd       	sub	sp,-12
8000445a:	78 0b       	ld.w	r11,r12[0x0]
8000445c:	c2 48       	rjmp	800044a4 <_vfprintf_r+0x12ec>
8000445e:	ee ca ff ff 	sub	r10,r7,-1
80004462:	10 37       	cp.w	r7,r8
80004464:	c0 94       	brge	80004476 <_vfprintf_r+0x12be>
80004466:	fa c9 f9 44 	sub	r9,sp,-1724
8000446a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000446e:	14 97       	mov	r7,r10
80004470:	ec fb fd 88 	ld.w	r11,r6[-632]
80004474:	c1 88       	rjmp	800044a4 <_vfprintf_r+0x12ec>
80004476:	41 09       	lddsp	r9,sp[0x40]
80004478:	59 f8       	cp.w	r8,31
8000447a:	e0 89 00 11 	brgt	8000449c <_vfprintf_r+0x12e4>
8000447e:	f2 cb ff fc 	sub	r11,r9,-4
80004482:	51 0b       	stdsp	sp[0x40],r11
80004484:	fa c6 f9 44 	sub	r6,sp,-1724
80004488:	72 0b       	ld.w	r11,r9[0x0]
8000448a:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000448e:	f3 4b fd 88 	st.w	r9[-632],r11
80004492:	2f f8       	sub	r8,-1
80004494:	14 97       	mov	r7,r10
80004496:	fb 48 06 b4 	st.w	sp[1716],r8
8000449a:	c0 58       	rjmp	800044a4 <_vfprintf_r+0x12ec>
8000449c:	72 0b       	ld.w	r11,r9[0x0]
8000449e:	14 97       	mov	r7,r10
800044a0:	2f c9       	sub	r9,-4
800044a2:	51 09       	stdsp	sp[0x40],r9
800044a4:	50 1b       	stdsp	sp[0x4],r11
800044a6:	30 0e       	mov	lr,0
800044a8:	30 18       	mov	r8,1
800044aa:	50 0e       	stdsp	sp[0x0],lr
800044ac:	c2 29       	rjmp	800046f0 <_vfprintf_r+0x1538>
800044ae:	50 a7       	stdsp	sp[0x28],r7
800044b0:	50 80       	stdsp	sp[0x20],r0
800044b2:	0c 97       	mov	r7,r6
800044b4:	04 94       	mov	r4,r2
800044b6:	06 96       	mov	r6,r3
800044b8:	02 92       	mov	r2,r1
800044ba:	fe cc b8 aa 	sub	r12,pc,-18262
800044be:	40 93       	lddsp	r3,sp[0x24]
800044c0:	10 90       	mov	r0,r8
800044c2:	40 41       	lddsp	r1,sp[0x10]
800044c4:	50 dc       	stdsp	sp[0x34],r12
800044c6:	ed b5 00 05 	bld	r5,0x5
800044ca:	c5 51       	brne	80004574 <_vfprintf_r+0x13bc>
800044cc:	fa f8 06 b4 	ld.w	r8,sp[1716]
800044d0:	40 3b       	lddsp	r11,sp[0xc]
800044d2:	58 0b       	cp.w	r11,0
800044d4:	c2 20       	breq	80004518 <_vfprintf_r+0x1360>
800044d6:	10 36       	cp.w	r6,r8
800044d8:	c0 a4       	brge	800044ec <_vfprintf_r+0x1334>
800044da:	fa ca f9 44 	sub	r10,sp,-1724
800044de:	f4 06 00 36 	add	r6,r10,r6<<0x3
800044e2:	ec e8 fd 88 	ld.d	r8,r6[-632]
800044e6:	fa e9 00 00 	st.d	sp[0],r8
800044ea:	cf 28       	rjmp	800046ce <_vfprintf_r+0x1516>
800044ec:	fa c8 f9 50 	sub	r8,sp,-1712
800044f0:	1a d8       	st.w	--sp,r8
800044f2:	fa c8 fa b8 	sub	r8,sp,-1352
800044f6:	04 9a       	mov	r10,r2
800044f8:	1a d8       	st.w	--sp,r8
800044fa:	0c 9b       	mov	r11,r6
800044fc:	fa c8 fb b4 	sub	r8,sp,-1100
80004500:	08 9c       	mov	r12,r4
80004502:	1a d8       	st.w	--sp,r8
80004504:	fa c8 f9 40 	sub	r8,sp,-1728
80004508:	fa c9 ff b4 	sub	r9,sp,-76
8000450c:	fe b0 f4 be 	rcall	80002e88 <get_arg>
80004510:	2f dd       	sub	sp,-12
80004512:	f8 ea 00 00 	ld.d	r10,r12[0]
80004516:	c0 c8       	rjmp	8000452e <_vfprintf_r+0x1376>
80004518:	ee ca ff ff 	sub	r10,r7,-1
8000451c:	10 37       	cp.w	r7,r8
8000451e:	c0 b4       	brge	80004534 <_vfprintf_r+0x137c>
80004520:	fa c9 f9 44 	sub	r9,sp,-1724
80004524:	14 97       	mov	r7,r10
80004526:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000452a:	ec ea fd 88 	ld.d	r10,r6[-632]
8000452e:	fa eb 00 00 	st.d	sp[0],r10
80004532:	cc e8       	rjmp	800046ce <_vfprintf_r+0x1516>
80004534:	41 09       	lddsp	r9,sp[0x40]
80004536:	59 f8       	cp.w	r8,31
80004538:	e0 89 00 16 	brgt	80004564 <_vfprintf_r+0x13ac>
8000453c:	f2 e6 00 00 	ld.d	r6,r9[0]
80004540:	f2 cb ff f8 	sub	r11,r9,-8
80004544:	fa e7 00 00 	st.d	sp[0],r6
80004548:	51 0b       	stdsp	sp[0x40],r11
8000454a:	fa c6 f9 44 	sub	r6,sp,-1724
8000454e:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004552:	fa e6 00 00 	ld.d	r6,sp[0]
80004556:	f2 e7 fd 88 	st.d	r9[-632],r6
8000455a:	2f f8       	sub	r8,-1
8000455c:	14 97       	mov	r7,r10
8000455e:	fb 48 06 b4 	st.w	sp[1716],r8
80004562:	cb 68       	rjmp	800046ce <_vfprintf_r+0x1516>
80004564:	f2 e6 00 00 	ld.d	r6,r9[0]
80004568:	2f 89       	sub	r9,-8
8000456a:	fa e7 00 00 	st.d	sp[0],r6
8000456e:	51 09       	stdsp	sp[0x40],r9
80004570:	14 97       	mov	r7,r10
80004572:	ca e8       	rjmp	800046ce <_vfprintf_r+0x1516>
80004574:	ed b5 00 04 	bld	r5,0x4
80004578:	c1 71       	brne	800045a6 <_vfprintf_r+0x13ee>
8000457a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000457e:	40 3e       	lddsp	lr,sp[0xc]
80004580:	58 0e       	cp.w	lr,0
80004582:	c0 80       	breq	80004592 <_vfprintf_r+0x13da>
80004584:	10 36       	cp.w	r6,r8
80004586:	c6 94       	brge	80004658 <_vfprintf_r+0x14a0>
80004588:	fa cc f9 44 	sub	r12,sp,-1724
8000458c:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004590:	c8 28       	rjmp	80004694 <_vfprintf_r+0x14dc>
80004592:	ee ca ff ff 	sub	r10,r7,-1
80004596:	10 37       	cp.w	r7,r8
80004598:	e0 84 00 81 	brge	8000469a <_vfprintf_r+0x14e2>
8000459c:	fa cb f9 44 	sub	r11,sp,-1724
800045a0:	f6 06 00 36 	add	r6,r11,r6<<0x3
800045a4:	c7 78       	rjmp	80004692 <_vfprintf_r+0x14da>
800045a6:	ed b5 00 06 	bld	r5,0x6
800045aa:	c4 b1       	brne	80004640 <_vfprintf_r+0x1488>
800045ac:	fa f8 06 b4 	ld.w	r8,sp[1716]
800045b0:	40 3c       	lddsp	r12,sp[0xc]
800045b2:	58 0c       	cp.w	r12,0
800045b4:	c1 d0       	breq	800045ee <_vfprintf_r+0x1436>
800045b6:	10 36       	cp.w	r6,r8
800045b8:	c0 64       	brge	800045c4 <_vfprintf_r+0x140c>
800045ba:	fa cb f9 44 	sub	r11,sp,-1724
800045be:	f6 06 00 36 	add	r6,r11,r6<<0x3
800045c2:	c1 f8       	rjmp	80004600 <_vfprintf_r+0x1448>
800045c4:	fa c8 f9 50 	sub	r8,sp,-1712
800045c8:	1a d8       	st.w	--sp,r8
800045ca:	fa c8 fa b8 	sub	r8,sp,-1352
800045ce:	1a d8       	st.w	--sp,r8
800045d0:	fa c8 fb b4 	sub	r8,sp,-1100
800045d4:	1a d8       	st.w	--sp,r8
800045d6:	fa c8 f9 40 	sub	r8,sp,-1728
800045da:	fa c9 ff b4 	sub	r9,sp,-76
800045de:	04 9a       	mov	r10,r2
800045e0:	0c 9b       	mov	r11,r6
800045e2:	08 9c       	mov	r12,r4
800045e4:	fe b0 f4 52 	rcall	80002e88 <get_arg>
800045e8:	2f dd       	sub	sp,-12
800045ea:	98 18       	ld.sh	r8,r12[0x2]
800045ec:	c2 78       	rjmp	8000463a <_vfprintf_r+0x1482>
800045ee:	ee ca ff ff 	sub	r10,r7,-1
800045f2:	10 37       	cp.w	r7,r8
800045f4:	c0 a4       	brge	80004608 <_vfprintf_r+0x1450>
800045f6:	fa c9 f9 44 	sub	r9,sp,-1724
800045fa:	14 97       	mov	r7,r10
800045fc:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004600:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004604:	c1 b8       	rjmp	8000463a <_vfprintf_r+0x1482>
80004606:	d7 03       	nop
80004608:	41 09       	lddsp	r9,sp[0x40]
8000460a:	59 f8       	cp.w	r8,31
8000460c:	e0 89 00 13 	brgt	80004632 <_vfprintf_r+0x147a>
80004610:	f2 cb ff fc 	sub	r11,r9,-4
80004614:	51 0b       	stdsp	sp[0x40],r11
80004616:	72 09       	ld.w	r9,r9[0x0]
80004618:	fa c6 f9 44 	sub	r6,sp,-1724
8000461c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004620:	2f f8       	sub	r8,-1
80004622:	f7 49 fd 88 	st.w	r11[-632],r9
80004626:	fb 48 06 b4 	st.w	sp[1716],r8
8000462a:	14 97       	mov	r7,r10
8000462c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004630:	c0 58       	rjmp	8000463a <_vfprintf_r+0x1482>
80004632:	92 18       	ld.sh	r8,r9[0x2]
80004634:	14 97       	mov	r7,r10
80004636:	2f c9       	sub	r9,-4
80004638:	51 09       	stdsp	sp[0x40],r9
8000463a:	5c 78       	castu.h	r8
8000463c:	50 18       	stdsp	sp[0x4],r8
8000463e:	c4 68       	rjmp	800046ca <_vfprintf_r+0x1512>
80004640:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004644:	40 3c       	lddsp	r12,sp[0xc]
80004646:	58 0c       	cp.w	r12,0
80004648:	c1 d0       	breq	80004682 <_vfprintf_r+0x14ca>
8000464a:	10 36       	cp.w	r6,r8
8000464c:	c0 64       	brge	80004658 <_vfprintf_r+0x14a0>
8000464e:	fa cb f9 44 	sub	r11,sp,-1724
80004652:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004656:	c1 f8       	rjmp	80004694 <_vfprintf_r+0x14dc>
80004658:	fa c8 f9 50 	sub	r8,sp,-1712
8000465c:	1a d8       	st.w	--sp,r8
8000465e:	fa c8 fa b8 	sub	r8,sp,-1352
80004662:	0c 9b       	mov	r11,r6
80004664:	1a d8       	st.w	--sp,r8
80004666:	fa c8 fb b4 	sub	r8,sp,-1100
8000466a:	04 9a       	mov	r10,r2
8000466c:	1a d8       	st.w	--sp,r8
8000466e:	08 9c       	mov	r12,r4
80004670:	fa c8 f9 40 	sub	r8,sp,-1728
80004674:	fa c9 ff b4 	sub	r9,sp,-76
80004678:	fe b0 f4 08 	rcall	80002e88 <get_arg>
8000467c:	2f dd       	sub	sp,-12
8000467e:	78 0b       	ld.w	r11,r12[0x0]
80004680:	c2 48       	rjmp	800046c8 <_vfprintf_r+0x1510>
80004682:	ee ca ff ff 	sub	r10,r7,-1
80004686:	10 37       	cp.w	r7,r8
80004688:	c0 94       	brge	8000469a <_vfprintf_r+0x14e2>
8000468a:	fa c9 f9 44 	sub	r9,sp,-1724
8000468e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004692:	14 97       	mov	r7,r10
80004694:	ec fb fd 88 	ld.w	r11,r6[-632]
80004698:	c1 88       	rjmp	800046c8 <_vfprintf_r+0x1510>
8000469a:	41 09       	lddsp	r9,sp[0x40]
8000469c:	59 f8       	cp.w	r8,31
8000469e:	e0 89 00 11 	brgt	800046c0 <_vfprintf_r+0x1508>
800046a2:	f2 cb ff fc 	sub	r11,r9,-4
800046a6:	51 0b       	stdsp	sp[0x40],r11
800046a8:	fa c6 f9 44 	sub	r6,sp,-1724
800046ac:	72 0b       	ld.w	r11,r9[0x0]
800046ae:	ec 08 00 39 	add	r9,r6,r8<<0x3
800046b2:	f3 4b fd 88 	st.w	r9[-632],r11
800046b6:	2f f8       	sub	r8,-1
800046b8:	14 97       	mov	r7,r10
800046ba:	fb 48 06 b4 	st.w	sp[1716],r8
800046be:	c0 58       	rjmp	800046c8 <_vfprintf_r+0x1510>
800046c0:	72 0b       	ld.w	r11,r9[0x0]
800046c2:	14 97       	mov	r7,r10
800046c4:	2f c9       	sub	r9,-4
800046c6:	51 09       	stdsp	sp[0x40],r9
800046c8:	50 1b       	stdsp	sp[0x4],r11
800046ca:	30 0e       	mov	lr,0
800046cc:	50 0e       	stdsp	sp[0x0],lr
800046ce:	40 08       	lddsp	r8,sp[0x0]
800046d0:	40 1c       	lddsp	r12,sp[0x4]
800046d2:	18 48       	or	r8,r12
800046d4:	5f 19       	srne	r9
800046d6:	0a 98       	mov	r8,r5
800046d8:	eb e9 00 09 	and	r9,r5,r9
800046dc:	a1 b8       	sbr	r8,0x1
800046de:	58 09       	cp.w	r9,0
800046e0:	c0 70       	breq	800046ee <_vfprintf_r+0x1536>
800046e2:	10 95       	mov	r5,r8
800046e4:	fb 60 06 b9 	st.b	sp[1721],r0
800046e8:	33 08       	mov	r8,48
800046ea:	fb 68 06 b8 	st.b	sp[1720],r8
800046ee:	30 28       	mov	r8,2
800046f0:	30 09       	mov	r9,0
800046f2:	fb 69 06 bb 	st.b	sp[1723],r9
800046f6:	0a 99       	mov	r9,r5
800046f8:	a7 d9       	cbr	r9,0x7
800046fa:	40 2b       	lddsp	r11,sp[0x8]
800046fc:	40 16       	lddsp	r6,sp[0x4]
800046fe:	58 0b       	cp.w	r11,0
80004700:	5f 1a       	srne	r10
80004702:	f2 05 17 40 	movge	r5,r9
80004706:	fa c2 f9 78 	sub	r2,sp,-1672
8000470a:	40 09       	lddsp	r9,sp[0x0]
8000470c:	0c 49       	or	r9,r6
8000470e:	5f 19       	srne	r9
80004710:	f5 e9 10 09 	or	r9,r10,r9
80004714:	c5 c0       	breq	800047cc <_vfprintf_r+0x1614>
80004716:	30 19       	mov	r9,1
80004718:	f2 08 18 00 	cp.b	r8,r9
8000471c:	c0 60       	breq	80004728 <_vfprintf_r+0x1570>
8000471e:	30 29       	mov	r9,2
80004720:	f2 08 18 00 	cp.b	r8,r9
80004724:	c0 41       	brne	8000472c <_vfprintf_r+0x1574>
80004726:	c3 c8       	rjmp	8000479e <_vfprintf_r+0x15e6>
80004728:	04 96       	mov	r6,r2
8000472a:	c3 08       	rjmp	8000478a <_vfprintf_r+0x15d2>
8000472c:	04 96       	mov	r6,r2
8000472e:	fa e8 00 00 	ld.d	r8,sp[0]
80004732:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
80004736:	2d 0a       	sub	r10,-48
80004738:	0c fa       	st.b	--r6,r10
8000473a:	f0 0b 16 03 	lsr	r11,r8,0x3
8000473e:	f2 0c 16 03 	lsr	r12,r9,0x3
80004742:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
80004746:	18 99       	mov	r9,r12
80004748:	16 98       	mov	r8,r11
8000474a:	58 08       	cp.w	r8,0
8000474c:	5c 29       	cpc	r9
8000474e:	cf 21       	brne	80004732 <_vfprintf_r+0x157a>
80004750:	fa e9 00 00 	st.d	sp[0],r8
80004754:	ed b5 00 00 	bld	r5,0x0
80004758:	c4 51       	brne	800047e2 <_vfprintf_r+0x162a>
8000475a:	33 09       	mov	r9,48
8000475c:	f2 0a 18 00 	cp.b	r10,r9
80004760:	c4 10       	breq	800047e2 <_vfprintf_r+0x162a>
80004762:	0c f9       	st.b	--r6,r9
80004764:	c3 f8       	rjmp	800047e2 <_vfprintf_r+0x162a>
80004766:	fa ea 00 00 	ld.d	r10,sp[0]
8000476a:	30 a8       	mov	r8,10
8000476c:	30 09       	mov	r9,0
8000476e:	e0 a0 1e 31 	rcall	800083d0 <__avr32_umod64>
80004772:	30 a8       	mov	r8,10
80004774:	2d 0a       	sub	r10,-48
80004776:	30 09       	mov	r9,0
80004778:	ac 8a       	st.b	r6[0x0],r10
8000477a:	fa ea 00 00 	ld.d	r10,sp[0]
8000477e:	e0 a0 1c f7 	rcall	8000816c <__avr32_udiv64>
80004782:	16 99       	mov	r9,r11
80004784:	14 98       	mov	r8,r10
80004786:	fa e9 00 00 	st.d	sp[0],r8
8000478a:	20 16       	sub	r6,1
8000478c:	fa ea 00 00 	ld.d	r10,sp[0]
80004790:	58 9a       	cp.w	r10,9
80004792:	5c 2b       	cpc	r11
80004794:	fe 9b ff e9 	brhi	80004766 <_vfprintf_r+0x15ae>
80004798:	1b f8       	ld.ub	r8,sp[0x7]
8000479a:	2d 08       	sub	r8,-48
8000479c:	c2 08       	rjmp	800047dc <_vfprintf_r+0x1624>
8000479e:	04 96       	mov	r6,r2
800047a0:	fa e8 00 00 	ld.d	r8,sp[0]
800047a4:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
800047a8:	40 de       	lddsp	lr,sp[0x34]
800047aa:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
800047ae:	0c fa       	st.b	--r6,r10
800047b0:	f2 0b 16 04 	lsr	r11,r9,0x4
800047b4:	f0 0a 16 04 	lsr	r10,r8,0x4
800047b8:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
800047bc:	16 99       	mov	r9,r11
800047be:	14 98       	mov	r8,r10
800047c0:	58 08       	cp.w	r8,0
800047c2:	5c 29       	cpc	r9
800047c4:	cf 01       	brne	800047a4 <_vfprintf_r+0x15ec>
800047c6:	fa e9 00 00 	st.d	sp[0],r8
800047ca:	c0 c8       	rjmp	800047e2 <_vfprintf_r+0x162a>
800047cc:	58 08       	cp.w	r8,0
800047ce:	c0 91       	brne	800047e0 <_vfprintf_r+0x1628>
800047d0:	ed b5 00 00 	bld	r5,0x0
800047d4:	c0 61       	brne	800047e0 <_vfprintf_r+0x1628>
800047d6:	fa c6 f9 79 	sub	r6,sp,-1671
800047da:	33 08       	mov	r8,48
800047dc:	ac 88       	st.b	r6[0x0],r8
800047de:	c0 28       	rjmp	800047e2 <_vfprintf_r+0x162a>
800047e0:	04 96       	mov	r6,r2
800047e2:	0c 12       	sub	r2,r6
800047e4:	c1 c8       	rjmp	8000481c <_vfprintf_r+0x1664>
800047e6:	50 a7       	stdsp	sp[0x28],r7
800047e8:	50 80       	stdsp	sp[0x20],r0
800047ea:	40 93       	lddsp	r3,sp[0x24]
800047ec:	0c 97       	mov	r7,r6
800047ee:	10 90       	mov	r0,r8
800047f0:	04 94       	mov	r4,r2
800047f2:	40 41       	lddsp	r1,sp[0x10]
800047f4:	58 08       	cp.w	r8,0
800047f6:	e0 80 04 4f 	breq	80005094 <_vfprintf_r+0x1edc>
800047fa:	fb 68 06 60 	st.b	sp[1632],r8
800047fe:	30 0c       	mov	r12,0
80004800:	30 08       	mov	r8,0
80004802:	30 12       	mov	r2,1
80004804:	fb 68 06 bb 	st.b	sp[1723],r8
80004808:	50 2c       	stdsp	sp[0x8],r12
8000480a:	fa c6 f9 a0 	sub	r6,sp,-1632
8000480e:	c0 78       	rjmp	8000481c <_vfprintf_r+0x1664>
80004810:	30 0b       	mov	r11,0
80004812:	50 2b       	stdsp	sp[0x8],r11
80004814:	c0 48       	rjmp	8000481c <_vfprintf_r+0x1664>
80004816:	40 22       	lddsp	r2,sp[0x8]
80004818:	30 0a       	mov	r10,0
8000481a:	50 2a       	stdsp	sp[0x8],r10
8000481c:	40 29       	lddsp	r9,sp[0x8]
8000481e:	e4 09 0c 49 	max	r9,r2,r9
80004822:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80004826:	50 39       	stdsp	sp[0xc],r9
80004828:	0a 9e       	mov	lr,r5
8000482a:	30 09       	mov	r9,0
8000482c:	e2 1e 00 02 	andl	lr,0x2,COH
80004830:	f2 08 18 00 	cp.b	r8,r9
80004834:	fb f8 10 03 	ld.wne	r8,sp[0xc]
80004838:	f7 b8 01 ff 	subne	r8,-1
8000483c:	fb f8 1a 03 	st.wne	sp[0xc],r8
80004840:	0a 9b       	mov	r11,r5
80004842:	58 0e       	cp.w	lr,0
80004844:	fb fc 10 03 	ld.wne	r12,sp[0xc]
80004848:	f7 bc 01 fe 	subne	r12,-2
8000484c:	fb fc 1a 03 	st.wne	sp[0xc],r12
80004850:	e2 1b 00 84 	andl	r11,0x84,COH
80004854:	50 fe       	stdsp	sp[0x3c],lr
80004856:	50 9b       	stdsp	sp[0x24],r11
80004858:	c4 71       	brne	800048e6 <_vfprintf_r+0x172e>
8000485a:	40 8a       	lddsp	r10,sp[0x20]
8000485c:	40 39       	lddsp	r9,sp[0xc]
8000485e:	12 1a       	sub	r10,r9
80004860:	50 4a       	stdsp	sp[0x10],r10
80004862:	58 0a       	cp.w	r10,0
80004864:	e0 89 00 20 	brgt	800048a4 <_vfprintf_r+0x16ec>
80004868:	c3 f8       	rjmp	800048e6 <_vfprintf_r+0x172e>
8000486a:	2f 09       	sub	r9,-16
8000486c:	2f f8       	sub	r8,-1
8000486e:	fe ce bc 46 	sub	lr,pc,-17338
80004872:	31 0c       	mov	r12,16
80004874:	fb 49 06 90 	st.w	sp[1680],r9
80004878:	87 0e       	st.w	r3[0x0],lr
8000487a:	87 1c       	st.w	r3[0x4],r12
8000487c:	fb 48 06 8c 	st.w	sp[1676],r8
80004880:	58 78       	cp.w	r8,7
80004882:	e0 89 00 04 	brgt	8000488a <_vfprintf_r+0x16d2>
80004886:	2f 83       	sub	r3,-8
80004888:	c0 b8       	rjmp	8000489e <_vfprintf_r+0x16e6>
8000488a:	fa ca f9 78 	sub	r10,sp,-1672
8000488e:	02 9b       	mov	r11,r1
80004890:	08 9c       	mov	r12,r4
80004892:	fe b0 f4 85 	rcall	8000319c <__sprint_r>
80004896:	e0 81 04 10 	brne	800050b6 <_vfprintf_r+0x1efe>
8000489a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000489e:	40 4b       	lddsp	r11,sp[0x10]
800048a0:	21 0b       	sub	r11,16
800048a2:	50 4b       	stdsp	sp[0x10],r11
800048a4:	fa f9 06 90 	ld.w	r9,sp[1680]
800048a8:	fa f8 06 8c 	ld.w	r8,sp[1676]
800048ac:	fe ca bc 84 	sub	r10,pc,-17276
800048b0:	40 4e       	lddsp	lr,sp[0x10]
800048b2:	59 0e       	cp.w	lr,16
800048b4:	fe 99 ff db 	brgt	8000486a <_vfprintf_r+0x16b2>
800048b8:	1c 09       	add	r9,lr
800048ba:	2f f8       	sub	r8,-1
800048bc:	87 0a       	st.w	r3[0x0],r10
800048be:	fb 49 06 90 	st.w	sp[1680],r9
800048c2:	87 1e       	st.w	r3[0x4],lr
800048c4:	fb 48 06 8c 	st.w	sp[1676],r8
800048c8:	58 78       	cp.w	r8,7
800048ca:	e0 89 00 04 	brgt	800048d2 <_vfprintf_r+0x171a>
800048ce:	2f 83       	sub	r3,-8
800048d0:	c0 b8       	rjmp	800048e6 <_vfprintf_r+0x172e>
800048d2:	fa ca f9 78 	sub	r10,sp,-1672
800048d6:	02 9b       	mov	r11,r1
800048d8:	08 9c       	mov	r12,r4
800048da:	fe b0 f4 61 	rcall	8000319c <__sprint_r>
800048de:	e0 81 03 ec 	brne	800050b6 <_vfprintf_r+0x1efe>
800048e2:	fa c3 f9 e0 	sub	r3,sp,-1568
800048e6:	30 09       	mov	r9,0
800048e8:	fb 38 06 bb 	ld.ub	r8,sp[1723]
800048ec:	f2 08 18 00 	cp.b	r8,r9
800048f0:	c1 f0       	breq	8000492e <_vfprintf_r+0x1776>
800048f2:	fa f8 06 90 	ld.w	r8,sp[1680]
800048f6:	fa c9 f9 45 	sub	r9,sp,-1723
800048fa:	2f f8       	sub	r8,-1
800048fc:	87 09       	st.w	r3[0x0],r9
800048fe:	fb 48 06 90 	st.w	sp[1680],r8
80004902:	30 19       	mov	r9,1
80004904:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004908:	87 19       	st.w	r3[0x4],r9
8000490a:	2f f8       	sub	r8,-1
8000490c:	fb 48 06 8c 	st.w	sp[1676],r8
80004910:	58 78       	cp.w	r8,7
80004912:	e0 89 00 04 	brgt	8000491a <_vfprintf_r+0x1762>
80004916:	2f 83       	sub	r3,-8
80004918:	c0 b8       	rjmp	8000492e <_vfprintf_r+0x1776>
8000491a:	fa ca f9 78 	sub	r10,sp,-1672
8000491e:	02 9b       	mov	r11,r1
80004920:	08 9c       	mov	r12,r4
80004922:	fe b0 f4 3d 	rcall	8000319c <__sprint_r>
80004926:	e0 81 03 c8 	brne	800050b6 <_vfprintf_r+0x1efe>
8000492a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000492e:	40 fc       	lddsp	r12,sp[0x3c]
80004930:	58 0c       	cp.w	r12,0
80004932:	c1 f0       	breq	80004970 <_vfprintf_r+0x17b8>
80004934:	fa f8 06 90 	ld.w	r8,sp[1680]
80004938:	fa c9 f9 48 	sub	r9,sp,-1720
8000493c:	2f e8       	sub	r8,-2
8000493e:	87 09       	st.w	r3[0x0],r9
80004940:	fb 48 06 90 	st.w	sp[1680],r8
80004944:	30 29       	mov	r9,2
80004946:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000494a:	87 19       	st.w	r3[0x4],r9
8000494c:	2f f8       	sub	r8,-1
8000494e:	fb 48 06 8c 	st.w	sp[1676],r8
80004952:	58 78       	cp.w	r8,7
80004954:	e0 89 00 04 	brgt	8000495c <_vfprintf_r+0x17a4>
80004958:	2f 83       	sub	r3,-8
8000495a:	c0 b8       	rjmp	80004970 <_vfprintf_r+0x17b8>
8000495c:	fa ca f9 78 	sub	r10,sp,-1672
80004960:	02 9b       	mov	r11,r1
80004962:	08 9c       	mov	r12,r4
80004964:	fe b0 f4 1c 	rcall	8000319c <__sprint_r>
80004968:	e0 81 03 a7 	brne	800050b6 <_vfprintf_r+0x1efe>
8000496c:	fa c3 f9 e0 	sub	r3,sp,-1568
80004970:	40 9b       	lddsp	r11,sp[0x24]
80004972:	e0 4b 00 80 	cp.w	r11,128
80004976:	c4 71       	brne	80004a04 <_vfprintf_r+0x184c>
80004978:	40 8a       	lddsp	r10,sp[0x20]
8000497a:	40 39       	lddsp	r9,sp[0xc]
8000497c:	12 1a       	sub	r10,r9
8000497e:	50 4a       	stdsp	sp[0x10],r10
80004980:	58 0a       	cp.w	r10,0
80004982:	e0 89 00 20 	brgt	800049c2 <_vfprintf_r+0x180a>
80004986:	c3 f8       	rjmp	80004a04 <_vfprintf_r+0x184c>
80004988:	2f 09       	sub	r9,-16
8000498a:	2f f8       	sub	r8,-1
8000498c:	fe ce bd 54 	sub	lr,pc,-17068
80004990:	31 0c       	mov	r12,16
80004992:	fb 49 06 90 	st.w	sp[1680],r9
80004996:	87 0e       	st.w	r3[0x0],lr
80004998:	87 1c       	st.w	r3[0x4],r12
8000499a:	fb 48 06 8c 	st.w	sp[1676],r8
8000499e:	58 78       	cp.w	r8,7
800049a0:	e0 89 00 04 	brgt	800049a8 <_vfprintf_r+0x17f0>
800049a4:	2f 83       	sub	r3,-8
800049a6:	c0 b8       	rjmp	800049bc <_vfprintf_r+0x1804>
800049a8:	fa ca f9 78 	sub	r10,sp,-1672
800049ac:	02 9b       	mov	r11,r1
800049ae:	08 9c       	mov	r12,r4
800049b0:	fe b0 f3 f6 	rcall	8000319c <__sprint_r>
800049b4:	e0 81 03 81 	brne	800050b6 <_vfprintf_r+0x1efe>
800049b8:	fa c3 f9 e0 	sub	r3,sp,-1568
800049bc:	40 4b       	lddsp	r11,sp[0x10]
800049be:	21 0b       	sub	r11,16
800049c0:	50 4b       	stdsp	sp[0x10],r11
800049c2:	fa f9 06 90 	ld.w	r9,sp[1680]
800049c6:	fa f8 06 8c 	ld.w	r8,sp[1676]
800049ca:	fe ca bd 92 	sub	r10,pc,-17006
800049ce:	40 4e       	lddsp	lr,sp[0x10]
800049d0:	59 0e       	cp.w	lr,16
800049d2:	fe 99 ff db 	brgt	80004988 <_vfprintf_r+0x17d0>
800049d6:	1c 09       	add	r9,lr
800049d8:	2f f8       	sub	r8,-1
800049da:	87 0a       	st.w	r3[0x0],r10
800049dc:	fb 49 06 90 	st.w	sp[1680],r9
800049e0:	87 1e       	st.w	r3[0x4],lr
800049e2:	fb 48 06 8c 	st.w	sp[1676],r8
800049e6:	58 78       	cp.w	r8,7
800049e8:	e0 89 00 04 	brgt	800049f0 <_vfprintf_r+0x1838>
800049ec:	2f 83       	sub	r3,-8
800049ee:	c0 b8       	rjmp	80004a04 <_vfprintf_r+0x184c>
800049f0:	fa ca f9 78 	sub	r10,sp,-1672
800049f4:	02 9b       	mov	r11,r1
800049f6:	08 9c       	mov	r12,r4
800049f8:	fe b0 f3 d2 	rcall	8000319c <__sprint_r>
800049fc:	e0 81 03 5d 	brne	800050b6 <_vfprintf_r+0x1efe>
80004a00:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a04:	40 2c       	lddsp	r12,sp[0x8]
80004a06:	04 1c       	sub	r12,r2
80004a08:	50 2c       	stdsp	sp[0x8],r12
80004a0a:	58 0c       	cp.w	r12,0
80004a0c:	e0 89 00 20 	brgt	80004a4c <_vfprintf_r+0x1894>
80004a10:	c3 f8       	rjmp	80004a8e <_vfprintf_r+0x18d6>
80004a12:	2f 09       	sub	r9,-16
80004a14:	2f f8       	sub	r8,-1
80004a16:	fe cb bd de 	sub	r11,pc,-16930
80004a1a:	31 0a       	mov	r10,16
80004a1c:	fb 49 06 90 	st.w	sp[1680],r9
80004a20:	87 0b       	st.w	r3[0x0],r11
80004a22:	87 1a       	st.w	r3[0x4],r10
80004a24:	fb 48 06 8c 	st.w	sp[1676],r8
80004a28:	58 78       	cp.w	r8,7
80004a2a:	e0 89 00 04 	brgt	80004a32 <_vfprintf_r+0x187a>
80004a2e:	2f 83       	sub	r3,-8
80004a30:	c0 b8       	rjmp	80004a46 <_vfprintf_r+0x188e>
80004a32:	fa ca f9 78 	sub	r10,sp,-1672
80004a36:	02 9b       	mov	r11,r1
80004a38:	08 9c       	mov	r12,r4
80004a3a:	fe b0 f3 b1 	rcall	8000319c <__sprint_r>
80004a3e:	e0 81 03 3c 	brne	800050b6 <_vfprintf_r+0x1efe>
80004a42:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a46:	40 29       	lddsp	r9,sp[0x8]
80004a48:	21 09       	sub	r9,16
80004a4a:	50 29       	stdsp	sp[0x8],r9
80004a4c:	fa f9 06 90 	ld.w	r9,sp[1680]
80004a50:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004a54:	fe ca be 1c 	sub	r10,pc,-16868
80004a58:	40 2e       	lddsp	lr,sp[0x8]
80004a5a:	59 0e       	cp.w	lr,16
80004a5c:	fe 99 ff db 	brgt	80004a12 <_vfprintf_r+0x185a>
80004a60:	1c 09       	add	r9,lr
80004a62:	2f f8       	sub	r8,-1
80004a64:	87 0a       	st.w	r3[0x0],r10
80004a66:	fb 49 06 90 	st.w	sp[1680],r9
80004a6a:	87 1e       	st.w	r3[0x4],lr
80004a6c:	fb 48 06 8c 	st.w	sp[1676],r8
80004a70:	58 78       	cp.w	r8,7
80004a72:	e0 89 00 04 	brgt	80004a7a <_vfprintf_r+0x18c2>
80004a76:	2f 83       	sub	r3,-8
80004a78:	c0 b8       	rjmp	80004a8e <_vfprintf_r+0x18d6>
80004a7a:	fa ca f9 78 	sub	r10,sp,-1672
80004a7e:	02 9b       	mov	r11,r1
80004a80:	08 9c       	mov	r12,r4
80004a82:	fe b0 f3 8d 	rcall	8000319c <__sprint_r>
80004a86:	e0 81 03 18 	brne	800050b6 <_vfprintf_r+0x1efe>
80004a8a:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a8e:	ed b5 00 08 	bld	r5,0x8
80004a92:	c0 b0       	breq	80004aa8 <_vfprintf_r+0x18f0>
80004a94:	fa f8 06 90 	ld.w	r8,sp[1680]
80004a98:	87 12       	st.w	r3[0x4],r2
80004a9a:	87 06       	st.w	r3[0x0],r6
80004a9c:	f0 02 00 02 	add	r2,r8,r2
80004aa0:	fb 42 06 90 	st.w	sp[1680],r2
80004aa4:	e0 8f 01 d4 	bral	80004e4c <_vfprintf_r+0x1c94>
80004aa8:	e0 40 00 65 	cp.w	r0,101
80004aac:	e0 8a 01 d6 	brle	80004e58 <_vfprintf_r+0x1ca0>
80004ab0:	30 08       	mov	r8,0
80004ab2:	30 09       	mov	r9,0
80004ab4:	40 5b       	lddsp	r11,sp[0x14]
80004ab6:	40 7a       	lddsp	r10,sp[0x1c]
80004ab8:	e0 a0 19 53 	rcall	80007d5e <__avr32_f64_cmp_eq>
80004abc:	c7 90       	breq	80004bae <_vfprintf_r+0x19f6>
80004abe:	fa f8 06 90 	ld.w	r8,sp[1680]
80004ac2:	fe c9 be 9e 	sub	r9,pc,-16738
80004ac6:	2f f8       	sub	r8,-1
80004ac8:	87 09       	st.w	r3[0x0],r9
80004aca:	fb 48 06 90 	st.w	sp[1680],r8
80004ace:	30 19       	mov	r9,1
80004ad0:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004ad4:	87 19       	st.w	r3[0x4],r9
80004ad6:	2f f8       	sub	r8,-1
80004ad8:	fb 48 06 8c 	st.w	sp[1676],r8
80004adc:	58 78       	cp.w	r8,7
80004ade:	e0 89 00 05 	brgt	80004ae8 <_vfprintf_r+0x1930>
80004ae2:	2f 83       	sub	r3,-8
80004ae4:	c0 c8       	rjmp	80004afc <_vfprintf_r+0x1944>
80004ae6:	d7 03       	nop
80004ae8:	fa ca f9 78 	sub	r10,sp,-1672
80004aec:	02 9b       	mov	r11,r1
80004aee:	08 9c       	mov	r12,r4
80004af0:	fe b0 f3 56 	rcall	8000319c <__sprint_r>
80004af4:	e0 81 02 e1 	brne	800050b6 <_vfprintf_r+0x1efe>
80004af8:	fa c3 f9 e0 	sub	r3,sp,-1568
80004afc:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004b00:	40 6c       	lddsp	r12,sp[0x18]
80004b02:	18 38       	cp.w	r8,r12
80004b04:	c0 55       	brlt	80004b0e <_vfprintf_r+0x1956>
80004b06:	ed b5 00 00 	bld	r5,0x0
80004b0a:	e0 81 02 6b 	brne	80004fe0 <_vfprintf_r+0x1e28>
80004b0e:	fa f8 06 90 	ld.w	r8,sp[1680]
80004b12:	2f f8       	sub	r8,-1
80004b14:	40 cb       	lddsp	r11,sp[0x30]
80004b16:	fb 48 06 90 	st.w	sp[1680],r8
80004b1a:	30 19       	mov	r9,1
80004b1c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004b20:	87 0b       	st.w	r3[0x0],r11
80004b22:	2f f8       	sub	r8,-1
80004b24:	87 19       	st.w	r3[0x4],r9
80004b26:	fb 48 06 8c 	st.w	sp[1676],r8
80004b2a:	58 78       	cp.w	r8,7
80004b2c:	e0 89 00 04 	brgt	80004b34 <_vfprintf_r+0x197c>
80004b30:	2f 83       	sub	r3,-8
80004b32:	c0 b8       	rjmp	80004b48 <_vfprintf_r+0x1990>
80004b34:	fa ca f9 78 	sub	r10,sp,-1672
80004b38:	02 9b       	mov	r11,r1
80004b3a:	08 9c       	mov	r12,r4
80004b3c:	fe b0 f3 30 	rcall	8000319c <__sprint_r>
80004b40:	e0 81 02 bb 	brne	800050b6 <_vfprintf_r+0x1efe>
80004b44:	fa c3 f9 e0 	sub	r3,sp,-1568
80004b48:	40 66       	lddsp	r6,sp[0x18]
80004b4a:	20 16       	sub	r6,1
80004b4c:	58 06       	cp.w	r6,0
80004b4e:	e0 89 00 1d 	brgt	80004b88 <_vfprintf_r+0x19d0>
80004b52:	e0 8f 02 47 	bral	80004fe0 <_vfprintf_r+0x1e28>
80004b56:	2f 09       	sub	r9,-16
80004b58:	2f f8       	sub	r8,-1
80004b5a:	fb 49 06 90 	st.w	sp[1680],r9
80004b5e:	87 02       	st.w	r3[0x0],r2
80004b60:	87 10       	st.w	r3[0x4],r0
80004b62:	fb 48 06 8c 	st.w	sp[1676],r8
80004b66:	58 78       	cp.w	r8,7
80004b68:	e0 89 00 04 	brgt	80004b70 <_vfprintf_r+0x19b8>
80004b6c:	2f 83       	sub	r3,-8
80004b6e:	c0 b8       	rjmp	80004b84 <_vfprintf_r+0x19cc>
80004b70:	fa ca f9 78 	sub	r10,sp,-1672
80004b74:	02 9b       	mov	r11,r1
80004b76:	08 9c       	mov	r12,r4
80004b78:	fe b0 f3 12 	rcall	8000319c <__sprint_r>
80004b7c:	e0 81 02 9d 	brne	800050b6 <_vfprintf_r+0x1efe>
80004b80:	fa c3 f9 e0 	sub	r3,sp,-1568
80004b84:	21 06       	sub	r6,16
80004b86:	c0 48       	rjmp	80004b8e <_vfprintf_r+0x19d6>
80004b88:	fe c2 bf 50 	sub	r2,pc,-16560
80004b8c:	31 00       	mov	r0,16
80004b8e:	fa f9 06 90 	ld.w	r9,sp[1680]
80004b92:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004b96:	fe ca bf 5e 	sub	r10,pc,-16546
80004b9a:	59 06       	cp.w	r6,16
80004b9c:	fe 99 ff dd 	brgt	80004b56 <_vfprintf_r+0x199e>
80004ba0:	0c 09       	add	r9,r6
80004ba2:	87 0a       	st.w	r3[0x0],r10
80004ba4:	fb 49 06 90 	st.w	sp[1680],r9
80004ba8:	2f f8       	sub	r8,-1
80004baa:	87 16       	st.w	r3[0x4],r6
80004bac:	c5 39       	rjmp	80004e52 <_vfprintf_r+0x1c9a>
80004bae:	fa fa 06 ac 	ld.w	r10,sp[1708]
80004bb2:	58 0a       	cp.w	r10,0
80004bb4:	e0 89 00 92 	brgt	80004cd8 <_vfprintf_r+0x1b20>
80004bb8:	fa f8 06 90 	ld.w	r8,sp[1680]
80004bbc:	fe c9 bf 98 	sub	r9,pc,-16488
80004bc0:	2f f8       	sub	r8,-1
80004bc2:	87 09       	st.w	r3[0x0],r9
80004bc4:	fb 48 06 90 	st.w	sp[1680],r8
80004bc8:	30 19       	mov	r9,1
80004bca:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004bce:	87 19       	st.w	r3[0x4],r9
80004bd0:	2f f8       	sub	r8,-1
80004bd2:	fb 48 06 8c 	st.w	sp[1676],r8
80004bd6:	58 78       	cp.w	r8,7
80004bd8:	e0 89 00 04 	brgt	80004be0 <_vfprintf_r+0x1a28>
80004bdc:	2f 83       	sub	r3,-8
80004bde:	c0 b8       	rjmp	80004bf4 <_vfprintf_r+0x1a3c>
80004be0:	fa ca f9 78 	sub	r10,sp,-1672
80004be4:	02 9b       	mov	r11,r1
80004be6:	08 9c       	mov	r12,r4
80004be8:	fe b0 f2 da 	rcall	8000319c <__sprint_r>
80004bec:	e0 81 02 65 	brne	800050b6 <_vfprintf_r+0x1efe>
80004bf0:	fa c3 f9 e0 	sub	r3,sp,-1568
80004bf4:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004bf8:	58 08       	cp.w	r8,0
80004bfa:	c0 81       	brne	80004c0a <_vfprintf_r+0x1a52>
80004bfc:	40 6a       	lddsp	r10,sp[0x18]
80004bfe:	58 0a       	cp.w	r10,0
80004c00:	c0 51       	brne	80004c0a <_vfprintf_r+0x1a52>
80004c02:	ed b5 00 00 	bld	r5,0x0
80004c06:	e0 81 01 ed 	brne	80004fe0 <_vfprintf_r+0x1e28>
80004c0a:	40 c9       	lddsp	r9,sp[0x30]
80004c0c:	fa f8 06 90 	ld.w	r8,sp[1680]
80004c10:	2f f8       	sub	r8,-1
80004c12:	87 09       	st.w	r3[0x0],r9
80004c14:	fb 48 06 90 	st.w	sp[1680],r8
80004c18:	30 19       	mov	r9,1
80004c1a:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004c1e:	87 19       	st.w	r3[0x4],r9
80004c20:	2f f8       	sub	r8,-1
80004c22:	fb 48 06 8c 	st.w	sp[1676],r8
80004c26:	58 78       	cp.w	r8,7
80004c28:	e0 89 00 04 	brgt	80004c30 <_vfprintf_r+0x1a78>
80004c2c:	2f 83       	sub	r3,-8
80004c2e:	c0 b8       	rjmp	80004c44 <_vfprintf_r+0x1a8c>
80004c30:	fa ca f9 78 	sub	r10,sp,-1672
80004c34:	02 9b       	mov	r11,r1
80004c36:	08 9c       	mov	r12,r4
80004c38:	fe b0 f2 b2 	rcall	8000319c <__sprint_r>
80004c3c:	e0 81 02 3d 	brne	800050b6 <_vfprintf_r+0x1efe>
80004c40:	fa c3 f9 e0 	sub	r3,sp,-1568
80004c44:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004c48:	5c 32       	neg	r2
80004c4a:	58 02       	cp.w	r2,0
80004c4c:	e0 89 00 1d 	brgt	80004c86 <_vfprintf_r+0x1ace>
80004c50:	c3 d8       	rjmp	80004cca <_vfprintf_r+0x1b12>
80004c52:	2f 09       	sub	r9,-16
80004c54:	2f f8       	sub	r8,-1
80004c56:	31 0e       	mov	lr,16
80004c58:	fb 49 06 90 	st.w	sp[1680],r9
80004c5c:	87 00       	st.w	r3[0x0],r0
80004c5e:	87 1e       	st.w	r3[0x4],lr
80004c60:	fb 48 06 8c 	st.w	sp[1676],r8
80004c64:	58 78       	cp.w	r8,7
80004c66:	e0 89 00 04 	brgt	80004c6e <_vfprintf_r+0x1ab6>
80004c6a:	2f 83       	sub	r3,-8
80004c6c:	c0 b8       	rjmp	80004c82 <_vfprintf_r+0x1aca>
80004c6e:	fa ca f9 78 	sub	r10,sp,-1672
80004c72:	02 9b       	mov	r11,r1
80004c74:	08 9c       	mov	r12,r4
80004c76:	fe b0 f2 93 	rcall	8000319c <__sprint_r>
80004c7a:	e0 81 02 1e 	brne	800050b6 <_vfprintf_r+0x1efe>
80004c7e:	fa c3 f9 e0 	sub	r3,sp,-1568
80004c82:	21 02       	sub	r2,16
80004c84:	c0 38       	rjmp	80004c8a <_vfprintf_r+0x1ad2>
80004c86:	fe c0 c0 4e 	sub	r0,pc,-16306
80004c8a:	fa f9 06 90 	ld.w	r9,sp[1680]
80004c8e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004c92:	fe ca c0 5a 	sub	r10,pc,-16294
80004c96:	59 02       	cp.w	r2,16
80004c98:	fe 99 ff dd 	brgt	80004c52 <_vfprintf_r+0x1a9a>
80004c9c:	04 09       	add	r9,r2
80004c9e:	2f f8       	sub	r8,-1
80004ca0:	87 0a       	st.w	r3[0x0],r10
80004ca2:	fb 49 06 90 	st.w	sp[1680],r9
80004ca6:	87 12       	st.w	r3[0x4],r2
80004ca8:	fb 48 06 8c 	st.w	sp[1676],r8
80004cac:	58 78       	cp.w	r8,7
80004cae:	e0 89 00 04 	brgt	80004cb6 <_vfprintf_r+0x1afe>
80004cb2:	2f 83       	sub	r3,-8
80004cb4:	c0 b8       	rjmp	80004cca <_vfprintf_r+0x1b12>
80004cb6:	fa ca f9 78 	sub	r10,sp,-1672
80004cba:	02 9b       	mov	r11,r1
80004cbc:	08 9c       	mov	r12,r4
80004cbe:	fe b0 f2 6f 	rcall	8000319c <__sprint_r>
80004cc2:	e0 81 01 fa 	brne	800050b6 <_vfprintf_r+0x1efe>
80004cc6:	fa c3 f9 e0 	sub	r3,sp,-1568
80004cca:	40 6c       	lddsp	r12,sp[0x18]
80004ccc:	fa f8 06 90 	ld.w	r8,sp[1680]
80004cd0:	87 06       	st.w	r3[0x0],r6
80004cd2:	87 1c       	st.w	r3[0x4],r12
80004cd4:	18 08       	add	r8,r12
80004cd6:	cb 98       	rjmp	80004e48 <_vfprintf_r+0x1c90>
80004cd8:	fa f9 06 90 	ld.w	r9,sp[1680]
80004cdc:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004ce0:	40 6b       	lddsp	r11,sp[0x18]
80004ce2:	16 3a       	cp.w	r10,r11
80004ce4:	c6 f5       	brlt	80004dc2 <_vfprintf_r+0x1c0a>
80004ce6:	16 09       	add	r9,r11
80004ce8:	2f f8       	sub	r8,-1
80004cea:	87 06       	st.w	r3[0x0],r6
80004cec:	fb 49 06 90 	st.w	sp[1680],r9
80004cf0:	87 1b       	st.w	r3[0x4],r11
80004cf2:	fb 48 06 8c 	st.w	sp[1676],r8
80004cf6:	58 78       	cp.w	r8,7
80004cf8:	e0 89 00 04 	brgt	80004d00 <_vfprintf_r+0x1b48>
80004cfc:	2f 83       	sub	r3,-8
80004cfe:	c0 b8       	rjmp	80004d14 <_vfprintf_r+0x1b5c>
80004d00:	fa ca f9 78 	sub	r10,sp,-1672
80004d04:	02 9b       	mov	r11,r1
80004d06:	08 9c       	mov	r12,r4
80004d08:	fe b0 f2 4a 	rcall	8000319c <__sprint_r>
80004d0c:	e0 81 01 d5 	brne	800050b6 <_vfprintf_r+0x1efe>
80004d10:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d14:	fa f6 06 ac 	ld.w	r6,sp[1708]
80004d18:	40 6a       	lddsp	r10,sp[0x18]
80004d1a:	14 16       	sub	r6,r10
80004d1c:	58 06       	cp.w	r6,0
80004d1e:	e0 89 00 1c 	brgt	80004d56 <_vfprintf_r+0x1b9e>
80004d22:	c3 d8       	rjmp	80004d9c <_vfprintf_r+0x1be4>
80004d24:	2f 09       	sub	r9,-16
80004d26:	2f f8       	sub	r8,-1
80004d28:	fb 49 06 90 	st.w	sp[1680],r9
80004d2c:	87 02       	st.w	r3[0x0],r2
80004d2e:	87 10       	st.w	r3[0x4],r0
80004d30:	fb 48 06 8c 	st.w	sp[1676],r8
80004d34:	58 78       	cp.w	r8,7
80004d36:	e0 89 00 04 	brgt	80004d3e <_vfprintf_r+0x1b86>
80004d3a:	2f 83       	sub	r3,-8
80004d3c:	c0 b8       	rjmp	80004d52 <_vfprintf_r+0x1b9a>
80004d3e:	fa ca f9 78 	sub	r10,sp,-1672
80004d42:	02 9b       	mov	r11,r1
80004d44:	08 9c       	mov	r12,r4
80004d46:	fe b0 f2 2b 	rcall	8000319c <__sprint_r>
80004d4a:	e0 81 01 b6 	brne	800050b6 <_vfprintf_r+0x1efe>
80004d4e:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d52:	21 06       	sub	r6,16
80004d54:	c0 48       	rjmp	80004d5c <_vfprintf_r+0x1ba4>
80004d56:	fe c2 c1 1e 	sub	r2,pc,-16098
80004d5a:	31 00       	mov	r0,16
80004d5c:	fa f9 06 90 	ld.w	r9,sp[1680]
80004d60:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004d64:	fe ca c1 2c 	sub	r10,pc,-16084
80004d68:	59 06       	cp.w	r6,16
80004d6a:	fe 99 ff dd 	brgt	80004d24 <_vfprintf_r+0x1b6c>
80004d6e:	0c 09       	add	r9,r6
80004d70:	2f f8       	sub	r8,-1
80004d72:	87 0a       	st.w	r3[0x0],r10
80004d74:	fb 49 06 90 	st.w	sp[1680],r9
80004d78:	87 16       	st.w	r3[0x4],r6
80004d7a:	fb 48 06 8c 	st.w	sp[1676],r8
80004d7e:	58 78       	cp.w	r8,7
80004d80:	e0 89 00 04 	brgt	80004d88 <_vfprintf_r+0x1bd0>
80004d84:	2f 83       	sub	r3,-8
80004d86:	c0 b8       	rjmp	80004d9c <_vfprintf_r+0x1be4>
80004d88:	fa ca f9 78 	sub	r10,sp,-1672
80004d8c:	02 9b       	mov	r11,r1
80004d8e:	08 9c       	mov	r12,r4
80004d90:	fe b0 f2 06 	rcall	8000319c <__sprint_r>
80004d94:	e0 81 01 91 	brne	800050b6 <_vfprintf_r+0x1efe>
80004d98:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d9c:	ed b5 00 00 	bld	r5,0x0
80004da0:	e0 81 01 20 	brne	80004fe0 <_vfprintf_r+0x1e28>
80004da4:	40 c9       	lddsp	r9,sp[0x30]
80004da6:	fa f8 06 90 	ld.w	r8,sp[1680]
80004daa:	2f f8       	sub	r8,-1
80004dac:	87 09       	st.w	r3[0x0],r9
80004dae:	fb 48 06 90 	st.w	sp[1680],r8
80004db2:	30 19       	mov	r9,1
80004db4:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004db8:	87 19       	st.w	r3[0x4],r9
80004dba:	2f f8       	sub	r8,-1
80004dbc:	fb 48 06 8c 	st.w	sp[1676],r8
80004dc0:	c0 29       	rjmp	80004fc4 <_vfprintf_r+0x1e0c>
80004dc2:	14 09       	add	r9,r10
80004dc4:	2f f8       	sub	r8,-1
80004dc6:	fb 49 06 90 	st.w	sp[1680],r9
80004dca:	87 06       	st.w	r3[0x0],r6
80004dcc:	87 1a       	st.w	r3[0x4],r10
80004dce:	fb 48 06 8c 	st.w	sp[1676],r8
80004dd2:	58 78       	cp.w	r8,7
80004dd4:	e0 89 00 04 	brgt	80004ddc <_vfprintf_r+0x1c24>
80004dd8:	2f 83       	sub	r3,-8
80004dda:	c0 b8       	rjmp	80004df0 <_vfprintf_r+0x1c38>
80004ddc:	fa ca f9 78 	sub	r10,sp,-1672
80004de0:	02 9b       	mov	r11,r1
80004de2:	08 9c       	mov	r12,r4
80004de4:	fe b0 f1 dc 	rcall	8000319c <__sprint_r>
80004de8:	e0 81 01 67 	brne	800050b6 <_vfprintf_r+0x1efe>
80004dec:	fa c3 f9 e0 	sub	r3,sp,-1568
80004df0:	40 c8       	lddsp	r8,sp[0x30]
80004df2:	87 08       	st.w	r3[0x0],r8
80004df4:	fa f8 06 90 	ld.w	r8,sp[1680]
80004df8:	2f f8       	sub	r8,-1
80004dfa:	30 19       	mov	r9,1
80004dfc:	fb 48 06 90 	st.w	sp[1680],r8
80004e00:	87 19       	st.w	r3[0x4],r9
80004e02:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e06:	2f f8       	sub	r8,-1
80004e08:	fb 48 06 8c 	st.w	sp[1676],r8
80004e0c:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004e10:	58 78       	cp.w	r8,7
80004e12:	e0 89 00 04 	brgt	80004e1a <_vfprintf_r+0x1c62>
80004e16:	2f 83       	sub	r3,-8
80004e18:	c0 b8       	rjmp	80004e2e <_vfprintf_r+0x1c76>
80004e1a:	fa ca f9 78 	sub	r10,sp,-1672
80004e1e:	02 9b       	mov	r11,r1
80004e20:	08 9c       	mov	r12,r4
80004e22:	fe b0 f1 bd 	rcall	8000319c <__sprint_r>
80004e26:	e0 81 01 48 	brne	800050b6 <_vfprintf_r+0x1efe>
80004e2a:	fa c3 f9 e0 	sub	r3,sp,-1568
80004e2e:	04 06       	add	r6,r2
80004e30:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004e34:	87 06       	st.w	r3[0x0],r6
80004e36:	fa f9 06 90 	ld.w	r9,sp[1680]
80004e3a:	40 66       	lddsp	r6,sp[0x18]
80004e3c:	40 6e       	lddsp	lr,sp[0x18]
80004e3e:	10 16       	sub	r6,r8
80004e40:	f2 08 01 08 	sub	r8,r9,r8
80004e44:	87 16       	st.w	r3[0x4],r6
80004e46:	1c 08       	add	r8,lr
80004e48:	fb 48 06 90 	st.w	sp[1680],r8
80004e4c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e50:	2f f8       	sub	r8,-1
80004e52:	fb 48 06 8c 	st.w	sp[1676],r8
80004e56:	cb 78       	rjmp	80004fc4 <_vfprintf_r+0x1e0c>
80004e58:	40 6c       	lddsp	r12,sp[0x18]
80004e5a:	58 1c       	cp.w	r12,1
80004e5c:	e0 89 00 06 	brgt	80004e68 <_vfprintf_r+0x1cb0>
80004e60:	ed b5 00 00 	bld	r5,0x0
80004e64:	e0 81 00 85 	brne	80004f6e <_vfprintf_r+0x1db6>
80004e68:	fa f8 06 90 	ld.w	r8,sp[1680]
80004e6c:	2f f8       	sub	r8,-1
80004e6e:	30 19       	mov	r9,1
80004e70:	fb 48 06 90 	st.w	sp[1680],r8
80004e74:	87 06       	st.w	r3[0x0],r6
80004e76:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e7a:	87 19       	st.w	r3[0x4],r9
80004e7c:	2f f8       	sub	r8,-1
80004e7e:	fb 48 06 8c 	st.w	sp[1676],r8
80004e82:	58 78       	cp.w	r8,7
80004e84:	e0 89 00 04 	brgt	80004e8c <_vfprintf_r+0x1cd4>
80004e88:	2f 83       	sub	r3,-8
80004e8a:	c0 b8       	rjmp	80004ea0 <_vfprintf_r+0x1ce8>
80004e8c:	fa ca f9 78 	sub	r10,sp,-1672
80004e90:	02 9b       	mov	r11,r1
80004e92:	08 9c       	mov	r12,r4
80004e94:	fe b0 f1 84 	rcall	8000319c <__sprint_r>
80004e98:	e0 81 01 0f 	brne	800050b6 <_vfprintf_r+0x1efe>
80004e9c:	fa c3 f9 e0 	sub	r3,sp,-1568
80004ea0:	fa f8 06 90 	ld.w	r8,sp[1680]
80004ea4:	2f f8       	sub	r8,-1
80004ea6:	40 cb       	lddsp	r11,sp[0x30]
80004ea8:	fb 48 06 90 	st.w	sp[1680],r8
80004eac:	30 19       	mov	r9,1
80004eae:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004eb2:	87 0b       	st.w	r3[0x0],r11
80004eb4:	2f f8       	sub	r8,-1
80004eb6:	87 19       	st.w	r3[0x4],r9
80004eb8:	fb 48 06 8c 	st.w	sp[1676],r8
80004ebc:	58 78       	cp.w	r8,7
80004ebe:	e0 89 00 05 	brgt	80004ec8 <_vfprintf_r+0x1d10>
80004ec2:	2f 83       	sub	r3,-8
80004ec4:	c0 c8       	rjmp	80004edc <_vfprintf_r+0x1d24>
80004ec6:	d7 03       	nop
80004ec8:	fa ca f9 78 	sub	r10,sp,-1672
80004ecc:	02 9b       	mov	r11,r1
80004ece:	08 9c       	mov	r12,r4
80004ed0:	fe b0 f1 66 	rcall	8000319c <__sprint_r>
80004ed4:	e0 81 00 f1 	brne	800050b6 <_vfprintf_r+0x1efe>
80004ed8:	fa c3 f9 e0 	sub	r3,sp,-1568
80004edc:	30 08       	mov	r8,0
80004ede:	30 09       	mov	r9,0
80004ee0:	40 5b       	lddsp	r11,sp[0x14]
80004ee2:	40 7a       	lddsp	r10,sp[0x1c]
80004ee4:	e0 a0 17 3d 	rcall	80007d5e <__avr32_f64_cmp_eq>
80004ee8:	40 68       	lddsp	r8,sp[0x18]
80004eea:	20 18       	sub	r8,1
80004eec:	58 0c       	cp.w	r12,0
80004eee:	c0 d1       	brne	80004f08 <_vfprintf_r+0x1d50>
80004ef0:	2f f6       	sub	r6,-1
80004ef2:	87 18       	st.w	r3[0x4],r8
80004ef4:	87 06       	st.w	r3[0x0],r6
80004ef6:	fa f6 06 90 	ld.w	r6,sp[1680]
80004efa:	10 06       	add	r6,r8
80004efc:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f00:	fb 46 06 90 	st.w	sp[1680],r6
80004f04:	2f f8       	sub	r8,-1
80004f06:	c3 18       	rjmp	80004f68 <_vfprintf_r+0x1db0>
80004f08:	10 96       	mov	r6,r8
80004f0a:	58 08       	cp.w	r8,0
80004f0c:	e0 89 00 1c 	brgt	80004f44 <_vfprintf_r+0x1d8c>
80004f10:	c4 b8       	rjmp	80004fa6 <_vfprintf_r+0x1dee>
80004f12:	2f 09       	sub	r9,-16
80004f14:	2f f8       	sub	r8,-1
80004f16:	fb 49 06 90 	st.w	sp[1680],r9
80004f1a:	87 02       	st.w	r3[0x0],r2
80004f1c:	87 10       	st.w	r3[0x4],r0
80004f1e:	fb 48 06 8c 	st.w	sp[1676],r8
80004f22:	58 78       	cp.w	r8,7
80004f24:	e0 89 00 04 	brgt	80004f2c <_vfprintf_r+0x1d74>
80004f28:	2f 83       	sub	r3,-8
80004f2a:	c0 b8       	rjmp	80004f40 <_vfprintf_r+0x1d88>
80004f2c:	fa ca f9 78 	sub	r10,sp,-1672
80004f30:	02 9b       	mov	r11,r1
80004f32:	08 9c       	mov	r12,r4
80004f34:	fe b0 f1 34 	rcall	8000319c <__sprint_r>
80004f38:	e0 81 00 bf 	brne	800050b6 <_vfprintf_r+0x1efe>
80004f3c:	fa c3 f9 e0 	sub	r3,sp,-1568
80004f40:	21 06       	sub	r6,16
80004f42:	c0 48       	rjmp	80004f4a <_vfprintf_r+0x1d92>
80004f44:	fe c2 c3 0c 	sub	r2,pc,-15604
80004f48:	31 00       	mov	r0,16
80004f4a:	fa f9 06 90 	ld.w	r9,sp[1680]
80004f4e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f52:	fe ca c3 1a 	sub	r10,pc,-15590
80004f56:	59 06       	cp.w	r6,16
80004f58:	fe 99 ff dd 	brgt	80004f12 <_vfprintf_r+0x1d5a>
80004f5c:	0c 09       	add	r9,r6
80004f5e:	87 0a       	st.w	r3[0x0],r10
80004f60:	fb 49 06 90 	st.w	sp[1680],r9
80004f64:	2f f8       	sub	r8,-1
80004f66:	87 16       	st.w	r3[0x4],r6
80004f68:	fb 48 06 8c 	st.w	sp[1676],r8
80004f6c:	c0 e8       	rjmp	80004f88 <_vfprintf_r+0x1dd0>
80004f6e:	fa f8 06 90 	ld.w	r8,sp[1680]
80004f72:	2f f8       	sub	r8,-1
80004f74:	30 19       	mov	r9,1
80004f76:	fb 48 06 90 	st.w	sp[1680],r8
80004f7a:	87 06       	st.w	r3[0x0],r6
80004f7c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f80:	87 19       	st.w	r3[0x4],r9
80004f82:	2f f8       	sub	r8,-1
80004f84:	fb 48 06 8c 	st.w	sp[1676],r8
80004f88:	58 78       	cp.w	r8,7
80004f8a:	e0 89 00 04 	brgt	80004f92 <_vfprintf_r+0x1dda>
80004f8e:	2f 83       	sub	r3,-8
80004f90:	c0 b8       	rjmp	80004fa6 <_vfprintf_r+0x1dee>
80004f92:	fa ca f9 78 	sub	r10,sp,-1672
80004f96:	02 9b       	mov	r11,r1
80004f98:	08 9c       	mov	r12,r4
80004f9a:	fe b0 f1 01 	rcall	8000319c <__sprint_r>
80004f9e:	e0 81 00 8c 	brne	800050b6 <_vfprintf_r+0x1efe>
80004fa2:	fa c3 f9 e0 	sub	r3,sp,-1568
80004fa6:	40 ea       	lddsp	r10,sp[0x38]
80004fa8:	fa f8 06 90 	ld.w	r8,sp[1680]
80004fac:	14 08       	add	r8,r10
80004fae:	fa c9 f9 64 	sub	r9,sp,-1692
80004fb2:	fb 48 06 90 	st.w	sp[1680],r8
80004fb6:	87 1a       	st.w	r3[0x4],r10
80004fb8:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004fbc:	87 09       	st.w	r3[0x0],r9
80004fbe:	2f f8       	sub	r8,-1
80004fc0:	fb 48 06 8c 	st.w	sp[1676],r8
80004fc4:	58 78       	cp.w	r8,7
80004fc6:	e0 89 00 04 	brgt	80004fce <_vfprintf_r+0x1e16>
80004fca:	2f 83       	sub	r3,-8
80004fcc:	c0 a8       	rjmp	80004fe0 <_vfprintf_r+0x1e28>
80004fce:	fa ca f9 78 	sub	r10,sp,-1672
80004fd2:	02 9b       	mov	r11,r1
80004fd4:	08 9c       	mov	r12,r4
80004fd6:	fe b0 f0 e3 	rcall	8000319c <__sprint_r>
80004fda:	c6 e1       	brne	800050b6 <_vfprintf_r+0x1efe>
80004fdc:	fa c3 f9 e0 	sub	r3,sp,-1568
80004fe0:	e2 15 00 04 	andl	r5,0x4,COH
80004fe4:	c3 f0       	breq	80005062 <_vfprintf_r+0x1eaa>
80004fe6:	40 86       	lddsp	r6,sp[0x20]
80004fe8:	40 39       	lddsp	r9,sp[0xc]
80004fea:	12 16       	sub	r6,r9
80004fec:	58 06       	cp.w	r6,0
80004fee:	e0 89 00 1a 	brgt	80005022 <_vfprintf_r+0x1e6a>
80004ff2:	c3 88       	rjmp	80005062 <_vfprintf_r+0x1eaa>
80004ff4:	2f 09       	sub	r9,-16
80004ff6:	2f f8       	sub	r8,-1
80004ff8:	fb 49 06 90 	st.w	sp[1680],r9
80004ffc:	87 05       	st.w	r3[0x0],r5
80004ffe:	87 12       	st.w	r3[0x4],r2
80005000:	fb 48 06 8c 	st.w	sp[1676],r8
80005004:	58 78       	cp.w	r8,7
80005006:	e0 89 00 04 	brgt	8000500e <_vfprintf_r+0x1e56>
8000500a:	2f 83       	sub	r3,-8
8000500c:	c0 98       	rjmp	8000501e <_vfprintf_r+0x1e66>
8000500e:	00 9a       	mov	r10,r0
80005010:	02 9b       	mov	r11,r1
80005012:	08 9c       	mov	r12,r4
80005014:	fe b0 f0 c4 	rcall	8000319c <__sprint_r>
80005018:	c4 f1       	brne	800050b6 <_vfprintf_r+0x1efe>
8000501a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000501e:	21 06       	sub	r6,16
80005020:	c0 68       	rjmp	8000502c <_vfprintf_r+0x1e74>
80005022:	fe c5 c3 fa 	sub	r5,pc,-15366
80005026:	31 02       	mov	r2,16
80005028:	fa c0 f9 78 	sub	r0,sp,-1672
8000502c:	fa f9 06 90 	ld.w	r9,sp[1680]
80005030:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005034:	fe ca c4 0c 	sub	r10,pc,-15348
80005038:	59 06       	cp.w	r6,16
8000503a:	fe 99 ff dd 	brgt	80004ff4 <_vfprintf_r+0x1e3c>
8000503e:	0c 09       	add	r9,r6
80005040:	2f f8       	sub	r8,-1
80005042:	87 0a       	st.w	r3[0x0],r10
80005044:	87 16       	st.w	r3[0x4],r6
80005046:	fb 49 06 90 	st.w	sp[1680],r9
8000504a:	fb 48 06 8c 	st.w	sp[1676],r8
8000504e:	58 78       	cp.w	r8,7
80005050:	e0 8a 00 09 	brle	80005062 <_vfprintf_r+0x1eaa>
80005054:	fa ca f9 78 	sub	r10,sp,-1672
80005058:	02 9b       	mov	r11,r1
8000505a:	08 9c       	mov	r12,r4
8000505c:	fe b0 f0 a0 	rcall	8000319c <__sprint_r>
80005060:	c2 b1       	brne	800050b6 <_vfprintf_r+0x1efe>
80005062:	40 bc       	lddsp	r12,sp[0x2c]
80005064:	40 36       	lddsp	r6,sp[0xc]
80005066:	40 8e       	lddsp	lr,sp[0x20]
80005068:	ec 0e 0c 48 	max	r8,r6,lr
8000506c:	10 0c       	add	r12,r8
8000506e:	50 bc       	stdsp	sp[0x2c],r12
80005070:	fa f8 06 90 	ld.w	r8,sp[1680]
80005074:	58 08       	cp.w	r8,0
80005076:	c0 80       	breq	80005086 <_vfprintf_r+0x1ece>
80005078:	fa ca f9 78 	sub	r10,sp,-1672
8000507c:	02 9b       	mov	r11,r1
8000507e:	08 9c       	mov	r12,r4
80005080:	fe b0 f0 8e 	rcall	8000319c <__sprint_r>
80005084:	c1 91       	brne	800050b6 <_vfprintf_r+0x1efe>
80005086:	30 0b       	mov	r11,0
80005088:	fa c3 f9 e0 	sub	r3,sp,-1568
8000508c:	fb 4b 06 8c 	st.w	sp[1676],r11
80005090:	fe 9f f1 22 	bral	800032d4 <_vfprintf_r+0x11c>
80005094:	08 95       	mov	r5,r4
80005096:	fa f8 06 90 	ld.w	r8,sp[1680]
8000509a:	58 08       	cp.w	r8,0
8000509c:	c0 80       	breq	800050ac <_vfprintf_r+0x1ef4>
8000509e:	08 9c       	mov	r12,r4
800050a0:	fa ca f9 78 	sub	r10,sp,-1672
800050a4:	02 9b       	mov	r11,r1
800050a6:	fe b0 f0 7b 	rcall	8000319c <__sprint_r>
800050aa:	c0 61       	brne	800050b6 <_vfprintf_r+0x1efe>
800050ac:	30 08       	mov	r8,0
800050ae:	fb 48 06 8c 	st.w	sp[1676],r8
800050b2:	c0 28       	rjmp	800050b6 <_vfprintf_r+0x1efe>
800050b4:	40 41       	lddsp	r1,sp[0x10]
800050b6:	82 68       	ld.sh	r8,r1[0xc]
800050b8:	ed b8 00 06 	bld	r8,0x6
800050bc:	c0 31       	brne	800050c2 <_vfprintf_r+0x1f0a>
800050be:	3f fa       	mov	r10,-1
800050c0:	50 ba       	stdsp	sp[0x2c],r10
800050c2:	40 bc       	lddsp	r12,sp[0x2c]
800050c4:	fe 3d f9 44 	sub	sp,-1724
800050c8:	d8 32       	popm	r0-r7,pc
800050ca:	d7 03       	nop

800050cc <__swsetup_r>:
800050cc:	d4 21       	pushm	r4-r7,lr
800050ce:	e0 68 00 fc 	mov	r8,252
800050d2:	18 96       	mov	r6,r12
800050d4:	16 97       	mov	r7,r11
800050d6:	70 0c       	ld.w	r12,r8[0x0]
800050d8:	58 0c       	cp.w	r12,0
800050da:	c0 60       	breq	800050e6 <__swsetup_r+0x1a>
800050dc:	78 68       	ld.w	r8,r12[0x18]
800050de:	58 08       	cp.w	r8,0
800050e0:	c0 31       	brne	800050e6 <__swsetup_r+0x1a>
800050e2:	e0 a0 07 b9 	rcall	80006054 <__sinit>
800050e6:	fe c8 c3 8e 	sub	r8,pc,-15474
800050ea:	10 37       	cp.w	r7,r8
800050ec:	c0 61       	brne	800050f8 <__swsetup_r+0x2c>
800050ee:	e0 68 00 fc 	mov	r8,252
800050f2:	70 08       	ld.w	r8,r8[0x0]
800050f4:	70 07       	ld.w	r7,r8[0x0]
800050f6:	c1 28       	rjmp	8000511a <__swsetup_r+0x4e>
800050f8:	fe c8 c3 80 	sub	r8,pc,-15488
800050fc:	10 37       	cp.w	r7,r8
800050fe:	c0 61       	brne	8000510a <__swsetup_r+0x3e>
80005100:	e0 68 00 fc 	mov	r8,252
80005104:	70 08       	ld.w	r8,r8[0x0]
80005106:	70 17       	ld.w	r7,r8[0x4]
80005108:	c0 98       	rjmp	8000511a <__swsetup_r+0x4e>
8000510a:	fe c8 c3 72 	sub	r8,pc,-15502
8000510e:	10 37       	cp.w	r7,r8
80005110:	c0 51       	brne	8000511a <__swsetup_r+0x4e>
80005112:	e0 68 00 fc 	mov	r8,252
80005116:	70 08       	ld.w	r8,r8[0x0]
80005118:	70 27       	ld.w	r7,r8[0x8]
8000511a:	8e 68       	ld.sh	r8,r7[0xc]
8000511c:	ed b8 00 03 	bld	r8,0x3
80005120:	c1 e0       	breq	8000515c <__swsetup_r+0x90>
80005122:	ed b8 00 04 	bld	r8,0x4
80005126:	c3 e1       	brne	800051a2 <__swsetup_r+0xd6>
80005128:	ed b8 00 02 	bld	r8,0x2
8000512c:	c1 51       	brne	80005156 <__swsetup_r+0x8a>
8000512e:	6e db       	ld.w	r11,r7[0x34]
80005130:	58 0b       	cp.w	r11,0
80005132:	c0 a0       	breq	80005146 <__swsetup_r+0x7a>
80005134:	ee c8 ff bc 	sub	r8,r7,-68
80005138:	10 3b       	cp.w	r11,r8
8000513a:	c0 40       	breq	80005142 <__swsetup_r+0x76>
8000513c:	0c 9c       	mov	r12,r6
8000513e:	e0 a0 08 25 	rcall	80006188 <_free_r>
80005142:	30 08       	mov	r8,0
80005144:	8f d8       	st.w	r7[0x34],r8
80005146:	8e 68       	ld.sh	r8,r7[0xc]
80005148:	e0 18 ff db 	andl	r8,0xffdb
8000514c:	ae 68       	st.h	r7[0xc],r8
8000514e:	30 08       	mov	r8,0
80005150:	8f 18       	st.w	r7[0x4],r8
80005152:	6e 48       	ld.w	r8,r7[0x10]
80005154:	8f 08       	st.w	r7[0x0],r8
80005156:	8e 68       	ld.sh	r8,r7[0xc]
80005158:	a3 b8       	sbr	r8,0x3
8000515a:	ae 68       	st.h	r7[0xc],r8
8000515c:	6e 48       	ld.w	r8,r7[0x10]
8000515e:	58 08       	cp.w	r8,0
80005160:	c0 b1       	brne	80005176 <__swsetup_r+0xaa>
80005162:	8e 68       	ld.sh	r8,r7[0xc]
80005164:	e2 18 02 80 	andl	r8,0x280,COH
80005168:	e0 48 02 00 	cp.w	r8,512
8000516c:	c0 50       	breq	80005176 <__swsetup_r+0xaa>
8000516e:	0c 9c       	mov	r12,r6
80005170:	0e 9b       	mov	r11,r7
80005172:	e0 a0 0a 4b 	rcall	80006608 <__smakebuf_r>
80005176:	8e 69       	ld.sh	r9,r7[0xc]
80005178:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
8000517c:	c0 70       	breq	8000518a <__swsetup_r+0xbe>
8000517e:	30 08       	mov	r8,0
80005180:	8f 28       	st.w	r7[0x8],r8
80005182:	6e 58       	ld.w	r8,r7[0x14]
80005184:	5c 38       	neg	r8
80005186:	8f 68       	st.w	r7[0x18],r8
80005188:	c0 68       	rjmp	80005194 <__swsetup_r+0xc8>
8000518a:	ed b9 00 01 	bld	r9,0x1
8000518e:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80005192:	8f 28       	st.w	r7[0x8],r8
80005194:	6e 48       	ld.w	r8,r7[0x10]
80005196:	58 08       	cp.w	r8,0
80005198:	c0 61       	brne	800051a4 <__swsetup_r+0xd8>
8000519a:	8e 68       	ld.sh	r8,r7[0xc]
8000519c:	ed b8 00 07 	bld	r8,0x7
800051a0:	c0 21       	brne	800051a4 <__swsetup_r+0xd8>
800051a2:	dc 2a       	popm	r4-r7,pc,r12=-1
800051a4:	d8 2a       	popm	r4-r7,pc,r12=0
800051a6:	d7 03       	nop

800051a8 <quorem>:
800051a8:	d4 31       	pushm	r0-r7,lr
800051aa:	20 2d       	sub	sp,8
800051ac:	18 97       	mov	r7,r12
800051ae:	78 48       	ld.w	r8,r12[0x10]
800051b0:	76 46       	ld.w	r6,r11[0x10]
800051b2:	0c 38       	cp.w	r8,r6
800051b4:	c0 34       	brge	800051ba <quorem+0x12>
800051b6:	30 0c       	mov	r12,0
800051b8:	c8 58       	rjmp	800052c2 <quorem+0x11a>
800051ba:	ec c2 ff fc 	sub	r2,r6,-4
800051be:	f6 c3 ff ec 	sub	r3,r11,-20
800051c2:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
800051c6:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
800051ca:	2f f9       	sub	r9,-1
800051cc:	20 16       	sub	r6,1
800051ce:	f8 09 0d 08 	divu	r8,r12,r9
800051d2:	f6 02 00 22 	add	r2,r11,r2<<0x2
800051d6:	ee c4 ff ec 	sub	r4,r7,-20
800051da:	10 95       	mov	r5,r8
800051dc:	58 08       	cp.w	r8,0
800051de:	c4 10       	breq	80005260 <quorem+0xb8>
800051e0:	30 09       	mov	r9,0
800051e2:	06 9a       	mov	r10,r3
800051e4:	08 98       	mov	r8,r4
800051e6:	12 91       	mov	r1,r9
800051e8:	50 0b       	stdsp	sp[0x0],r11
800051ea:	70 0e       	ld.w	lr,r8[0x0]
800051ec:	b1 8e       	lsr	lr,0x10
800051ee:	50 1e       	stdsp	sp[0x4],lr
800051f0:	15 0e       	ld.w	lr,r10++
800051f2:	fc 00 16 10 	lsr	r0,lr,0x10
800051f6:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
800051fa:	ea 0e 03 41 	mac	r1,r5,lr
800051fe:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
80005202:	b1 81       	lsr	r1,0x10
80005204:	40 1b       	lddsp	r11,sp[0x4]
80005206:	ea 00 02 40 	mul	r0,r5,r0
8000520a:	e2 00 00 00 	add	r0,r1,r0
8000520e:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
80005212:	02 1b       	sub	r11,r1
80005214:	50 1b       	stdsp	sp[0x4],r11
80005216:	70 0b       	ld.w	r11,r8[0x0]
80005218:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
8000521c:	02 09       	add	r9,r1
8000521e:	f2 0e 01 0e 	sub	lr,r9,lr
80005222:	b0 1e       	st.h	r8[0x2],lr
80005224:	fc 09 14 10 	asr	r9,lr,0x10
80005228:	40 1e       	lddsp	lr,sp[0x4]
8000522a:	fc 09 00 09 	add	r9,lr,r9
8000522e:	b0 09       	st.h	r8[0x0],r9
80005230:	e0 01 16 10 	lsr	r1,r0,0x10
80005234:	2f c8       	sub	r8,-4
80005236:	b1 49       	asr	r9,0x10
80005238:	04 3a       	cp.w	r10,r2
8000523a:	fe 98 ff d8 	brls	800051ea <quorem+0x42>
8000523e:	40 0b       	lddsp	r11,sp[0x0]
80005240:	58 0c       	cp.w	r12,0
80005242:	c0 f1       	brne	80005260 <quorem+0xb8>
80005244:	ec c8 ff fb 	sub	r8,r6,-5
80005248:	ee 08 00 28 	add	r8,r7,r8<<0x2
8000524c:	c0 28       	rjmp	80005250 <quorem+0xa8>
8000524e:	20 16       	sub	r6,1
80005250:	20 48       	sub	r8,4
80005252:	08 38       	cp.w	r8,r4
80005254:	e0 88 00 05 	brls	8000525e <quorem+0xb6>
80005258:	70 09       	ld.w	r9,r8[0x0]
8000525a:	58 09       	cp.w	r9,0
8000525c:	cf 90       	breq	8000524e <quorem+0xa6>
8000525e:	8f 46       	st.w	r7[0x10],r6
80005260:	0e 9c       	mov	r12,r7
80005262:	e0 a0 0c fb 	rcall	80006c58 <__mcmp>
80005266:	c2 d5       	brlt	800052c0 <quorem+0x118>
80005268:	2f f5       	sub	r5,-1
8000526a:	08 98       	mov	r8,r4
8000526c:	30 09       	mov	r9,0
8000526e:	07 0b       	ld.w	r11,r3++
80005270:	f6 0a 16 10 	lsr	r10,r11,0x10
80005274:	70 0c       	ld.w	r12,r8[0x0]
80005276:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000527a:	f8 0e 16 10 	lsr	lr,r12,0x10
8000527e:	14 1e       	sub	lr,r10
80005280:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80005284:	16 1a       	sub	r10,r11
80005286:	12 0a       	add	r10,r9
80005288:	b0 1a       	st.h	r8[0x2],r10
8000528a:	b1 4a       	asr	r10,0x10
8000528c:	fc 0a 00 09 	add	r9,lr,r10
80005290:	b0 09       	st.h	r8[0x0],r9
80005292:	2f c8       	sub	r8,-4
80005294:	b1 49       	asr	r9,0x10
80005296:	04 33       	cp.w	r3,r2
80005298:	fe 98 ff eb 	brls	8000526e <quorem+0xc6>
8000529c:	ec c8 ff fb 	sub	r8,r6,-5
800052a0:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
800052a4:	58 09       	cp.w	r9,0
800052a6:	c0 d1       	brne	800052c0 <quorem+0x118>
800052a8:	ee 08 00 28 	add	r8,r7,r8<<0x2
800052ac:	c0 28       	rjmp	800052b0 <quorem+0x108>
800052ae:	20 16       	sub	r6,1
800052b0:	20 48       	sub	r8,4
800052b2:	08 38       	cp.w	r8,r4
800052b4:	e0 88 00 05 	brls	800052be <quorem+0x116>
800052b8:	70 09       	ld.w	r9,r8[0x0]
800052ba:	58 09       	cp.w	r9,0
800052bc:	cf 90       	breq	800052ae <quorem+0x106>
800052be:	8f 46       	st.w	r7[0x10],r6
800052c0:	0a 9c       	mov	r12,r5
800052c2:	2f ed       	sub	sp,-8
800052c4:	d8 32       	popm	r0-r7,pc
800052c6:	d7 03       	nop

800052c8 <_dtoa_r>:
800052c8:	d4 31       	pushm	r0-r7,lr
800052ca:	21 ad       	sub	sp,104
800052cc:	fa c4 ff 74 	sub	r4,sp,-140
800052d0:	18 97       	mov	r7,r12
800052d2:	16 95       	mov	r5,r11
800052d4:	68 2c       	ld.w	r12,r4[0x8]
800052d6:	50 c9       	stdsp	sp[0x30],r9
800052d8:	68 16       	ld.w	r6,r4[0x4]
800052da:	68 09       	ld.w	r9,r4[0x0]
800052dc:	50 e8       	stdsp	sp[0x38],r8
800052de:	14 94       	mov	r4,r10
800052e0:	51 2c       	stdsp	sp[0x48],r12
800052e2:	fa e5 00 08 	st.d	sp[8],r4
800052e6:	51 59       	stdsp	sp[0x54],r9
800052e8:	6e 95       	ld.w	r5,r7[0x24]
800052ea:	58 05       	cp.w	r5,0
800052ec:	c0 91       	brne	800052fe <_dtoa_r+0x36>
800052ee:	31 0c       	mov	r12,16
800052f0:	e0 a0 09 ea 	rcall	800066c4 <malloc>
800052f4:	99 35       	st.w	r12[0xc],r5
800052f6:	8f 9c       	st.w	r7[0x24],r12
800052f8:	99 15       	st.w	r12[0x4],r5
800052fa:	99 25       	st.w	r12[0x8],r5
800052fc:	99 05       	st.w	r12[0x0],r5
800052fe:	6e 99       	ld.w	r9,r7[0x24]
80005300:	72 08       	ld.w	r8,r9[0x0]
80005302:	58 08       	cp.w	r8,0
80005304:	c0 f0       	breq	80005322 <_dtoa_r+0x5a>
80005306:	72 1a       	ld.w	r10,r9[0x4]
80005308:	91 1a       	st.w	r8[0x4],r10
8000530a:	30 1a       	mov	r10,1
8000530c:	72 19       	ld.w	r9,r9[0x4]
8000530e:	f4 09 09 49 	lsl	r9,r10,r9
80005312:	10 9b       	mov	r11,r8
80005314:	91 29       	st.w	r8[0x8],r9
80005316:	0e 9c       	mov	r12,r7
80005318:	e0 a0 0c ba 	rcall	80006c8c <_Bfree>
8000531c:	6e 98       	ld.w	r8,r7[0x24]
8000531e:	30 09       	mov	r9,0
80005320:	91 09       	st.w	r8[0x0],r9
80005322:	40 28       	lddsp	r8,sp[0x8]
80005324:	10 94       	mov	r4,r8
80005326:	58 08       	cp.w	r8,0
80005328:	c0 64       	brge	80005334 <_dtoa_r+0x6c>
8000532a:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
8000532e:	50 28       	stdsp	sp[0x8],r8
80005330:	30 18       	mov	r8,1
80005332:	c0 28       	rjmp	80005336 <_dtoa_r+0x6e>
80005334:	30 08       	mov	r8,0
80005336:	8d 08       	st.w	r6[0x0],r8
80005338:	fc 1c 7f f0 	movh	r12,0x7ff0
8000533c:	40 26       	lddsp	r6,sp[0x8]
8000533e:	0c 98       	mov	r8,r6
80005340:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005344:	18 38       	cp.w	r8,r12
80005346:	c2 01       	brne	80005386 <_dtoa_r+0xbe>
80005348:	e0 68 27 0f 	mov	r8,9999
8000534c:	41 5b       	lddsp	r11,sp[0x54]
8000534e:	97 08       	st.w	r11[0x0],r8
80005350:	40 3a       	lddsp	r10,sp[0xc]
80005352:	58 0a       	cp.w	r10,0
80005354:	c0 71       	brne	80005362 <_dtoa_r+0x9a>
80005356:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
8000535a:	c0 41       	brne	80005362 <_dtoa_r+0x9a>
8000535c:	fe cc c6 14 	sub	r12,pc,-14828
80005360:	c0 38       	rjmp	80005366 <_dtoa_r+0x9e>
80005362:	fe cc c6 0e 	sub	r12,pc,-14834
80005366:	41 29       	lddsp	r9,sp[0x48]
80005368:	58 09       	cp.w	r9,0
8000536a:	e0 80 05 9a 	breq	80005e9e <_dtoa_r+0xbd6>
8000536e:	f8 c8 ff fd 	sub	r8,r12,-3
80005372:	f8 c9 ff f8 	sub	r9,r12,-8
80005376:	11 8b       	ld.ub	r11,r8[0x0]
80005378:	30 0a       	mov	r10,0
8000537a:	41 25       	lddsp	r5,sp[0x48]
8000537c:	f4 0b 18 00 	cp.b	r11,r10
80005380:	f2 08 17 10 	movne	r8,r9
80005384:	c1 68       	rjmp	800053b0 <_dtoa_r+0xe8>
80005386:	fa ea 00 08 	ld.d	r10,sp[8]
8000538a:	30 08       	mov	r8,0
8000538c:	fa eb 00 3c 	st.d	sp[60],r10
80005390:	30 09       	mov	r9,0
80005392:	e0 a0 14 e6 	rcall	80007d5e <__avr32_f64_cmp_eq>
80005396:	c1 00       	breq	800053b6 <_dtoa_r+0xee>
80005398:	30 18       	mov	r8,1
8000539a:	41 5a       	lddsp	r10,sp[0x54]
8000539c:	95 08       	st.w	r10[0x0],r8
8000539e:	fe cc c7 7a 	sub	r12,pc,-14470
800053a2:	41 29       	lddsp	r9,sp[0x48]
800053a4:	f8 08 00 08 	add	r8,r12,r8
800053a8:	58 09       	cp.w	r9,0
800053aa:	e0 80 05 7a 	breq	80005e9e <_dtoa_r+0xbd6>
800053ae:	12 95       	mov	r5,r9
800053b0:	8b 08       	st.w	r5[0x0],r8
800053b2:	e0 8f 05 76 	bral	80005e9e <_dtoa_r+0xbd6>
800053b6:	fa c8 ff 9c 	sub	r8,sp,-100
800053ba:	fa c9 ff a0 	sub	r9,sp,-96
800053be:	fa ea 00 3c 	ld.d	r10,sp[60]
800053c2:	0e 9c       	mov	r12,r7
800053c4:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
800053c8:	e0 a0 0c b4 	rcall	80006d30 <__d2b>
800053cc:	18 93       	mov	r3,r12
800053ce:	58 05       	cp.w	r5,0
800053d0:	c0 d0       	breq	800053ea <_dtoa_r+0x122>
800053d2:	fa ea 00 3c 	ld.d	r10,sp[60]
800053d6:	30 04       	mov	r4,0
800053d8:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
800053dc:	ea c5 03 ff 	sub	r5,r5,1023
800053e0:	10 9b       	mov	r11,r8
800053e2:	51 74       	stdsp	sp[0x5c],r4
800053e4:	ea 1b 3f f0 	orh	r11,0x3ff0
800053e8:	c2 58       	rjmp	80005432 <_dtoa_r+0x16a>
800053ea:	41 88       	lddsp	r8,sp[0x60]
800053ec:	41 9c       	lddsp	r12,sp[0x64]
800053ee:	10 0c       	add	r12,r8
800053f0:	f8 c5 fb ce 	sub	r5,r12,-1074
800053f4:	e0 45 00 20 	cp.w	r5,32
800053f8:	e0 8a 00 0e 	brle	80005414 <_dtoa_r+0x14c>
800053fc:	f8 cc fb ee 	sub	r12,r12,-1042
80005400:	40 3b       	lddsp	r11,sp[0xc]
80005402:	ea 08 11 40 	rsub	r8,r5,64
80005406:	f6 0c 0a 4c 	lsr	r12,r11,r12
8000540a:	ec 08 09 46 	lsl	r6,r6,r8
8000540e:	0c 4c       	or	r12,r6
80005410:	c0 78       	rjmp	8000541e <_dtoa_r+0x156>
80005412:	d7 03       	nop
80005414:	ea 0c 11 20 	rsub	r12,r5,32
80005418:	40 3a       	lddsp	r10,sp[0xc]
8000541a:	f4 0c 09 4c 	lsl	r12,r10,r12
8000541e:	e0 a0 14 2c 	rcall	80007c76 <__avr32_u32_to_f64>
80005422:	fc 18 fe 10 	movh	r8,0xfe10
80005426:	30 19       	mov	r9,1
80005428:	ea c5 04 33 	sub	r5,r5,1075
8000542c:	f0 0b 00 0b 	add	r11,r8,r11
80005430:	51 79       	stdsp	sp[0x5c],r9
80005432:	30 08       	mov	r8,0
80005434:	fc 19 3f f8 	movh	r9,0x3ff8
80005438:	e0 a0 12 b4 	rcall	800079a0 <__avr32_f64_sub>
8000543c:	e0 68 43 61 	mov	r8,17249
80005440:	ea 18 63 6f 	orh	r8,0x636f
80005444:	e0 69 87 a7 	mov	r9,34727
80005448:	ea 19 3f d2 	orh	r9,0x3fd2
8000544c:	e0 a0 11 be 	rcall	800077c8 <__avr32_f64_mul>
80005450:	e0 68 c8 b3 	mov	r8,51379
80005454:	ea 18 8b 60 	orh	r8,0x8b60
80005458:	e0 69 8a 28 	mov	r9,35368
8000545c:	ea 19 3f c6 	orh	r9,0x3fc6
80005460:	e0 a0 13 6e 	rcall	80007b3c <__avr32_f64_add>
80005464:	0a 9c       	mov	r12,r5
80005466:	14 90       	mov	r0,r10
80005468:	16 91       	mov	r1,r11
8000546a:	e0 a0 14 0a 	rcall	80007c7e <__avr32_s32_to_f64>
8000546e:	e0 68 79 fb 	mov	r8,31227
80005472:	ea 18 50 9f 	orh	r8,0x509f
80005476:	e0 69 44 13 	mov	r9,17427
8000547a:	ea 19 3f d3 	orh	r9,0x3fd3
8000547e:	e0 a0 11 a5 	rcall	800077c8 <__avr32_f64_mul>
80005482:	14 98       	mov	r8,r10
80005484:	16 99       	mov	r9,r11
80005486:	00 9a       	mov	r10,r0
80005488:	02 9b       	mov	r11,r1
8000548a:	e0 a0 13 59 	rcall	80007b3c <__avr32_f64_add>
8000548e:	14 90       	mov	r0,r10
80005490:	16 91       	mov	r1,r11
80005492:	e0 a0 13 df 	rcall	80007c50 <__avr32_f64_to_s32>
80005496:	30 08       	mov	r8,0
80005498:	18 96       	mov	r6,r12
8000549a:	30 09       	mov	r9,0
8000549c:	00 9a       	mov	r10,r0
8000549e:	02 9b       	mov	r11,r1
800054a0:	e0 a0 14 a6 	rcall	80007dec <__avr32_f64_cmp_lt>
800054a4:	c0 c0       	breq	800054bc <_dtoa_r+0x1f4>
800054a6:	0c 9c       	mov	r12,r6
800054a8:	e0 a0 13 eb 	rcall	80007c7e <__avr32_s32_to_f64>
800054ac:	14 98       	mov	r8,r10
800054ae:	16 99       	mov	r9,r11
800054b0:	00 9a       	mov	r10,r0
800054b2:	02 9b       	mov	r11,r1
800054b4:	e0 a0 14 55 	rcall	80007d5e <__avr32_f64_cmp_eq>
800054b8:	f7 b6 00 01 	subeq	r6,1
800054bc:	59 66       	cp.w	r6,22
800054be:	e0 88 00 05 	brls	800054c8 <_dtoa_r+0x200>
800054c2:	30 18       	mov	r8,1
800054c4:	51 48       	stdsp	sp[0x50],r8
800054c6:	c1 38       	rjmp	800054ec <_dtoa_r+0x224>
800054c8:	fe c8 c6 c4 	sub	r8,pc,-14652
800054cc:	fa ea 00 3c 	ld.d	r10,sp[60]
800054d0:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
800054d4:	e0 a0 14 8c 	rcall	80007dec <__avr32_f64_cmp_lt>
800054d8:	f9 b4 00 00 	moveq	r4,0
800054dc:	fb f4 0a 14 	st.weq	sp[0x50],r4
800054e0:	f7 b6 01 01 	subne	r6,1
800054e4:	f9 bc 01 00 	movne	r12,0
800054e8:	fb fc 1a 14 	st.wne	sp[0x50],r12
800054ec:	41 90       	lddsp	r0,sp[0x64]
800054ee:	20 10       	sub	r0,1
800054f0:	0a 10       	sub	r0,r5
800054f2:	c0 46       	brmi	800054fa <_dtoa_r+0x232>
800054f4:	50 40       	stdsp	sp[0x10],r0
800054f6:	30 00       	mov	r0,0
800054f8:	c0 48       	rjmp	80005500 <_dtoa_r+0x238>
800054fa:	30 0b       	mov	r11,0
800054fc:	5c 30       	neg	r0
800054fe:	50 4b       	stdsp	sp[0x10],r11
80005500:	ec 02 11 00 	rsub	r2,r6,0
80005504:	58 06       	cp.w	r6,0
80005506:	fb fa 40 04 	ld.wge	r10,sp[0x10]
8000550a:	f5 d6 e4 0a 	addge	r10,r10,r6
8000550e:	fb fa 4a 04 	st.wge	sp[0x10],r10
80005512:	fb f6 4a 11 	st.wge	sp[0x44],r6
80005516:	f9 b2 04 00 	movge	r2,0
8000551a:	e1 d6 e5 10 	sublt	r0,r0,r6
8000551e:	f9 b9 05 00 	movlt	r9,0
80005522:	fb f9 5a 11 	st.wlt	sp[0x44],r9
80005526:	40 c8       	lddsp	r8,sp[0x30]
80005528:	58 98       	cp.w	r8,9
8000552a:	e0 8b 00 20 	brhi	8000556a <_dtoa_r+0x2a2>
8000552e:	58 58       	cp.w	r8,5
80005530:	f9 b4 0a 01 	movle	r4,1
80005534:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
80005538:	f7 b5 09 04 	subgt	r5,4
8000553c:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
80005540:	f9 b4 09 00 	movgt	r4,0
80005544:	40 cc       	lddsp	r12,sp[0x30]
80005546:	58 3c       	cp.w	r12,3
80005548:	c2 d0       	breq	800055a2 <_dtoa_r+0x2da>
8000554a:	e0 89 00 05 	brgt	80005554 <_dtoa_r+0x28c>
8000554e:	58 2c       	cp.w	r12,2
80005550:	c1 01       	brne	80005570 <_dtoa_r+0x2a8>
80005552:	c1 88       	rjmp	80005582 <_dtoa_r+0x2ba>
80005554:	40 cb       	lddsp	r11,sp[0x30]
80005556:	58 4b       	cp.w	r11,4
80005558:	c0 60       	breq	80005564 <_dtoa_r+0x29c>
8000555a:	58 5b       	cp.w	r11,5
8000555c:	c0 a1       	brne	80005570 <_dtoa_r+0x2a8>
8000555e:	30 1a       	mov	r10,1
80005560:	50 da       	stdsp	sp[0x34],r10
80005562:	c2 28       	rjmp	800055a6 <_dtoa_r+0x2de>
80005564:	30 19       	mov	r9,1
80005566:	50 d9       	stdsp	sp[0x34],r9
80005568:	c0 f8       	rjmp	80005586 <_dtoa_r+0x2be>
8000556a:	30 08       	mov	r8,0
8000556c:	30 14       	mov	r4,1
8000556e:	50 c8       	stdsp	sp[0x30],r8
80005570:	3f f5       	mov	r5,-1
80005572:	30 1c       	mov	r12,1
80005574:	30 0b       	mov	r11,0
80005576:	50 95       	stdsp	sp[0x24],r5
80005578:	50 dc       	stdsp	sp[0x34],r12
8000557a:	0a 91       	mov	r1,r5
8000557c:	31 28       	mov	r8,18
8000557e:	50 eb       	stdsp	sp[0x38],r11
80005580:	c2 08       	rjmp	800055c0 <_dtoa_r+0x2f8>
80005582:	30 0a       	mov	r10,0
80005584:	50 da       	stdsp	sp[0x34],r10
80005586:	40 e9       	lddsp	r9,sp[0x38]
80005588:	58 09       	cp.w	r9,0
8000558a:	e0 89 00 07 	brgt	80005598 <_dtoa_r+0x2d0>
8000558e:	30 18       	mov	r8,1
80005590:	50 98       	stdsp	sp[0x24],r8
80005592:	10 91       	mov	r1,r8
80005594:	50 e8       	stdsp	sp[0x38],r8
80005596:	c1 58       	rjmp	800055c0 <_dtoa_r+0x2f8>
80005598:	40 e5       	lddsp	r5,sp[0x38]
8000559a:	50 95       	stdsp	sp[0x24],r5
8000559c:	0a 91       	mov	r1,r5
8000559e:	0a 98       	mov	r8,r5
800055a0:	c1 08       	rjmp	800055c0 <_dtoa_r+0x2f8>
800055a2:	30 0c       	mov	r12,0
800055a4:	50 dc       	stdsp	sp[0x34],r12
800055a6:	40 eb       	lddsp	r11,sp[0x38]
800055a8:	ec 0b 00 0b 	add	r11,r6,r11
800055ac:	50 9b       	stdsp	sp[0x24],r11
800055ae:	16 98       	mov	r8,r11
800055b0:	2f f8       	sub	r8,-1
800055b2:	58 08       	cp.w	r8,0
800055b4:	e0 89 00 05 	brgt	800055be <_dtoa_r+0x2f6>
800055b8:	10 91       	mov	r1,r8
800055ba:	30 18       	mov	r8,1
800055bc:	c0 28       	rjmp	800055c0 <_dtoa_r+0x2f8>
800055be:	10 91       	mov	r1,r8
800055c0:	30 09       	mov	r9,0
800055c2:	6e 9a       	ld.w	r10,r7[0x24]
800055c4:	95 19       	st.w	r10[0x4],r9
800055c6:	30 49       	mov	r9,4
800055c8:	c0 68       	rjmp	800055d4 <_dtoa_r+0x30c>
800055ca:	d7 03       	nop
800055cc:	6a 1a       	ld.w	r10,r5[0x4]
800055ce:	a1 79       	lsl	r9,0x1
800055d0:	2f fa       	sub	r10,-1
800055d2:	8b 1a       	st.w	r5[0x4],r10
800055d4:	6e 95       	ld.w	r5,r7[0x24]
800055d6:	f2 ca ff ec 	sub	r10,r9,-20
800055da:	10 3a       	cp.w	r10,r8
800055dc:	fe 98 ff f8 	brls	800055cc <_dtoa_r+0x304>
800055e0:	6a 1b       	ld.w	r11,r5[0x4]
800055e2:	0e 9c       	mov	r12,r7
800055e4:	e0 a0 0b 6e 	rcall	80006cc0 <_Balloc>
800055e8:	58 e1       	cp.w	r1,14
800055ea:	5f 88       	srls	r8
800055ec:	8b 0c       	st.w	r5[0x0],r12
800055ee:	f1 e4 00 04 	and	r4,r8,r4
800055f2:	6e 98       	ld.w	r8,r7[0x24]
800055f4:	70 08       	ld.w	r8,r8[0x0]
800055f6:	50 88       	stdsp	sp[0x20],r8
800055f8:	e0 80 01 82 	breq	800058fc <_dtoa_r+0x634>
800055fc:	58 06       	cp.w	r6,0
800055fe:	e0 8a 00 43 	brle	80005684 <_dtoa_r+0x3bc>
80005602:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
80005606:	fe c8 c8 02 	sub	r8,pc,-14334
8000560a:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
8000560e:	fa e5 00 18 	st.d	sp[24],r4
80005612:	ec 04 14 04 	asr	r4,r6,0x4
80005616:	ed b4 00 04 	bld	r4,0x4
8000561a:	c0 30       	breq	80005620 <_dtoa_r+0x358>
8000561c:	30 25       	mov	r5,2
8000561e:	c1 08       	rjmp	8000563e <_dtoa_r+0x376>
80005620:	fe c8 c7 54 	sub	r8,pc,-14508
80005624:	f0 e8 00 20 	ld.d	r8,r8[32]
80005628:	fa ea 00 3c 	ld.d	r10,sp[60]
8000562c:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
80005630:	e0 a0 14 12 	rcall	80007e54 <__avr32_f64_div>
80005634:	30 35       	mov	r5,3
80005636:	14 98       	mov	r8,r10
80005638:	16 99       	mov	r9,r11
8000563a:	fa e9 00 08 	st.d	sp[8],r8
8000563e:	fe cc c7 72 	sub	r12,pc,-14478
80005642:	50 a3       	stdsp	sp[0x28],r3
80005644:	0c 93       	mov	r3,r6
80005646:	18 96       	mov	r6,r12
80005648:	c0 f8       	rjmp	80005666 <_dtoa_r+0x39e>
8000564a:	fa ea 00 18 	ld.d	r10,sp[24]
8000564e:	ed b4 00 00 	bld	r4,0x0
80005652:	c0 81       	brne	80005662 <_dtoa_r+0x39a>
80005654:	ec e8 00 00 	ld.d	r8,r6[0]
80005658:	2f f5       	sub	r5,-1
8000565a:	e0 a0 10 b7 	rcall	800077c8 <__avr32_f64_mul>
8000565e:	fa eb 00 18 	st.d	sp[24],r10
80005662:	a1 54       	asr	r4,0x1
80005664:	2f 86       	sub	r6,-8
80005666:	58 04       	cp.w	r4,0
80005668:	cf 11       	brne	8000564a <_dtoa_r+0x382>
8000566a:	fa e8 00 18 	ld.d	r8,sp[24]
8000566e:	fa ea 00 08 	ld.d	r10,sp[8]
80005672:	06 96       	mov	r6,r3
80005674:	e0 a0 13 f0 	rcall	80007e54 <__avr32_f64_div>
80005678:	40 a3       	lddsp	r3,sp[0x28]
8000567a:	14 98       	mov	r8,r10
8000567c:	16 99       	mov	r9,r11
8000567e:	fa e9 00 08 	st.d	sp[8],r8
80005682:	c2 f8       	rjmp	800056e0 <_dtoa_r+0x418>
80005684:	ec 08 11 00 	rsub	r8,r6,0
80005688:	c0 31       	brne	8000568e <_dtoa_r+0x3c6>
8000568a:	30 25       	mov	r5,2
8000568c:	c2 a8       	rjmp	800056e0 <_dtoa_r+0x418>
8000568e:	fe cc c7 c2 	sub	r12,pc,-14398
80005692:	f0 04 14 04 	asr	r4,r8,0x4
80005696:	50 1c       	stdsp	sp[0x4],r12
80005698:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
8000569c:	fe c9 c8 98 	sub	r9,pc,-14184
800056a0:	fa ea 00 3c 	ld.d	r10,sp[60]
800056a4:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
800056a8:	e0 a0 10 90 	rcall	800077c8 <__avr32_f64_mul>
800056ac:	40 1c       	lddsp	r12,sp[0x4]
800056ae:	50 63       	stdsp	sp[0x18],r3
800056b0:	30 25       	mov	r5,2
800056b2:	0c 93       	mov	r3,r6
800056b4:	fa eb 00 08 	st.d	sp[8],r10
800056b8:	18 96       	mov	r6,r12
800056ba:	c0 f8       	rjmp	800056d8 <_dtoa_r+0x410>
800056bc:	fa ea 00 08 	ld.d	r10,sp[8]
800056c0:	ed b4 00 00 	bld	r4,0x0
800056c4:	c0 81       	brne	800056d4 <_dtoa_r+0x40c>
800056c6:	ec e8 00 00 	ld.d	r8,r6[0]
800056ca:	2f f5       	sub	r5,-1
800056cc:	e0 a0 10 7e 	rcall	800077c8 <__avr32_f64_mul>
800056d0:	fa eb 00 08 	st.d	sp[8],r10
800056d4:	a1 54       	asr	r4,0x1
800056d6:	2f 86       	sub	r6,-8
800056d8:	58 04       	cp.w	r4,0
800056da:	cf 11       	brne	800056bc <_dtoa_r+0x3f4>
800056dc:	06 96       	mov	r6,r3
800056de:	40 63       	lddsp	r3,sp[0x18]
800056e0:	41 4a       	lddsp	r10,sp[0x50]
800056e2:	58 0a       	cp.w	r10,0
800056e4:	c2 a0       	breq	80005738 <_dtoa_r+0x470>
800056e6:	fa e8 00 08 	ld.d	r8,sp[8]
800056ea:	58 01       	cp.w	r1,0
800056ec:	5f 94       	srgt	r4
800056ee:	fa e9 00 18 	st.d	sp[24],r8
800056f2:	30 08       	mov	r8,0
800056f4:	fc 19 3f f0 	movh	r9,0x3ff0
800056f8:	fa ea 00 18 	ld.d	r10,sp[24]
800056fc:	e0 a0 13 78 	rcall	80007dec <__avr32_f64_cmp_lt>
80005700:	f9 bc 00 00 	moveq	r12,0
80005704:	f9 bc 01 01 	movne	r12,1
80005708:	e9 ec 00 0c 	and	r12,r4,r12
8000570c:	c1 60       	breq	80005738 <_dtoa_r+0x470>
8000570e:	40 98       	lddsp	r8,sp[0x24]
80005710:	58 08       	cp.w	r8,0
80005712:	e0 8a 00 f1 	brle	800058f4 <_dtoa_r+0x62c>
80005716:	30 08       	mov	r8,0
80005718:	fc 19 40 24 	movh	r9,0x4024
8000571c:	ec c4 00 01 	sub	r4,r6,1
80005720:	fa ea 00 18 	ld.d	r10,sp[24]
80005724:	2f f5       	sub	r5,-1
80005726:	50 64       	stdsp	sp[0x18],r4
80005728:	e0 a0 10 50 	rcall	800077c8 <__avr32_f64_mul>
8000572c:	40 94       	lddsp	r4,sp[0x24]
8000572e:	14 98       	mov	r8,r10
80005730:	16 99       	mov	r9,r11
80005732:	fa e9 00 08 	st.d	sp[8],r8
80005736:	c0 38       	rjmp	8000573c <_dtoa_r+0x474>
80005738:	50 66       	stdsp	sp[0x18],r6
8000573a:	02 94       	mov	r4,r1
8000573c:	0a 9c       	mov	r12,r5
8000573e:	e0 a0 12 a0 	rcall	80007c7e <__avr32_s32_to_f64>
80005742:	fa e8 00 08 	ld.d	r8,sp[8]
80005746:	e0 a0 10 41 	rcall	800077c8 <__avr32_f64_mul>
8000574a:	30 08       	mov	r8,0
8000574c:	fc 19 40 1c 	movh	r9,0x401c
80005750:	e0 a0 11 f6 	rcall	80007b3c <__avr32_f64_add>
80005754:	14 98       	mov	r8,r10
80005756:	16 99       	mov	r9,r11
80005758:	fa e9 00 28 	st.d	sp[40],r8
8000575c:	fc 18 fc c0 	movh	r8,0xfcc0
80005760:	40 a5       	lddsp	r5,sp[0x28]
80005762:	10 05       	add	r5,r8
80005764:	50 a5       	stdsp	sp[0x28],r5
80005766:	58 04       	cp.w	r4,0
80005768:	c2 11       	brne	800057aa <_dtoa_r+0x4e2>
8000576a:	fa ea 00 08 	ld.d	r10,sp[8]
8000576e:	30 08       	mov	r8,0
80005770:	fc 19 40 14 	movh	r9,0x4014
80005774:	e0 a0 11 16 	rcall	800079a0 <__avr32_f64_sub>
80005778:	40 bc       	lddsp	r12,sp[0x2c]
8000577a:	fa eb 00 08 	st.d	sp[8],r10
8000577e:	14 98       	mov	r8,r10
80005780:	16 99       	mov	r9,r11
80005782:	18 9a       	mov	r10,r12
80005784:	0a 9b       	mov	r11,r5
80005786:	e0 a0 13 33 	rcall	80007dec <__avr32_f64_cmp_lt>
8000578a:	e0 81 02 54 	brne	80005c32 <_dtoa_r+0x96a>
8000578e:	0a 98       	mov	r8,r5
80005790:	40 b9       	lddsp	r9,sp[0x2c]
80005792:	ee 18 80 00 	eorh	r8,0x8000
80005796:	fa ea 00 08 	ld.d	r10,sp[8]
8000579a:	10 95       	mov	r5,r8
8000579c:	12 98       	mov	r8,r9
8000579e:	0a 99       	mov	r9,r5
800057a0:	e0 a0 13 26 	rcall	80007dec <__avr32_f64_cmp_lt>
800057a4:	e0 81 02 3e 	brne	80005c20 <_dtoa_r+0x958>
800057a8:	ca 68       	rjmp	800058f4 <_dtoa_r+0x62c>
800057aa:	fe c9 c9 a6 	sub	r9,pc,-13914
800057ae:	e8 c8 00 01 	sub	r8,r4,1
800057b2:	40 d5       	lddsp	r5,sp[0x34]
800057b4:	58 05       	cp.w	r5,0
800057b6:	c4 f0       	breq	80005854 <_dtoa_r+0x58c>
800057b8:	30 0c       	mov	r12,0
800057ba:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
800057be:	51 3c       	stdsp	sp[0x4c],r12
800057c0:	30 0a       	mov	r10,0
800057c2:	fc 1b 3f e0 	movh	r11,0x3fe0
800057c6:	e0 a0 13 47 	rcall	80007e54 <__avr32_f64_div>
800057ca:	fa e8 00 28 	ld.d	r8,sp[40]
800057ce:	40 85       	lddsp	r5,sp[0x20]
800057d0:	e0 a0 10 e8 	rcall	800079a0 <__avr32_f64_sub>
800057d4:	fa eb 00 28 	st.d	sp[40],r10
800057d8:	fa ea 00 08 	ld.d	r10,sp[8]
800057dc:	e0 a0 12 3a 	rcall	80007c50 <__avr32_f64_to_s32>
800057e0:	51 6c       	stdsp	sp[0x58],r12
800057e2:	e0 a0 12 4e 	rcall	80007c7e <__avr32_s32_to_f64>
800057e6:	14 98       	mov	r8,r10
800057e8:	16 99       	mov	r9,r11
800057ea:	fa ea 00 08 	ld.d	r10,sp[8]
800057ee:	e0 a0 10 d9 	rcall	800079a0 <__avr32_f64_sub>
800057f2:	fa eb 00 08 	st.d	sp[8],r10
800057f6:	41 68       	lddsp	r8,sp[0x58]
800057f8:	2d 08       	sub	r8,-48
800057fa:	0a c8       	st.b	r5++,r8
800057fc:	41 39       	lddsp	r9,sp[0x4c]
800057fe:	2f f9       	sub	r9,-1
80005800:	51 39       	stdsp	sp[0x4c],r9
80005802:	fa e8 00 28 	ld.d	r8,sp[40]
80005806:	e0 a0 12 f3 	rcall	80007dec <__avr32_f64_cmp_lt>
8000580a:	e0 81 03 39 	brne	80005e7c <_dtoa_r+0xbb4>
8000580e:	fa e8 00 08 	ld.d	r8,sp[8]
80005812:	30 0a       	mov	r10,0
80005814:	fc 1b 3f f0 	movh	r11,0x3ff0
80005818:	e0 a0 10 c4 	rcall	800079a0 <__avr32_f64_sub>
8000581c:	fa e8 00 28 	ld.d	r8,sp[40]
80005820:	e0 a0 12 e6 	rcall	80007dec <__avr32_f64_cmp_lt>
80005824:	fa ea 00 28 	ld.d	r10,sp[40]
80005828:	30 08       	mov	r8,0
8000582a:	fc 19 40 24 	movh	r9,0x4024
8000582e:	e0 81 00 da 	brne	800059e2 <_dtoa_r+0x71a>
80005832:	41 3c       	lddsp	r12,sp[0x4c]
80005834:	08 3c       	cp.w	r12,r4
80005836:	c5 f4       	brge	800058f4 <_dtoa_r+0x62c>
80005838:	e0 a0 0f c8 	rcall	800077c8 <__avr32_f64_mul>
8000583c:	30 08       	mov	r8,0
8000583e:	fa eb 00 28 	st.d	sp[40],r10
80005842:	fc 19 40 24 	movh	r9,0x4024
80005846:	fa ea 00 08 	ld.d	r10,sp[8]
8000584a:	e0 a0 0f bf 	rcall	800077c8 <__avr32_f64_mul>
8000584e:	fa eb 00 08 	st.d	sp[8],r10
80005852:	cc 3b       	rjmp	800057d8 <_dtoa_r+0x510>
80005854:	40 85       	lddsp	r5,sp[0x20]
80005856:	08 05       	add	r5,r4
80005858:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
8000585c:	51 35       	stdsp	sp[0x4c],r5
8000585e:	fa e8 00 28 	ld.d	r8,sp[40]
80005862:	40 85       	lddsp	r5,sp[0x20]
80005864:	e0 a0 0f b2 	rcall	800077c8 <__avr32_f64_mul>
80005868:	fa eb 00 28 	st.d	sp[40],r10
8000586c:	fa ea 00 08 	ld.d	r10,sp[8]
80005870:	e0 a0 11 f0 	rcall	80007c50 <__avr32_f64_to_s32>
80005874:	51 6c       	stdsp	sp[0x58],r12
80005876:	e0 a0 12 04 	rcall	80007c7e <__avr32_s32_to_f64>
8000587a:	14 98       	mov	r8,r10
8000587c:	16 99       	mov	r9,r11
8000587e:	fa ea 00 08 	ld.d	r10,sp[8]
80005882:	e0 a0 10 8f 	rcall	800079a0 <__avr32_f64_sub>
80005886:	fa eb 00 08 	st.d	sp[8],r10
8000588a:	41 68       	lddsp	r8,sp[0x58]
8000588c:	2d 08       	sub	r8,-48
8000588e:	0a c8       	st.b	r5++,r8
80005890:	41 3c       	lddsp	r12,sp[0x4c]
80005892:	18 35       	cp.w	r5,r12
80005894:	c2 81       	brne	800058e4 <_dtoa_r+0x61c>
80005896:	30 08       	mov	r8,0
80005898:	fc 19 3f e0 	movh	r9,0x3fe0
8000589c:	fa ea 00 28 	ld.d	r10,sp[40]
800058a0:	e0 a0 11 4e 	rcall	80007b3c <__avr32_f64_add>
800058a4:	40 85       	lddsp	r5,sp[0x20]
800058a6:	fa e8 00 08 	ld.d	r8,sp[8]
800058aa:	08 05       	add	r5,r4
800058ac:	e0 a0 12 a0 	rcall	80007dec <__avr32_f64_cmp_lt>
800058b0:	e0 81 00 99 	brne	800059e2 <_dtoa_r+0x71a>
800058b4:	fa e8 00 28 	ld.d	r8,sp[40]
800058b8:	30 0a       	mov	r10,0
800058ba:	fc 1b 3f e0 	movh	r11,0x3fe0
800058be:	e0 a0 10 71 	rcall	800079a0 <__avr32_f64_sub>
800058c2:	14 98       	mov	r8,r10
800058c4:	16 99       	mov	r9,r11
800058c6:	fa ea 00 08 	ld.d	r10,sp[8]
800058ca:	e0 a0 12 91 	rcall	80007dec <__avr32_f64_cmp_lt>
800058ce:	c1 30       	breq	800058f4 <_dtoa_r+0x62c>
800058d0:	33 09       	mov	r9,48
800058d2:	0a 98       	mov	r8,r5
800058d4:	11 7a       	ld.ub	r10,--r8
800058d6:	f2 0a 18 00 	cp.b	r10,r9
800058da:	e0 81 02 d1 	brne	80005e7c <_dtoa_r+0xbb4>
800058de:	10 95       	mov	r5,r8
800058e0:	cf 9b       	rjmp	800058d2 <_dtoa_r+0x60a>
800058e2:	d7 03       	nop
800058e4:	30 08       	mov	r8,0
800058e6:	fc 19 40 24 	movh	r9,0x4024
800058ea:	e0 a0 0f 6f 	rcall	800077c8 <__avr32_f64_mul>
800058ee:	fa eb 00 08 	st.d	sp[8],r10
800058f2:	cb db       	rjmp	8000586c <_dtoa_r+0x5a4>
800058f4:	fa ea 00 3c 	ld.d	r10,sp[60]
800058f8:	fa eb 00 08 	st.d	sp[8],r10
800058fc:	58 e6       	cp.w	r6,14
800058fe:	5f ab       	srle	r11
80005900:	41 8a       	lddsp	r10,sp[0x60]
80005902:	30 08       	mov	r8,0
80005904:	f4 09 11 ff 	rsub	r9,r10,-1
80005908:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
8000590c:	f0 09 18 00 	cp.b	r9,r8
80005910:	e0 80 00 82 	breq	80005a14 <_dtoa_r+0x74c>
80005914:	40 ea       	lddsp	r10,sp[0x38]
80005916:	58 01       	cp.w	r1,0
80005918:	5f a9       	srle	r9
8000591a:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
8000591e:	fe ca cb 1a 	sub	r10,pc,-13542
80005922:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
80005926:	fa e5 00 10 	st.d	sp[16],r4
8000592a:	f0 09 18 00 	cp.b	r9,r8
8000592e:	c1 40       	breq	80005956 <_dtoa_r+0x68e>
80005930:	58 01       	cp.w	r1,0
80005932:	e0 81 01 77 	brne	80005c20 <_dtoa_r+0x958>
80005936:	30 08       	mov	r8,0
80005938:	fc 19 40 14 	movh	r9,0x4014
8000593c:	08 9a       	mov	r10,r4
8000593e:	0a 9b       	mov	r11,r5
80005940:	e0 a0 0f 44 	rcall	800077c8 <__avr32_f64_mul>
80005944:	fa e8 00 08 	ld.d	r8,sp[8]
80005948:	e0 a0 12 1e 	rcall	80007d84 <__avr32_f64_cmp_ge>
8000594c:	e0 81 01 6a 	brne	80005c20 <_dtoa_r+0x958>
80005950:	02 92       	mov	r2,r1
80005952:	e0 8f 01 72 	bral	80005c36 <_dtoa_r+0x96e>
80005956:	40 85       	lddsp	r5,sp[0x20]
80005958:	30 14       	mov	r4,1
8000595a:	fa e8 00 10 	ld.d	r8,sp[16]
8000595e:	fa ea 00 08 	ld.d	r10,sp[8]
80005962:	e0 a0 12 79 	rcall	80007e54 <__avr32_f64_div>
80005966:	e0 a0 11 75 	rcall	80007c50 <__avr32_f64_to_s32>
8000596a:	18 92       	mov	r2,r12
8000596c:	e0 a0 11 89 	rcall	80007c7e <__avr32_s32_to_f64>
80005970:	fa e8 00 10 	ld.d	r8,sp[16]
80005974:	e0 a0 0f 2a 	rcall	800077c8 <__avr32_f64_mul>
80005978:	14 98       	mov	r8,r10
8000597a:	16 99       	mov	r9,r11
8000597c:	fa ea 00 08 	ld.d	r10,sp[8]
80005980:	e0 a0 10 10 	rcall	800079a0 <__avr32_f64_sub>
80005984:	fa eb 00 08 	st.d	sp[8],r10
80005988:	e4 c8 ff d0 	sub	r8,r2,-48
8000598c:	0a c8       	st.b	r5++,r8
8000598e:	fc 19 40 24 	movh	r9,0x4024
80005992:	30 08       	mov	r8,0
80005994:	02 34       	cp.w	r4,r1
80005996:	c3 31       	brne	800059fc <_dtoa_r+0x734>
80005998:	fa e8 00 08 	ld.d	r8,sp[8]
8000599c:	e0 a0 10 d0 	rcall	80007b3c <__avr32_f64_add>
800059a0:	16 91       	mov	r1,r11
800059a2:	14 90       	mov	r0,r10
800059a4:	14 98       	mov	r8,r10
800059a6:	02 99       	mov	r9,r1
800059a8:	fa ea 00 10 	ld.d	r10,sp[16]
800059ac:	e0 a0 12 20 	rcall	80007dec <__avr32_f64_cmp_lt>
800059b0:	c1 a1       	brne	800059e4 <_dtoa_r+0x71c>
800059b2:	fa e8 00 10 	ld.d	r8,sp[16]
800059b6:	00 9a       	mov	r10,r0
800059b8:	02 9b       	mov	r11,r1
800059ba:	e0 a0 11 d2 	rcall	80007d5e <__avr32_f64_cmp_eq>
800059be:	e0 80 02 5e 	breq	80005e7a <_dtoa_r+0xbb2>
800059c2:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
800059c6:	c0 f1       	brne	800059e4 <_dtoa_r+0x71c>
800059c8:	e0 8f 02 59 	bral	80005e7a <_dtoa_r+0xbb2>
800059cc:	40 8a       	lddsp	r10,sp[0x20]
800059ce:	14 38       	cp.w	r8,r10
800059d0:	c0 30       	breq	800059d6 <_dtoa_r+0x70e>
800059d2:	10 95       	mov	r5,r8
800059d4:	c0 98       	rjmp	800059e6 <_dtoa_r+0x71e>
800059d6:	33 08       	mov	r8,48
800059d8:	40 89       	lddsp	r9,sp[0x20]
800059da:	2f f6       	sub	r6,-1
800059dc:	b2 88       	st.b	r9[0x0],r8
800059de:	40 88       	lddsp	r8,sp[0x20]
800059e0:	c0 88       	rjmp	800059f0 <_dtoa_r+0x728>
800059e2:	40 66       	lddsp	r6,sp[0x18]
800059e4:	33 99       	mov	r9,57
800059e6:	0a 98       	mov	r8,r5
800059e8:	11 7a       	ld.ub	r10,--r8
800059ea:	f2 0a 18 00 	cp.b	r10,r9
800059ee:	ce f0       	breq	800059cc <_dtoa_r+0x704>
800059f0:	50 66       	stdsp	sp[0x18],r6
800059f2:	11 89       	ld.ub	r9,r8[0x0]
800059f4:	2f f9       	sub	r9,-1
800059f6:	b0 89       	st.b	r8[0x0],r9
800059f8:	e0 8f 02 42 	bral	80005e7c <_dtoa_r+0xbb4>
800059fc:	e0 a0 0e e6 	rcall	800077c8 <__avr32_f64_mul>
80005a00:	2f f4       	sub	r4,-1
80005a02:	fa eb 00 08 	st.d	sp[8],r10
80005a06:	30 08       	mov	r8,0
80005a08:	30 09       	mov	r9,0
80005a0a:	e0 a0 11 aa 	rcall	80007d5e <__avr32_f64_cmp_eq>
80005a0e:	ca 60       	breq	8000595a <_dtoa_r+0x692>
80005a10:	e0 8f 02 35 	bral	80005e7a <_dtoa_r+0xbb2>
80005a14:	40 d8       	lddsp	r8,sp[0x34]
80005a16:	58 08       	cp.w	r8,0
80005a18:	c0 51       	brne	80005a22 <_dtoa_r+0x75a>
80005a1a:	04 98       	mov	r8,r2
80005a1c:	00 95       	mov	r5,r0
80005a1e:	40 d4       	lddsp	r4,sp[0x34]
80005a20:	c3 78       	rjmp	80005a8e <_dtoa_r+0x7c6>
80005a22:	40 c5       	lddsp	r5,sp[0x30]
80005a24:	58 15       	cp.w	r5,1
80005a26:	e0 89 00 0f 	brgt	80005a44 <_dtoa_r+0x77c>
80005a2a:	41 74       	lddsp	r4,sp[0x5c]
80005a2c:	58 04       	cp.w	r4,0
80005a2e:	c0 40       	breq	80005a36 <_dtoa_r+0x76e>
80005a30:	f4 c9 fb cd 	sub	r9,r10,-1075
80005a34:	c0 48       	rjmp	80005a3c <_dtoa_r+0x774>
80005a36:	41 99       	lddsp	r9,sp[0x64]
80005a38:	f2 09 11 36 	rsub	r9,r9,54
80005a3c:	04 98       	mov	r8,r2
80005a3e:	00 95       	mov	r5,r0
80005a40:	c1 c8       	rjmp	80005a78 <_dtoa_r+0x7b0>
80005a42:	d7 03       	nop
80005a44:	e2 c8 00 01 	sub	r8,r1,1
80005a48:	58 01       	cp.w	r1,0
80005a4a:	e0 05 17 40 	movge	r5,r0
80005a4e:	e2 09 17 40 	movge	r9,r1
80005a52:	e1 d1 e5 15 	sublt	r5,r0,r1
80005a56:	f9 b9 05 00 	movlt	r9,0
80005a5a:	10 32       	cp.w	r2,r8
80005a5c:	e5 d8 e4 18 	subge	r8,r2,r8
80005a60:	f1 d2 e5 18 	sublt	r8,r8,r2
80005a64:	e5 d8 e5 02 	addlt	r2,r2,r8
80005a68:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
80005a6c:	f9 d8 e5 0c 	addlt	r12,r12,r8
80005a70:	fb fc 5a 11 	st.wlt	sp[0x44],r12
80005a74:	f9 b8 05 00 	movlt	r8,0
80005a78:	40 4b       	lddsp	r11,sp[0x10]
80005a7a:	12 0b       	add	r11,r9
80005a7c:	50 08       	stdsp	sp[0x0],r8
80005a7e:	50 4b       	stdsp	sp[0x10],r11
80005a80:	12 00       	add	r0,r9
80005a82:	30 1b       	mov	r11,1
80005a84:	0e 9c       	mov	r12,r7
80005a86:	e0 a0 0a d1 	rcall	80007028 <__i2b>
80005a8a:	40 08       	lddsp	r8,sp[0x0]
80005a8c:	18 94       	mov	r4,r12
80005a8e:	40 4a       	lddsp	r10,sp[0x10]
80005a90:	58 05       	cp.w	r5,0
80005a92:	5f 99       	srgt	r9
80005a94:	58 0a       	cp.w	r10,0
80005a96:	5f 9a       	srgt	r10
80005a98:	f5 e9 00 09 	and	r9,r10,r9
80005a9c:	c0 80       	breq	80005aac <_dtoa_r+0x7e4>
80005a9e:	40 4c       	lddsp	r12,sp[0x10]
80005aa0:	f8 05 0d 49 	min	r9,r12,r5
80005aa4:	12 1c       	sub	r12,r9
80005aa6:	12 10       	sub	r0,r9
80005aa8:	50 4c       	stdsp	sp[0x10],r12
80005aaa:	12 15       	sub	r5,r9
80005aac:	58 02       	cp.w	r2,0
80005aae:	e0 8a 00 27 	brle	80005afc <_dtoa_r+0x834>
80005ab2:	40 db       	lddsp	r11,sp[0x34]
80005ab4:	58 0b       	cp.w	r11,0
80005ab6:	c1 d0       	breq	80005af0 <_dtoa_r+0x828>
80005ab8:	58 08       	cp.w	r8,0
80005aba:	e0 8a 00 17 	brle	80005ae8 <_dtoa_r+0x820>
80005abe:	10 9a       	mov	r10,r8
80005ac0:	50 08       	stdsp	sp[0x0],r8
80005ac2:	08 9b       	mov	r11,r4
80005ac4:	0e 9c       	mov	r12,r7
80005ac6:	e0 a0 0a f7 	rcall	800070b4 <__pow5mult>
80005aca:	06 9a       	mov	r10,r3
80005acc:	18 9b       	mov	r11,r12
80005ace:	18 94       	mov	r4,r12
80005ad0:	0e 9c       	mov	r12,r7
80005ad2:	e0 a0 0a 2b 	rcall	80006f28 <__multiply>
80005ad6:	18 99       	mov	r9,r12
80005ad8:	06 9b       	mov	r11,r3
80005ada:	50 19       	stdsp	sp[0x4],r9
80005adc:	0e 9c       	mov	r12,r7
80005ade:	e0 a0 08 d7 	rcall	80006c8c <_Bfree>
80005ae2:	40 19       	lddsp	r9,sp[0x4]
80005ae4:	40 08       	lddsp	r8,sp[0x0]
80005ae6:	12 93       	mov	r3,r9
80005ae8:	e4 08 01 0a 	sub	r10,r2,r8
80005aec:	c0 80       	breq	80005afc <_dtoa_r+0x834>
80005aee:	c0 28       	rjmp	80005af2 <_dtoa_r+0x82a>
80005af0:	04 9a       	mov	r10,r2
80005af2:	06 9b       	mov	r11,r3
80005af4:	0e 9c       	mov	r12,r7
80005af6:	e0 a0 0a df 	rcall	800070b4 <__pow5mult>
80005afa:	18 93       	mov	r3,r12
80005afc:	30 1b       	mov	r11,1
80005afe:	0e 9c       	mov	r12,r7
80005b00:	e0 a0 0a 94 	rcall	80007028 <__i2b>
80005b04:	41 1a       	lddsp	r10,sp[0x44]
80005b06:	18 92       	mov	r2,r12
80005b08:	58 0a       	cp.w	r10,0
80005b0a:	e0 8a 00 07 	brle	80005b18 <_dtoa_r+0x850>
80005b0e:	18 9b       	mov	r11,r12
80005b10:	0e 9c       	mov	r12,r7
80005b12:	e0 a0 0a d1 	rcall	800070b4 <__pow5mult>
80005b16:	18 92       	mov	r2,r12
80005b18:	40 c9       	lddsp	r9,sp[0x30]
80005b1a:	58 19       	cp.w	r9,1
80005b1c:	e0 89 00 14 	brgt	80005b44 <_dtoa_r+0x87c>
80005b20:	40 38       	lddsp	r8,sp[0xc]
80005b22:	58 08       	cp.w	r8,0
80005b24:	c1 01       	brne	80005b44 <_dtoa_r+0x87c>
80005b26:	40 29       	lddsp	r9,sp[0x8]
80005b28:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80005b2c:	c0 c1       	brne	80005b44 <_dtoa_r+0x87c>
80005b2e:	12 98       	mov	r8,r9
80005b30:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005b34:	c0 80       	breq	80005b44 <_dtoa_r+0x87c>
80005b36:	40 4c       	lddsp	r12,sp[0x10]
80005b38:	30 1b       	mov	r11,1
80005b3a:	2f fc       	sub	r12,-1
80005b3c:	2f f0       	sub	r0,-1
80005b3e:	50 4c       	stdsp	sp[0x10],r12
80005b40:	50 6b       	stdsp	sp[0x18],r11
80005b42:	c0 38       	rjmp	80005b48 <_dtoa_r+0x880>
80005b44:	30 0a       	mov	r10,0
80005b46:	50 6a       	stdsp	sp[0x18],r10
80005b48:	41 19       	lddsp	r9,sp[0x44]
80005b4a:	58 09       	cp.w	r9,0
80005b4c:	c0 31       	brne	80005b52 <_dtoa_r+0x88a>
80005b4e:	30 1c       	mov	r12,1
80005b50:	c0 98       	rjmp	80005b62 <_dtoa_r+0x89a>
80005b52:	64 48       	ld.w	r8,r2[0x10]
80005b54:	2f c8       	sub	r8,-4
80005b56:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
80005b5a:	e0 a0 08 08 	rcall	80006b6a <__hi0bits>
80005b5e:	f8 0c 11 20 	rsub	r12,r12,32
80005b62:	40 4b       	lddsp	r11,sp[0x10]
80005b64:	f8 0b 00 08 	add	r8,r12,r11
80005b68:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80005b6c:	c0 c0       	breq	80005b84 <_dtoa_r+0x8bc>
80005b6e:	f0 08 11 20 	rsub	r8,r8,32
80005b72:	58 48       	cp.w	r8,4
80005b74:	e0 8a 00 06 	brle	80005b80 <_dtoa_r+0x8b8>
80005b78:	20 48       	sub	r8,4
80005b7a:	10 0b       	add	r11,r8
80005b7c:	50 4b       	stdsp	sp[0x10],r11
80005b7e:	c0 78       	rjmp	80005b8c <_dtoa_r+0x8c4>
80005b80:	58 48       	cp.w	r8,4
80005b82:	c0 70       	breq	80005b90 <_dtoa_r+0x8c8>
80005b84:	40 4a       	lddsp	r10,sp[0x10]
80005b86:	2e 48       	sub	r8,-28
80005b88:	10 0a       	add	r10,r8
80005b8a:	50 4a       	stdsp	sp[0x10],r10
80005b8c:	10 00       	add	r0,r8
80005b8e:	10 05       	add	r5,r8
80005b90:	58 00       	cp.w	r0,0
80005b92:	e0 8a 00 08 	brle	80005ba2 <_dtoa_r+0x8da>
80005b96:	06 9b       	mov	r11,r3
80005b98:	00 9a       	mov	r10,r0
80005b9a:	0e 9c       	mov	r12,r7
80005b9c:	e0 a0 09 82 	rcall	80006ea0 <__lshift>
80005ba0:	18 93       	mov	r3,r12
80005ba2:	40 49       	lddsp	r9,sp[0x10]
80005ba4:	58 09       	cp.w	r9,0
80005ba6:	e0 8a 00 08 	brle	80005bb6 <_dtoa_r+0x8ee>
80005baa:	04 9b       	mov	r11,r2
80005bac:	12 9a       	mov	r10,r9
80005bae:	0e 9c       	mov	r12,r7
80005bb0:	e0 a0 09 78 	rcall	80006ea0 <__lshift>
80005bb4:	18 92       	mov	r2,r12
80005bb6:	41 48       	lddsp	r8,sp[0x50]
80005bb8:	58 08       	cp.w	r8,0
80005bba:	c1 b0       	breq	80005bf0 <_dtoa_r+0x928>
80005bbc:	04 9b       	mov	r11,r2
80005bbe:	06 9c       	mov	r12,r3
80005bc0:	e0 a0 08 4c 	rcall	80006c58 <__mcmp>
80005bc4:	c1 64       	brge	80005bf0 <_dtoa_r+0x928>
80005bc6:	06 9b       	mov	r11,r3
80005bc8:	30 09       	mov	r9,0
80005bca:	30 aa       	mov	r10,10
80005bcc:	0e 9c       	mov	r12,r7
80005bce:	e0 a0 0a 35 	rcall	80007038 <__multadd>
80005bd2:	20 16       	sub	r6,1
80005bd4:	18 93       	mov	r3,r12
80005bd6:	40 dc       	lddsp	r12,sp[0x34]
80005bd8:	58 0c       	cp.w	r12,0
80005bda:	c0 31       	brne	80005be0 <_dtoa_r+0x918>
80005bdc:	40 91       	lddsp	r1,sp[0x24]
80005bde:	c0 98       	rjmp	80005bf0 <_dtoa_r+0x928>
80005be0:	08 9b       	mov	r11,r4
80005be2:	40 91       	lddsp	r1,sp[0x24]
80005be4:	30 09       	mov	r9,0
80005be6:	30 aa       	mov	r10,10
80005be8:	0e 9c       	mov	r12,r7
80005bea:	e0 a0 0a 27 	rcall	80007038 <__multadd>
80005bee:	18 94       	mov	r4,r12
80005bf0:	58 01       	cp.w	r1,0
80005bf2:	5f a9       	srle	r9
80005bf4:	40 cb       	lddsp	r11,sp[0x30]
80005bf6:	58 2b       	cp.w	r11,2
80005bf8:	5f 98       	srgt	r8
80005bfa:	f3 e8 00 08 	and	r8,r9,r8
80005bfe:	c2 50       	breq	80005c48 <_dtoa_r+0x980>
80005c00:	58 01       	cp.w	r1,0
80005c02:	c1 11       	brne	80005c24 <_dtoa_r+0x95c>
80005c04:	04 9b       	mov	r11,r2
80005c06:	02 99       	mov	r9,r1
80005c08:	30 5a       	mov	r10,5
80005c0a:	0e 9c       	mov	r12,r7
80005c0c:	e0 a0 0a 16 	rcall	80007038 <__multadd>
80005c10:	18 92       	mov	r2,r12
80005c12:	18 9b       	mov	r11,r12
80005c14:	06 9c       	mov	r12,r3
80005c16:	e0 a0 08 21 	rcall	80006c58 <__mcmp>
80005c1a:	e0 89 00 0f 	brgt	80005c38 <_dtoa_r+0x970>
80005c1e:	c0 38       	rjmp	80005c24 <_dtoa_r+0x95c>
80005c20:	30 02       	mov	r2,0
80005c22:	04 94       	mov	r4,r2
80005c24:	40 ea       	lddsp	r10,sp[0x38]
80005c26:	30 09       	mov	r9,0
80005c28:	5c da       	com	r10
80005c2a:	40 85       	lddsp	r5,sp[0x20]
80005c2c:	50 6a       	stdsp	sp[0x18],r10
80005c2e:	50 49       	stdsp	sp[0x10],r9
80005c30:	c0 f9       	rjmp	80005e4e <_dtoa_r+0xb86>
80005c32:	08 92       	mov	r2,r4
80005c34:	40 66       	lddsp	r6,sp[0x18]
80005c36:	04 94       	mov	r4,r2
80005c38:	2f f6       	sub	r6,-1
80005c3a:	50 66       	stdsp	sp[0x18],r6
80005c3c:	33 18       	mov	r8,49
80005c3e:	40 85       	lddsp	r5,sp[0x20]
80005c40:	0a c8       	st.b	r5++,r8
80005c42:	30 08       	mov	r8,0
80005c44:	50 48       	stdsp	sp[0x10],r8
80005c46:	c0 49       	rjmp	80005e4e <_dtoa_r+0xb86>
80005c48:	40 dc       	lddsp	r12,sp[0x34]
80005c4a:	58 0c       	cp.w	r12,0
80005c4c:	e0 80 00 b5 	breq	80005db6 <_dtoa_r+0xaee>
80005c50:	58 05       	cp.w	r5,0
80005c52:	e0 8a 00 08 	brle	80005c62 <_dtoa_r+0x99a>
80005c56:	08 9b       	mov	r11,r4
80005c58:	0a 9a       	mov	r10,r5
80005c5a:	0e 9c       	mov	r12,r7
80005c5c:	e0 a0 09 22 	rcall	80006ea0 <__lshift>
80005c60:	18 94       	mov	r4,r12
80005c62:	40 6b       	lddsp	r11,sp[0x18]
80005c64:	58 0b       	cp.w	r11,0
80005c66:	c0 31       	brne	80005c6c <_dtoa_r+0x9a4>
80005c68:	08 9c       	mov	r12,r4
80005c6a:	c1 38       	rjmp	80005c90 <_dtoa_r+0x9c8>
80005c6c:	68 1b       	ld.w	r11,r4[0x4]
80005c6e:	0e 9c       	mov	r12,r7
80005c70:	e0 a0 08 28 	rcall	80006cc0 <_Balloc>
80005c74:	68 4a       	ld.w	r10,r4[0x10]
80005c76:	18 95       	mov	r5,r12
80005c78:	e8 cb ff f4 	sub	r11,r4,-12
80005c7c:	2f ea       	sub	r10,-2
80005c7e:	2f 4c       	sub	r12,-12
80005c80:	a3 6a       	lsl	r10,0x2
80005c82:	fe b0 e8 3f 	rcall	80002d00 <memcpy>
80005c86:	0a 9b       	mov	r11,r5
80005c88:	30 1a       	mov	r10,1
80005c8a:	0e 9c       	mov	r12,r7
80005c8c:	e0 a0 09 0a 	rcall	80006ea0 <__lshift>
80005c90:	50 44       	stdsp	sp[0x10],r4
80005c92:	40 3a       	lddsp	r10,sp[0xc]
80005c94:	30 19       	mov	r9,1
80005c96:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
80005c9a:	18 94       	mov	r4,r12
80005c9c:	50 da       	stdsp	sp[0x34],r10
80005c9e:	40 85       	lddsp	r5,sp[0x20]
80005ca0:	50 99       	stdsp	sp[0x24],r9
80005ca2:	50 26       	stdsp	sp[0x8],r6
80005ca4:	50 e1       	stdsp	sp[0x38],r1
80005ca6:	04 9b       	mov	r11,r2
80005ca8:	06 9c       	mov	r12,r3
80005caa:	fe b0 fa 7f 	rcall	800051a8 <quorem>
80005cae:	40 4b       	lddsp	r11,sp[0x10]
80005cb0:	f8 c0 ff d0 	sub	r0,r12,-48
80005cb4:	06 9c       	mov	r12,r3
80005cb6:	e0 a0 07 d1 	rcall	80006c58 <__mcmp>
80005cba:	08 9a       	mov	r10,r4
80005cbc:	50 6c       	stdsp	sp[0x18],r12
80005cbe:	04 9b       	mov	r11,r2
80005cc0:	0e 9c       	mov	r12,r7
80005cc2:	e0 a0 08 87 	rcall	80006dd0 <__mdiff>
80005cc6:	18 91       	mov	r1,r12
80005cc8:	78 38       	ld.w	r8,r12[0xc]
80005cca:	58 08       	cp.w	r8,0
80005ccc:	c0 30       	breq	80005cd2 <_dtoa_r+0xa0a>
80005cce:	30 16       	mov	r6,1
80005cd0:	c0 68       	rjmp	80005cdc <_dtoa_r+0xa14>
80005cd2:	18 9b       	mov	r11,r12
80005cd4:	06 9c       	mov	r12,r3
80005cd6:	e0 a0 07 c1 	rcall	80006c58 <__mcmp>
80005cda:	18 96       	mov	r6,r12
80005cdc:	0e 9c       	mov	r12,r7
80005cde:	02 9b       	mov	r11,r1
80005ce0:	e0 a0 07 d6 	rcall	80006c8c <_Bfree>
80005ce4:	40 cc       	lddsp	r12,sp[0x30]
80005ce6:	ed ec 10 08 	or	r8,r6,r12
80005cea:	c0 d1       	brne	80005d04 <_dtoa_r+0xa3c>
80005cec:	40 db       	lddsp	r11,sp[0x34]
80005cee:	58 0b       	cp.w	r11,0
80005cf0:	c0 a1       	brne	80005d04 <_dtoa_r+0xa3c>
80005cf2:	40 26       	lddsp	r6,sp[0x8]
80005cf4:	e0 40 00 39 	cp.w	r0,57
80005cf8:	c3 00       	breq	80005d58 <_dtoa_r+0xa90>
80005cfa:	40 6a       	lddsp	r10,sp[0x18]
80005cfc:	58 0a       	cp.w	r10,0
80005cfe:	e0 89 00 24 	brgt	80005d46 <_dtoa_r+0xa7e>
80005d02:	c2 f8       	rjmp	80005d60 <_dtoa_r+0xa98>
80005d04:	40 69       	lddsp	r9,sp[0x18]
80005d06:	58 09       	cp.w	r9,0
80005d08:	c0 85       	brlt	80005d18 <_dtoa_r+0xa50>
80005d0a:	12 98       	mov	r8,r9
80005d0c:	40 cc       	lddsp	r12,sp[0x30]
80005d0e:	18 48       	or	r8,r12
80005d10:	c1 d1       	brne	80005d4a <_dtoa_r+0xa82>
80005d12:	40 db       	lddsp	r11,sp[0x34]
80005d14:	58 0b       	cp.w	r11,0
80005d16:	c1 a1       	brne	80005d4a <_dtoa_r+0xa82>
80005d18:	0c 99       	mov	r9,r6
80005d1a:	40 26       	lddsp	r6,sp[0x8]
80005d1c:	58 09       	cp.w	r9,0
80005d1e:	e0 8a 00 21 	brle	80005d60 <_dtoa_r+0xa98>
80005d22:	06 9b       	mov	r11,r3
80005d24:	30 1a       	mov	r10,1
80005d26:	0e 9c       	mov	r12,r7
80005d28:	e0 a0 08 bc 	rcall	80006ea0 <__lshift>
80005d2c:	04 9b       	mov	r11,r2
80005d2e:	18 93       	mov	r3,r12
80005d30:	e0 a0 07 94 	rcall	80006c58 <__mcmp>
80005d34:	e0 89 00 06 	brgt	80005d40 <_dtoa_r+0xa78>
80005d38:	c1 41       	brne	80005d60 <_dtoa_r+0xa98>
80005d3a:	ed b0 00 00 	bld	r0,0x0
80005d3e:	c1 11       	brne	80005d60 <_dtoa_r+0xa98>
80005d40:	e0 40 00 39 	cp.w	r0,57
80005d44:	c0 a0       	breq	80005d58 <_dtoa_r+0xa90>
80005d46:	2f f0       	sub	r0,-1
80005d48:	c0 c8       	rjmp	80005d60 <_dtoa_r+0xa98>
80005d4a:	58 06       	cp.w	r6,0
80005d4c:	e0 8a 00 0c 	brle	80005d64 <_dtoa_r+0xa9c>
80005d50:	40 26       	lddsp	r6,sp[0x8]
80005d52:	e0 40 00 39 	cp.w	r0,57
80005d56:	c0 41       	brne	80005d5e <_dtoa_r+0xa96>
80005d58:	33 98       	mov	r8,57
80005d5a:	0a c8       	st.b	r5++,r8
80005d5c:	c6 78       	rjmp	80005e2a <_dtoa_r+0xb62>
80005d5e:	2f f0       	sub	r0,-1
80005d60:	0a c0       	st.b	r5++,r0
80005d62:	c7 58       	rjmp	80005e4c <_dtoa_r+0xb84>
80005d64:	0a c0       	st.b	r5++,r0
80005d66:	40 9a       	lddsp	r10,sp[0x24]
80005d68:	40 e9       	lddsp	r9,sp[0x38]
80005d6a:	12 3a       	cp.w	r10,r9
80005d6c:	c4 30       	breq	80005df2 <_dtoa_r+0xb2a>
80005d6e:	06 9b       	mov	r11,r3
80005d70:	30 09       	mov	r9,0
80005d72:	30 aa       	mov	r10,10
80005d74:	0e 9c       	mov	r12,r7
80005d76:	e0 a0 09 61 	rcall	80007038 <__multadd>
80005d7a:	40 48       	lddsp	r8,sp[0x10]
80005d7c:	18 93       	mov	r3,r12
80005d7e:	08 38       	cp.w	r8,r4
80005d80:	c0 91       	brne	80005d92 <_dtoa_r+0xaca>
80005d82:	10 9b       	mov	r11,r8
80005d84:	30 09       	mov	r9,0
80005d86:	30 aa       	mov	r10,10
80005d88:	0e 9c       	mov	r12,r7
80005d8a:	e0 a0 09 57 	rcall	80007038 <__multadd>
80005d8e:	50 4c       	stdsp	sp[0x10],r12
80005d90:	c0 e8       	rjmp	80005dac <_dtoa_r+0xae4>
80005d92:	40 4b       	lddsp	r11,sp[0x10]
80005d94:	30 09       	mov	r9,0
80005d96:	30 aa       	mov	r10,10
80005d98:	0e 9c       	mov	r12,r7
80005d9a:	e0 a0 09 4f 	rcall	80007038 <__multadd>
80005d9e:	08 9b       	mov	r11,r4
80005da0:	50 4c       	stdsp	sp[0x10],r12
80005da2:	30 09       	mov	r9,0
80005da4:	30 aa       	mov	r10,10
80005da6:	0e 9c       	mov	r12,r7
80005da8:	e0 a0 09 48 	rcall	80007038 <__multadd>
80005dac:	18 94       	mov	r4,r12
80005dae:	40 9c       	lddsp	r12,sp[0x24]
80005db0:	2f fc       	sub	r12,-1
80005db2:	50 9c       	stdsp	sp[0x24],r12
80005db4:	c7 9b       	rjmp	80005ca6 <_dtoa_r+0x9de>
80005db6:	30 18       	mov	r8,1
80005db8:	06 90       	mov	r0,r3
80005dba:	40 85       	lddsp	r5,sp[0x20]
80005dbc:	08 93       	mov	r3,r4
80005dbe:	0c 94       	mov	r4,r6
80005dc0:	10 96       	mov	r6,r8
80005dc2:	04 9b       	mov	r11,r2
80005dc4:	00 9c       	mov	r12,r0
80005dc6:	fe b0 f9 f1 	rcall	800051a8 <quorem>
80005dca:	2d 0c       	sub	r12,-48
80005dcc:	0a cc       	st.b	r5++,r12
80005dce:	02 36       	cp.w	r6,r1
80005dd0:	c0 a4       	brge	80005de4 <_dtoa_r+0xb1c>
80005dd2:	00 9b       	mov	r11,r0
80005dd4:	30 09       	mov	r9,0
80005dd6:	30 aa       	mov	r10,10
80005dd8:	0e 9c       	mov	r12,r7
80005dda:	2f f6       	sub	r6,-1
80005ddc:	e0 a0 09 2e 	rcall	80007038 <__multadd>
80005de0:	18 90       	mov	r0,r12
80005de2:	cf 0b       	rjmp	80005dc2 <_dtoa_r+0xafa>
80005de4:	08 96       	mov	r6,r4
80005de6:	30 0b       	mov	r11,0
80005de8:	06 94       	mov	r4,r3
80005dea:	50 4b       	stdsp	sp[0x10],r11
80005dec:	00 93       	mov	r3,r0
80005dee:	18 90       	mov	r0,r12
80005df0:	c0 28       	rjmp	80005df4 <_dtoa_r+0xb2c>
80005df2:	40 26       	lddsp	r6,sp[0x8]
80005df4:	06 9b       	mov	r11,r3
80005df6:	30 1a       	mov	r10,1
80005df8:	0e 9c       	mov	r12,r7
80005dfa:	e0 a0 08 53 	rcall	80006ea0 <__lshift>
80005dfe:	04 9b       	mov	r11,r2
80005e00:	18 93       	mov	r3,r12
80005e02:	e0 a0 07 2b 	rcall	80006c58 <__mcmp>
80005e06:	e0 89 00 12 	brgt	80005e2a <_dtoa_r+0xb62>
80005e0a:	c1 b1       	brne	80005e40 <_dtoa_r+0xb78>
80005e0c:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
80005e10:	c0 d1       	brne	80005e2a <_dtoa_r+0xb62>
80005e12:	c1 78       	rjmp	80005e40 <_dtoa_r+0xb78>
80005e14:	40 89       	lddsp	r9,sp[0x20]
80005e16:	12 38       	cp.w	r8,r9
80005e18:	c0 30       	breq	80005e1e <_dtoa_r+0xb56>
80005e1a:	10 95       	mov	r5,r8
80005e1c:	c0 88       	rjmp	80005e2c <_dtoa_r+0xb64>
80005e1e:	2f f6       	sub	r6,-1
80005e20:	50 66       	stdsp	sp[0x18],r6
80005e22:	33 18       	mov	r8,49
80005e24:	40 8c       	lddsp	r12,sp[0x20]
80005e26:	b8 88       	st.b	r12[0x0],r8
80005e28:	c1 38       	rjmp	80005e4e <_dtoa_r+0xb86>
80005e2a:	33 9a       	mov	r10,57
80005e2c:	0a 98       	mov	r8,r5
80005e2e:	11 79       	ld.ub	r9,--r8
80005e30:	f4 09 18 00 	cp.b	r9,r10
80005e34:	cf 00       	breq	80005e14 <_dtoa_r+0xb4c>
80005e36:	2f f9       	sub	r9,-1
80005e38:	b0 89       	st.b	r8[0x0],r9
80005e3a:	c0 98       	rjmp	80005e4c <_dtoa_r+0xb84>
80005e3c:	10 95       	mov	r5,r8
80005e3e:	c0 28       	rjmp	80005e42 <_dtoa_r+0xb7a>
80005e40:	33 09       	mov	r9,48
80005e42:	0a 98       	mov	r8,r5
80005e44:	11 7a       	ld.ub	r10,--r8
80005e46:	f2 0a 18 00 	cp.b	r10,r9
80005e4a:	cf 90       	breq	80005e3c <_dtoa_r+0xb74>
80005e4c:	50 66       	stdsp	sp[0x18],r6
80005e4e:	04 9b       	mov	r11,r2
80005e50:	0e 9c       	mov	r12,r7
80005e52:	e0 a0 07 1d 	rcall	80006c8c <_Bfree>
80005e56:	58 04       	cp.w	r4,0
80005e58:	c1 20       	breq	80005e7c <_dtoa_r+0xbb4>
80005e5a:	40 4b       	lddsp	r11,sp[0x10]
80005e5c:	08 3b       	cp.w	r11,r4
80005e5e:	5f 19       	srne	r9
80005e60:	58 0b       	cp.w	r11,0
80005e62:	5f 18       	srne	r8
80005e64:	f3 e8 00 08 	and	r8,r9,r8
80005e68:	c0 40       	breq	80005e70 <_dtoa_r+0xba8>
80005e6a:	0e 9c       	mov	r12,r7
80005e6c:	e0 a0 07 10 	rcall	80006c8c <_Bfree>
80005e70:	08 9b       	mov	r11,r4
80005e72:	0e 9c       	mov	r12,r7
80005e74:	e0 a0 07 0c 	rcall	80006c8c <_Bfree>
80005e78:	c0 28       	rjmp	80005e7c <_dtoa_r+0xbb4>
80005e7a:	50 66       	stdsp	sp[0x18],r6
80005e7c:	0e 9c       	mov	r12,r7
80005e7e:	06 9b       	mov	r11,r3
80005e80:	e0 a0 07 06 	rcall	80006c8c <_Bfree>
80005e84:	30 08       	mov	r8,0
80005e86:	aa 88       	st.b	r5[0x0],r8
80005e88:	40 68       	lddsp	r8,sp[0x18]
80005e8a:	41 5a       	lddsp	r10,sp[0x54]
80005e8c:	2f f8       	sub	r8,-1
80005e8e:	41 29       	lddsp	r9,sp[0x48]
80005e90:	95 08       	st.w	r10[0x0],r8
80005e92:	40 8c       	lddsp	r12,sp[0x20]
80005e94:	58 09       	cp.w	r9,0
80005e96:	fb f8 10 12 	ld.wne	r8,sp[0x48]
80005e9a:	f1 f5 1a 00 	st.wne	r8[0x0],r5
80005e9e:	2e 6d       	sub	sp,-104
80005ea0:	d8 32       	popm	r0-r7,pc
80005ea2:	d7 03       	nop

80005ea4 <_fflush_r>:
80005ea4:	d4 21       	pushm	r4-r7,lr
80005ea6:	16 97       	mov	r7,r11
80005ea8:	18 96       	mov	r6,r12
80005eaa:	76 48       	ld.w	r8,r11[0x10]
80005eac:	58 08       	cp.w	r8,0
80005eae:	c7 f0       	breq	80005fac <_fflush_r+0x108>
80005eb0:	58 0c       	cp.w	r12,0
80005eb2:	c0 50       	breq	80005ebc <_fflush_r+0x18>
80005eb4:	78 68       	ld.w	r8,r12[0x18]
80005eb6:	58 08       	cp.w	r8,0
80005eb8:	c0 21       	brne	80005ebc <_fflush_r+0x18>
80005eba:	cc dc       	rcall	80006054 <__sinit>
80005ebc:	fe c8 d1 64 	sub	r8,pc,-11932
80005ec0:	10 37       	cp.w	r7,r8
80005ec2:	c0 31       	brne	80005ec8 <_fflush_r+0x24>
80005ec4:	6c 07       	ld.w	r7,r6[0x0]
80005ec6:	c0 c8       	rjmp	80005ede <_fflush_r+0x3a>
80005ec8:	fe c8 d1 50 	sub	r8,pc,-11952
80005ecc:	10 37       	cp.w	r7,r8
80005ece:	c0 31       	brne	80005ed4 <_fflush_r+0x30>
80005ed0:	6c 17       	ld.w	r7,r6[0x4]
80005ed2:	c0 68       	rjmp	80005ede <_fflush_r+0x3a>
80005ed4:	fe c8 d1 3c 	sub	r8,pc,-11972
80005ed8:	10 37       	cp.w	r7,r8
80005eda:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80005ede:	8e 6a       	ld.sh	r10,r7[0xc]
80005ee0:	14 98       	mov	r8,r10
80005ee2:	ed ba 00 03 	bld	r10,0x3
80005ee6:	c4 20       	breq	80005f6a <_fflush_r+0xc6>
80005ee8:	ab ba       	sbr	r10,0xb
80005eea:	ae 6a       	st.h	r7[0xc],r10
80005eec:	6e 18       	ld.w	r8,r7[0x4]
80005eee:	58 08       	cp.w	r8,0
80005ef0:	e0 89 00 06 	brgt	80005efc <_fflush_r+0x58>
80005ef4:	6f 08       	ld.w	r8,r7[0x40]
80005ef6:	58 08       	cp.w	r8,0
80005ef8:	e0 8a 00 5a 	brle	80005fac <_fflush_r+0x108>
80005efc:	6e b8       	ld.w	r8,r7[0x2c]
80005efe:	58 08       	cp.w	r8,0
80005f00:	c5 60       	breq	80005fac <_fflush_r+0x108>
80005f02:	e2 1a 10 00 	andl	r10,0x1000,COH
80005f06:	c0 30       	breq	80005f0c <_fflush_r+0x68>
80005f08:	6f 55       	ld.w	r5,r7[0x54]
80005f0a:	c0 f8       	rjmp	80005f28 <_fflush_r+0x84>
80005f0c:	30 19       	mov	r9,1
80005f0e:	6e 8b       	ld.w	r11,r7[0x20]
80005f10:	0c 9c       	mov	r12,r6
80005f12:	5d 18       	icall	r8
80005f14:	18 95       	mov	r5,r12
80005f16:	5b fc       	cp.w	r12,-1
80005f18:	c0 81       	brne	80005f28 <_fflush_r+0x84>
80005f1a:	6c 38       	ld.w	r8,r6[0xc]
80005f1c:	59 d8       	cp.w	r8,29
80005f1e:	c4 70       	breq	80005fac <_fflush_r+0x108>
80005f20:	8e 68       	ld.sh	r8,r7[0xc]
80005f22:	a7 a8       	sbr	r8,0x6
80005f24:	ae 68       	st.h	r7[0xc],r8
80005f26:	d8 22       	popm	r4-r7,pc
80005f28:	8e 68       	ld.sh	r8,r7[0xc]
80005f2a:	ed b8 00 02 	bld	r8,0x2
80005f2e:	c0 91       	brne	80005f40 <_fflush_r+0x9c>
80005f30:	6e 18       	ld.w	r8,r7[0x4]
80005f32:	10 15       	sub	r5,r8
80005f34:	6e d8       	ld.w	r8,r7[0x34]
80005f36:	58 08       	cp.w	r8,0
80005f38:	ef f8 10 10 	ld.wne	r8,r7[0x40]
80005f3c:	eb d8 e1 15 	subne	r5,r5,r8
80005f40:	6e b8       	ld.w	r8,r7[0x2c]
80005f42:	0c 9c       	mov	r12,r6
80005f44:	30 09       	mov	r9,0
80005f46:	0a 9a       	mov	r10,r5
80005f48:	6e 8b       	ld.w	r11,r7[0x20]
80005f4a:	5d 18       	icall	r8
80005f4c:	8e 68       	ld.sh	r8,r7[0xc]
80005f4e:	0a 3c       	cp.w	r12,r5
80005f50:	c2 61       	brne	80005f9c <_fflush_r+0xf8>
80005f52:	ab d8       	cbr	r8,0xb
80005f54:	30 0c       	mov	r12,0
80005f56:	6e 49       	ld.w	r9,r7[0x10]
80005f58:	ae 68       	st.h	r7[0xc],r8
80005f5a:	8f 1c       	st.w	r7[0x4],r12
80005f5c:	8f 09       	st.w	r7[0x0],r9
80005f5e:	ed b8 00 0c 	bld	r8,0xc
80005f62:	c2 51       	brne	80005fac <_fflush_r+0x108>
80005f64:	ef 45 00 54 	st.w	r7[84],r5
80005f68:	d8 22       	popm	r4-r7,pc
80005f6a:	6e 45       	ld.w	r5,r7[0x10]
80005f6c:	58 05       	cp.w	r5,0
80005f6e:	c1 f0       	breq	80005fac <_fflush_r+0x108>
80005f70:	6e 04       	ld.w	r4,r7[0x0]
80005f72:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
80005f76:	8f 05       	st.w	r7[0x0],r5
80005f78:	f9 b8 01 00 	movne	r8,0
80005f7c:	ef f8 00 05 	ld.weq	r8,r7[0x14]
80005f80:	0a 14       	sub	r4,r5
80005f82:	8f 28       	st.w	r7[0x8],r8
80005f84:	c1 18       	rjmp	80005fa6 <_fflush_r+0x102>
80005f86:	08 99       	mov	r9,r4
80005f88:	0a 9a       	mov	r10,r5
80005f8a:	6e a8       	ld.w	r8,r7[0x28]
80005f8c:	6e 8b       	ld.w	r11,r7[0x20]
80005f8e:	0c 9c       	mov	r12,r6
80005f90:	5d 18       	icall	r8
80005f92:	18 14       	sub	r4,r12
80005f94:	58 0c       	cp.w	r12,0
80005f96:	e0 89 00 07 	brgt	80005fa4 <_fflush_r+0x100>
80005f9a:	8e 68       	ld.sh	r8,r7[0xc]
80005f9c:	a7 a8       	sbr	r8,0x6
80005f9e:	3f fc       	mov	r12,-1
80005fa0:	ae 68       	st.h	r7[0xc],r8
80005fa2:	d8 22       	popm	r4-r7,pc
80005fa4:	18 05       	add	r5,r12
80005fa6:	58 04       	cp.w	r4,0
80005fa8:	fe 99 ff ef 	brgt	80005f86 <_fflush_r+0xe2>
80005fac:	d8 2a       	popm	r4-r7,pc,r12=0
80005fae:	d7 03       	nop

80005fb0 <__sfp_lock_acquire>:
80005fb0:	5e fc       	retal	r12

80005fb2 <__sfp_lock_release>:
80005fb2:	5e fc       	retal	r12

80005fb4 <_cleanup_r>:
80005fb4:	d4 01       	pushm	lr
80005fb6:	fe cb e8 6a 	sub	r11,pc,-6038
80005fba:	e0 a0 02 fd 	rcall	800065b4 <_fwalk>
80005fbe:	d8 02       	popm	pc

80005fc0 <__sfmoreglue>:
80005fc0:	d4 21       	pushm	r4-r7,lr
80005fc2:	16 95       	mov	r5,r11
80005fc4:	f6 06 10 5c 	mul	r6,r11,92
80005fc8:	ec cb ff f4 	sub	r11,r6,-12
80005fcc:	e0 a0 03 84 	rcall	800066d4 <_malloc_r>
80005fd0:	18 97       	mov	r7,r12
80005fd2:	c0 90       	breq	80005fe4 <__sfmoreglue+0x24>
80005fd4:	99 15       	st.w	r12[0x4],r5
80005fd6:	30 0b       	mov	r11,0
80005fd8:	2f 4c       	sub	r12,-12
80005fda:	0c 9a       	mov	r10,r6
80005fdc:	8f 2c       	st.w	r7[0x8],r12
80005fde:	8f 0b       	st.w	r7[0x0],r11
80005fe0:	e0 a0 05 bc 	rcall	80006b58 <memset>
80005fe4:	0e 9c       	mov	r12,r7
80005fe6:	d8 22       	popm	r4-r7,pc

80005fe8 <__sfp>:
80005fe8:	d4 21       	pushm	r4-r7,lr
80005fea:	fe c8 d6 7a 	sub	r8,pc,-10630
80005fee:	18 96       	mov	r6,r12
80005ff0:	70 07       	ld.w	r7,r8[0x0]
80005ff2:	6e 68       	ld.w	r8,r7[0x18]
80005ff4:	58 08       	cp.w	r8,0
80005ff6:	c0 31       	brne	80005ffc <__sfp+0x14>
80005ff8:	0e 9c       	mov	r12,r7
80005ffa:	c2 dc       	rcall	80006054 <__sinit>
80005ffc:	ee c7 ff 28 	sub	r7,r7,-216
80006000:	30 05       	mov	r5,0
80006002:	6e 2c       	ld.w	r12,r7[0x8]
80006004:	6e 18       	ld.w	r8,r7[0x4]
80006006:	c0 68       	rjmp	80006012 <__sfp+0x2a>
80006008:	98 69       	ld.sh	r9,r12[0xc]
8000600a:	ea 09 19 00 	cp.h	r9,r5
8000600e:	c1 10       	breq	80006030 <__sfp+0x48>
80006010:	2a 4c       	sub	r12,-92
80006012:	20 18       	sub	r8,1
80006014:	cf a7       	brpl	80006008 <__sfp+0x20>
80006016:	6e 08       	ld.w	r8,r7[0x0]
80006018:	58 08       	cp.w	r8,0
8000601a:	c0 61       	brne	80006026 <__sfp+0x3e>
8000601c:	30 4b       	mov	r11,4
8000601e:	0c 9c       	mov	r12,r6
80006020:	cd 0f       	rcall	80005fc0 <__sfmoreglue>
80006022:	8f 0c       	st.w	r7[0x0],r12
80006024:	c0 30       	breq	8000602a <__sfp+0x42>
80006026:	6e 07       	ld.w	r7,r7[0x0]
80006028:	ce db       	rjmp	80006002 <__sfp+0x1a>
8000602a:	30 c8       	mov	r8,12
8000602c:	8d 38       	st.w	r6[0xc],r8
8000602e:	d8 22       	popm	r4-r7,pc
80006030:	30 08       	mov	r8,0
80006032:	f9 48 00 4c 	st.w	r12[76],r8
80006036:	99 08       	st.w	r12[0x0],r8
80006038:	99 28       	st.w	r12[0x8],r8
8000603a:	99 18       	st.w	r12[0x4],r8
8000603c:	99 48       	st.w	r12[0x10],r8
8000603e:	99 58       	st.w	r12[0x14],r8
80006040:	99 68       	st.w	r12[0x18],r8
80006042:	99 d8       	st.w	r12[0x34],r8
80006044:	99 e8       	st.w	r12[0x38],r8
80006046:	f9 48 00 48 	st.w	r12[72],r8
8000604a:	3f f8       	mov	r8,-1
8000604c:	b8 78       	st.h	r12[0xe],r8
8000604e:	30 18       	mov	r8,1
80006050:	b8 68       	st.h	r12[0xc],r8
80006052:	d8 22       	popm	r4-r7,pc

80006054 <__sinit>:
80006054:	d4 21       	pushm	r4-r7,lr
80006056:	18 96       	mov	r6,r12
80006058:	78 67       	ld.w	r7,r12[0x18]
8000605a:	58 07       	cp.w	r7,0
8000605c:	c4 91       	brne	800060ee <__sinit+0x9a>
8000605e:	fe c8 00 aa 	sub	r8,pc,170
80006062:	30 15       	mov	r5,1
80006064:	99 a8       	st.w	r12[0x28],r8
80006066:	f9 47 00 d8 	st.w	r12[216],r7
8000606a:	f9 47 00 dc 	st.w	r12[220],r7
8000606e:	f9 47 00 e0 	st.w	r12[224],r7
80006072:	99 65       	st.w	r12[0x18],r5
80006074:	cb af       	rcall	80005fe8 <__sfp>
80006076:	8d 0c       	st.w	r6[0x0],r12
80006078:	0c 9c       	mov	r12,r6
8000607a:	cb 7f       	rcall	80005fe8 <__sfp>
8000607c:	8d 1c       	st.w	r6[0x4],r12
8000607e:	0c 9c       	mov	r12,r6
80006080:	cb 4f       	rcall	80005fe8 <__sfp>
80006082:	6c 09       	ld.w	r9,r6[0x0]
80006084:	30 48       	mov	r8,4
80006086:	93 07       	st.w	r9[0x0],r7
80006088:	b2 68       	st.h	r9[0xc],r8
8000608a:	93 17       	st.w	r9[0x4],r7
8000608c:	93 27       	st.w	r9[0x8],r7
8000608e:	6c 18       	ld.w	r8,r6[0x4]
80006090:	b2 77       	st.h	r9[0xe],r7
80006092:	93 47       	st.w	r9[0x10],r7
80006094:	93 57       	st.w	r9[0x14],r7
80006096:	93 67       	st.w	r9[0x18],r7
80006098:	93 89       	st.w	r9[0x20],r9
8000609a:	91 07       	st.w	r8[0x0],r7
8000609c:	91 17       	st.w	r8[0x4],r7
8000609e:	91 27       	st.w	r8[0x8],r7
800060a0:	fe ce eb e4 	sub	lr,pc,-5148
800060a4:	fe cb ec 14 	sub	r11,pc,-5100
800060a8:	93 9e       	st.w	r9[0x24],lr
800060aa:	93 ab       	st.w	r9[0x28],r11
800060ac:	fe ca ec 3c 	sub	r10,pc,-5060
800060b0:	fe c4 ec 48 	sub	r4,pc,-5048
800060b4:	93 ba       	st.w	r9[0x2c],r10
800060b6:	93 c4       	st.w	r9[0x30],r4
800060b8:	30 99       	mov	r9,9
800060ba:	b0 69       	st.h	r8[0xc],r9
800060bc:	b0 75       	st.h	r8[0xe],r5
800060be:	91 c4       	st.w	r8[0x30],r4
800060c0:	91 47       	st.w	r8[0x10],r7
800060c2:	91 57       	st.w	r8[0x14],r7
800060c4:	91 67       	st.w	r8[0x18],r7
800060c6:	91 88       	st.w	r8[0x20],r8
800060c8:	91 9e       	st.w	r8[0x24],lr
800060ca:	91 ab       	st.w	r8[0x28],r11
800060cc:	91 ba       	st.w	r8[0x2c],r10
800060ce:	8d 2c       	st.w	r6[0x8],r12
800060d0:	31 28       	mov	r8,18
800060d2:	99 07       	st.w	r12[0x0],r7
800060d4:	b8 68       	st.h	r12[0xc],r8
800060d6:	99 17       	st.w	r12[0x4],r7
800060d8:	99 27       	st.w	r12[0x8],r7
800060da:	30 28       	mov	r8,2
800060dc:	b8 78       	st.h	r12[0xe],r8
800060de:	99 c4       	st.w	r12[0x30],r4
800060e0:	99 67       	st.w	r12[0x18],r7
800060e2:	99 9e       	st.w	r12[0x24],lr
800060e4:	99 ab       	st.w	r12[0x28],r11
800060e6:	99 ba       	st.w	r12[0x2c],r10
800060e8:	99 47       	st.w	r12[0x10],r7
800060ea:	99 57       	st.w	r12[0x14],r7
800060ec:	99 8c       	st.w	r12[0x20],r12
800060ee:	d8 22       	popm	r4-r7,pc

800060f0 <_malloc_trim_r>:
800060f0:	d4 21       	pushm	r4-r7,lr
800060f2:	16 95       	mov	r5,r11
800060f4:	18 97       	mov	r7,r12
800060f6:	e0 a0 05 38 	rcall	80006b66 <__malloc_lock>
800060fa:	e0 64 01 00 	mov	r4,256
800060fe:	68 28       	ld.w	r8,r4[0x8]
80006100:	70 16       	ld.w	r6,r8[0x4]
80006102:	e0 16 ff fc 	andl	r6,0xfffc
80006106:	ec c8 ff 91 	sub	r8,r6,-111
8000610a:	f0 05 01 05 	sub	r5,r8,r5
8000610e:	e0 15 ff 80 	andl	r5,0xff80
80006112:	ea c5 00 80 	sub	r5,r5,128
80006116:	e0 45 00 7f 	cp.w	r5,127
8000611a:	e0 8a 00 25 	brle	80006164 <_malloc_trim_r+0x74>
8000611e:	30 0b       	mov	r11,0
80006120:	0e 9c       	mov	r12,r7
80006122:	e0 a0 09 93 	rcall	80007448 <_sbrk_r>
80006126:	68 28       	ld.w	r8,r4[0x8]
80006128:	0c 08       	add	r8,r6
8000612a:	10 3c       	cp.w	r12,r8
8000612c:	c1 c1       	brne	80006164 <_malloc_trim_r+0x74>
8000612e:	ea 0b 11 00 	rsub	r11,r5,0
80006132:	0e 9c       	mov	r12,r7
80006134:	e0 a0 09 8a 	rcall	80007448 <_sbrk_r>
80006138:	5b fc       	cp.w	r12,-1
8000613a:	c1 91       	brne	8000616c <_malloc_trim_r+0x7c>
8000613c:	30 0b       	mov	r11,0
8000613e:	0e 9c       	mov	r12,r7
80006140:	e0 a0 09 84 	rcall	80007448 <_sbrk_r>
80006144:	68 28       	ld.w	r8,r4[0x8]
80006146:	f8 08 01 09 	sub	r9,r12,r8
8000614a:	58 f9       	cp.w	r9,15
8000614c:	e0 8a 00 0c 	brle	80006164 <_malloc_trim_r+0x74>
80006150:	a1 a9       	sbr	r9,0x0
80006152:	91 19       	st.w	r8[0x4],r9
80006154:	e0 68 05 0c 	mov	r8,1292
80006158:	70 09       	ld.w	r9,r8[0x0]
8000615a:	e0 68 06 30 	mov	r8,1584
8000615e:	f8 09 01 09 	sub	r9,r12,r9
80006162:	91 09       	st.w	r8[0x0],r9
80006164:	0e 9c       	mov	r12,r7
80006166:	e0 a0 05 01 	rcall	80006b68 <__malloc_unlock>
8000616a:	d8 2a       	popm	r4-r7,pc,r12=0
8000616c:	68 28       	ld.w	r8,r4[0x8]
8000616e:	0a 16       	sub	r6,r5
80006170:	a1 a6       	sbr	r6,0x0
80006172:	91 16       	st.w	r8[0x4],r6
80006174:	e0 68 06 30 	mov	r8,1584
80006178:	70 09       	ld.w	r9,r8[0x0]
8000617a:	0a 19       	sub	r9,r5
8000617c:	0e 9c       	mov	r12,r7
8000617e:	91 09       	st.w	r8[0x0],r9
80006180:	e0 a0 04 f4 	rcall	80006b68 <__malloc_unlock>
80006184:	da 2a       	popm	r4-r7,pc,r12=1
80006186:	d7 03       	nop

80006188 <_free_r>:
80006188:	d4 21       	pushm	r4-r7,lr
8000618a:	16 96       	mov	r6,r11
8000618c:	18 97       	mov	r7,r12
8000618e:	58 0b       	cp.w	r11,0
80006190:	e0 80 00 c0 	breq	80006310 <_free_r+0x188>
80006194:	e0 a0 04 e9 	rcall	80006b66 <__malloc_lock>
80006198:	20 86       	sub	r6,8
8000619a:	e0 6a 01 00 	mov	r10,256
8000619e:	6c 18       	ld.w	r8,r6[0x4]
800061a0:	74 2e       	ld.w	lr,r10[0x8]
800061a2:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
800061a6:	a1 c8       	cbr	r8,0x0
800061a8:	ec 08 00 09 	add	r9,r6,r8
800061ac:	72 1b       	ld.w	r11,r9[0x4]
800061ae:	e0 1b ff fc 	andl	r11,0xfffc
800061b2:	1c 39       	cp.w	r9,lr
800061b4:	c1 e1       	brne	800061f0 <_free_r+0x68>
800061b6:	f6 08 00 08 	add	r8,r11,r8
800061ba:	58 0c       	cp.w	r12,0
800061bc:	c0 81       	brne	800061cc <_free_r+0x44>
800061be:	6c 09       	ld.w	r9,r6[0x0]
800061c0:	12 16       	sub	r6,r9
800061c2:	12 08       	add	r8,r9
800061c4:	6c 3b       	ld.w	r11,r6[0xc]
800061c6:	6c 29       	ld.w	r9,r6[0x8]
800061c8:	97 29       	st.w	r11[0x8],r9
800061ca:	93 3b       	st.w	r9[0xc],r11
800061cc:	10 99       	mov	r9,r8
800061ce:	95 26       	st.w	r10[0x8],r6
800061d0:	a1 a9       	sbr	r9,0x0
800061d2:	8d 19       	st.w	r6[0x4],r9
800061d4:	e0 69 05 08 	mov	r9,1288
800061d8:	72 09       	ld.w	r9,r9[0x0]
800061da:	12 38       	cp.w	r8,r9
800061dc:	c0 63       	brcs	800061e8 <_free_r+0x60>
800061de:	e0 68 06 2c 	mov	r8,1580
800061e2:	0e 9c       	mov	r12,r7
800061e4:	70 0b       	ld.w	r11,r8[0x0]
800061e6:	c8 5f       	rcall	800060f0 <_malloc_trim_r>
800061e8:	0e 9c       	mov	r12,r7
800061ea:	e0 a0 04 bf 	rcall	80006b68 <__malloc_unlock>
800061ee:	d8 22       	popm	r4-r7,pc
800061f0:	93 1b       	st.w	r9[0x4],r11
800061f2:	58 0c       	cp.w	r12,0
800061f4:	c0 30       	breq	800061fa <_free_r+0x72>
800061f6:	30 0c       	mov	r12,0
800061f8:	c1 08       	rjmp	80006218 <_free_r+0x90>
800061fa:	6c 0e       	ld.w	lr,r6[0x0]
800061fc:	f4 c5 ff f8 	sub	r5,r10,-8
80006200:	1c 16       	sub	r6,lr
80006202:	1c 08       	add	r8,lr
80006204:	6c 2e       	ld.w	lr,r6[0x8]
80006206:	0a 3e       	cp.w	lr,r5
80006208:	f9 bc 00 01 	moveq	r12,1
8000620c:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80006210:	eb fe 1a 02 	st.wne	r5[0x8],lr
80006214:	fd f5 1a 03 	st.wne	lr[0xc],r5
80006218:	f2 0b 00 0e 	add	lr,r9,r11
8000621c:	7c 1e       	ld.w	lr,lr[0x4]
8000621e:	ed be 00 00 	bld	lr,0x0
80006222:	c1 40       	breq	8000624a <_free_r+0xc2>
80006224:	16 08       	add	r8,r11
80006226:	58 0c       	cp.w	r12,0
80006228:	c0 d1       	brne	80006242 <_free_r+0xba>
8000622a:	e0 6e 01 00 	mov	lr,256
8000622e:	72 2b       	ld.w	r11,r9[0x8]
80006230:	2f 8e       	sub	lr,-8
80006232:	1c 3b       	cp.w	r11,lr
80006234:	c0 71       	brne	80006242 <_free_r+0xba>
80006236:	97 36       	st.w	r11[0xc],r6
80006238:	97 26       	st.w	r11[0x8],r6
8000623a:	8d 2b       	st.w	r6[0x8],r11
8000623c:	8d 3b       	st.w	r6[0xc],r11
8000623e:	30 1c       	mov	r12,1
80006240:	c0 58       	rjmp	8000624a <_free_r+0xc2>
80006242:	72 2b       	ld.w	r11,r9[0x8]
80006244:	72 39       	ld.w	r9,r9[0xc]
80006246:	93 2b       	st.w	r9[0x8],r11
80006248:	97 39       	st.w	r11[0xc],r9
8000624a:	10 99       	mov	r9,r8
8000624c:	ec 08 09 08 	st.w	r6[r8],r8
80006250:	a1 a9       	sbr	r9,0x0
80006252:	8d 19       	st.w	r6[0x4],r9
80006254:	58 0c       	cp.w	r12,0
80006256:	c5 a1       	brne	8000630a <_free_r+0x182>
80006258:	e0 48 01 ff 	cp.w	r8,511
8000625c:	e0 8b 00 13 	brhi	80006282 <_free_r+0xfa>
80006260:	a3 98       	lsr	r8,0x3
80006262:	f4 08 00 39 	add	r9,r10,r8<<0x3
80006266:	72 2b       	ld.w	r11,r9[0x8]
80006268:	8d 39       	st.w	r6[0xc],r9
8000626a:	8d 2b       	st.w	r6[0x8],r11
8000626c:	97 36       	st.w	r11[0xc],r6
8000626e:	93 26       	st.w	r9[0x8],r6
80006270:	a3 48       	asr	r8,0x2
80006272:	74 19       	ld.w	r9,r10[0x4]
80006274:	30 1b       	mov	r11,1
80006276:	f6 08 09 48 	lsl	r8,r11,r8
8000627a:	f3 e8 10 08 	or	r8,r9,r8
8000627e:	95 18       	st.w	r10[0x4],r8
80006280:	c4 58       	rjmp	8000630a <_free_r+0x182>
80006282:	f0 0b 16 09 	lsr	r11,r8,0x9
80006286:	58 4b       	cp.w	r11,4
80006288:	e0 8b 00 06 	brhi	80006294 <_free_r+0x10c>
8000628c:	f0 0b 16 06 	lsr	r11,r8,0x6
80006290:	2c 8b       	sub	r11,-56
80006292:	c2 08       	rjmp	800062d2 <_free_r+0x14a>
80006294:	59 4b       	cp.w	r11,20
80006296:	e0 8b 00 04 	brhi	8000629e <_free_r+0x116>
8000629a:	2a 5b       	sub	r11,-91
8000629c:	c1 b8       	rjmp	800062d2 <_free_r+0x14a>
8000629e:	e0 4b 00 54 	cp.w	r11,84
800062a2:	e0 8b 00 06 	brhi	800062ae <_free_r+0x126>
800062a6:	f0 0b 16 0c 	lsr	r11,r8,0xc
800062aa:	29 2b       	sub	r11,-110
800062ac:	c1 38       	rjmp	800062d2 <_free_r+0x14a>
800062ae:	e0 4b 01 54 	cp.w	r11,340
800062b2:	e0 8b 00 06 	brhi	800062be <_free_r+0x136>
800062b6:	f0 0b 16 0f 	lsr	r11,r8,0xf
800062ba:	28 9b       	sub	r11,-119
800062bc:	c0 b8       	rjmp	800062d2 <_free_r+0x14a>
800062be:	e0 4b 05 54 	cp.w	r11,1364
800062c2:	e0 88 00 05 	brls	800062cc <_free_r+0x144>
800062c6:	37 eb       	mov	r11,126
800062c8:	c0 58       	rjmp	800062d2 <_free_r+0x14a>
800062ca:	d7 03       	nop
800062cc:	f0 0b 16 12 	lsr	r11,r8,0x12
800062d0:	28 4b       	sub	r11,-124
800062d2:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
800062d6:	78 29       	ld.w	r9,r12[0x8]
800062d8:	18 39       	cp.w	r9,r12
800062da:	c0 e1       	brne	800062f6 <_free_r+0x16e>
800062dc:	74 18       	ld.w	r8,r10[0x4]
800062de:	a3 4b       	asr	r11,0x2
800062e0:	30 1c       	mov	r12,1
800062e2:	f8 0b 09 4b 	lsl	r11,r12,r11
800062e6:	f1 eb 10 0b 	or	r11,r8,r11
800062ea:	12 98       	mov	r8,r9
800062ec:	95 1b       	st.w	r10[0x4],r11
800062ee:	c0 a8       	rjmp	80006302 <_free_r+0x17a>
800062f0:	72 29       	ld.w	r9,r9[0x8]
800062f2:	18 39       	cp.w	r9,r12
800062f4:	c0 60       	breq	80006300 <_free_r+0x178>
800062f6:	72 1a       	ld.w	r10,r9[0x4]
800062f8:	e0 1a ff fc 	andl	r10,0xfffc
800062fc:	14 38       	cp.w	r8,r10
800062fe:	cf 93       	brcs	800062f0 <_free_r+0x168>
80006300:	72 38       	ld.w	r8,r9[0xc]
80006302:	8d 38       	st.w	r6[0xc],r8
80006304:	8d 29       	st.w	r6[0x8],r9
80006306:	93 36       	st.w	r9[0xc],r6
80006308:	91 26       	st.w	r8[0x8],r6
8000630a:	0e 9c       	mov	r12,r7
8000630c:	e0 a0 04 2e 	rcall	80006b68 <__malloc_unlock>
80006310:	d8 22       	popm	r4-r7,pc
80006312:	d7 03       	nop

80006314 <__sfvwrite_r>:
80006314:	d4 31       	pushm	r0-r7,lr
80006316:	20 3d       	sub	sp,12
80006318:	14 94       	mov	r4,r10
8000631a:	18 95       	mov	r5,r12
8000631c:	16 97       	mov	r7,r11
8000631e:	74 28       	ld.w	r8,r10[0x8]
80006320:	58 08       	cp.w	r8,0
80006322:	e0 80 01 45 	breq	800065ac <__sfvwrite_r+0x298>
80006326:	96 68       	ld.sh	r8,r11[0xc]
80006328:	ed b8 00 03 	bld	r8,0x3
8000632c:	c0 41       	brne	80006334 <__sfvwrite_r+0x20>
8000632e:	76 48       	ld.w	r8,r11[0x10]
80006330:	58 08       	cp.w	r8,0
80006332:	c0 c1       	brne	8000634a <__sfvwrite_r+0x36>
80006334:	0e 9b       	mov	r11,r7
80006336:	0a 9c       	mov	r12,r5
80006338:	fe b0 f6 ca 	rcall	800050cc <__swsetup_r>
8000633c:	c0 70       	breq	8000634a <__sfvwrite_r+0x36>
8000633e:	8e 68       	ld.sh	r8,r7[0xc]
80006340:	a7 a8       	sbr	r8,0x6
80006342:	ae 68       	st.h	r7[0xc],r8
80006344:	30 98       	mov	r8,9
80006346:	8b 38       	st.w	r5[0xc],r8
80006348:	c3 09       	rjmp	800065a8 <__sfvwrite_r+0x294>
8000634a:	8e 63       	ld.sh	r3,r7[0xc]
8000634c:	68 00       	ld.w	r0,r4[0x0]
8000634e:	06 96       	mov	r6,r3
80006350:	e2 16 00 02 	andl	r6,0x2,COH
80006354:	c2 10       	breq	80006396 <__sfvwrite_r+0x82>
80006356:	30 03       	mov	r3,0
80006358:	e0 62 04 00 	mov	r2,1024
8000635c:	06 96       	mov	r6,r3
8000635e:	c0 48       	rjmp	80006366 <__sfvwrite_r+0x52>
80006360:	60 03       	ld.w	r3,r0[0x0]
80006362:	60 16       	ld.w	r6,r0[0x4]
80006364:	2f 80       	sub	r0,-8
80006366:	58 06       	cp.w	r6,0
80006368:	cf c0       	breq	80006360 <__sfvwrite_r+0x4c>
8000636a:	e0 46 04 00 	cp.w	r6,1024
8000636e:	ec 09 17 80 	movls	r9,r6
80006372:	e4 09 17 b0 	movhi	r9,r2
80006376:	06 9a       	mov	r10,r3
80006378:	6e a8       	ld.w	r8,r7[0x28]
8000637a:	6e 8b       	ld.w	r11,r7[0x20]
8000637c:	0a 9c       	mov	r12,r5
8000637e:	5d 18       	icall	r8
80006380:	18 16       	sub	r6,r12
80006382:	58 0c       	cp.w	r12,0
80006384:	e0 8a 01 0f 	brle	800065a2 <__sfvwrite_r+0x28e>
80006388:	68 28       	ld.w	r8,r4[0x8]
8000638a:	18 18       	sub	r8,r12
8000638c:	89 28       	st.w	r4[0x8],r8
8000638e:	e0 80 01 0f 	breq	800065ac <__sfvwrite_r+0x298>
80006392:	18 03       	add	r3,r12
80006394:	ce 9b       	rjmp	80006366 <__sfvwrite_r+0x52>
80006396:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
8000639a:	c0 70       	breq	800063a8 <__sfvwrite_r+0x94>
8000639c:	50 06       	stdsp	sp[0x0],r6
8000639e:	0c 93       	mov	r3,r6
800063a0:	0c 91       	mov	r1,r6
800063a2:	50 15       	stdsp	sp[0x4],r5
800063a4:	08 92       	mov	r2,r4
800063a6:	c9 e8       	rjmp	800064e2 <__sfvwrite_r+0x1ce>
800063a8:	06 96       	mov	r6,r3
800063aa:	08 91       	mov	r1,r4
800063ac:	c0 48       	rjmp	800063b4 <__sfvwrite_r+0xa0>
800063ae:	60 03       	ld.w	r3,r0[0x0]
800063b0:	60 16       	ld.w	r6,r0[0x4]
800063b2:	2f 80       	sub	r0,-8
800063b4:	58 06       	cp.w	r6,0
800063b6:	cf c0       	breq	800063ae <__sfvwrite_r+0x9a>
800063b8:	8e 68       	ld.sh	r8,r7[0xc]
800063ba:	6e 24       	ld.w	r4,r7[0x8]
800063bc:	10 99       	mov	r9,r8
800063be:	e2 19 02 00 	andl	r9,0x200,COH
800063c2:	c5 50       	breq	8000646c <__sfvwrite_r+0x158>
800063c4:	08 36       	cp.w	r6,r4
800063c6:	c4 33       	brcs	8000644c <__sfvwrite_r+0x138>
800063c8:	10 99       	mov	r9,r8
800063ca:	e2 19 04 80 	andl	r9,0x480,COH
800063ce:	c3 f0       	breq	8000644c <__sfvwrite_r+0x138>
800063d0:	6e 4b       	ld.w	r11,r7[0x10]
800063d2:	6e 09       	ld.w	r9,r7[0x0]
800063d4:	16 19       	sub	r9,r11
800063d6:	50 09       	stdsp	sp[0x0],r9
800063d8:	6e 59       	ld.w	r9,r7[0x14]
800063da:	10 9c       	mov	r12,r8
800063dc:	f2 09 00 1a 	add	r10,r9,r9<<0x1
800063e0:	30 28       	mov	r8,2
800063e2:	f4 08 0c 08 	divs	r8,r10,r8
800063e6:	fa e9 00 04 	st.d	sp[4],r8
800063ea:	10 94       	mov	r4,r8
800063ec:	40 09       	lddsp	r9,sp[0x0]
800063ee:	e2 1c 04 00 	andl	r12,0x400,COH
800063f2:	2f f9       	sub	r9,-1
800063f4:	0c 09       	add	r9,r6
800063f6:	12 38       	cp.w	r8,r9
800063f8:	f2 04 17 30 	movlo	r4,r9
800063fc:	58 0c       	cp.w	r12,0
800063fe:	c1 00       	breq	8000641e <__sfvwrite_r+0x10a>
80006400:	08 9b       	mov	r11,r4
80006402:	0a 9c       	mov	r12,r5
80006404:	c6 8d       	rcall	800066d4 <_malloc_r>
80006406:	18 92       	mov	r2,r12
80006408:	c1 40       	breq	80006430 <__sfvwrite_r+0x11c>
8000640a:	40 0a       	lddsp	r10,sp[0x0]
8000640c:	6e 4b       	ld.w	r11,r7[0x10]
8000640e:	fe b0 e4 79 	rcall	80002d00 <memcpy>
80006412:	8e 68       	ld.sh	r8,r7[0xc]
80006414:	e0 18 fb 7f 	andl	r8,0xfb7f
80006418:	a7 b8       	sbr	r8,0x7
8000641a:	ae 68       	st.h	r7[0xc],r8
8000641c:	c0 d8       	rjmp	80006436 <__sfvwrite_r+0x122>
8000641e:	08 9a       	mov	r10,r4
80006420:	0a 9c       	mov	r12,r5
80006422:	e0 a0 06 8f 	rcall	80007140 <_realloc_r>
80006426:	18 92       	mov	r2,r12
80006428:	c0 71       	brne	80006436 <__sfvwrite_r+0x122>
8000642a:	6e 4b       	ld.w	r11,r7[0x10]
8000642c:	0a 9c       	mov	r12,r5
8000642e:	ca de       	rcall	80006188 <_free_r>
80006430:	30 c8       	mov	r8,12
80006432:	8b 38       	st.w	r5[0xc],r8
80006434:	cb 78       	rjmp	800065a2 <__sfvwrite_r+0x28e>
80006436:	40 0a       	lddsp	r10,sp[0x0]
80006438:	40 09       	lddsp	r9,sp[0x0]
8000643a:	e8 0a 01 0a 	sub	r10,r4,r10
8000643e:	e4 09 00 08 	add	r8,r2,r9
80006442:	8f 54       	st.w	r7[0x14],r4
80006444:	8f 2a       	st.w	r7[0x8],r10
80006446:	8f 08       	st.w	r7[0x0],r8
80006448:	8f 42       	st.w	r7[0x10],r2
8000644a:	0c 94       	mov	r4,r6
8000644c:	08 36       	cp.w	r6,r4
8000644e:	ec 04 17 30 	movlo	r4,r6
80006452:	06 9b       	mov	r11,r3
80006454:	08 9a       	mov	r10,r4
80006456:	6e 0c       	ld.w	r12,r7[0x0]
80006458:	e0 a0 03 61 	rcall	80006b1a <memmove>
8000645c:	6e 08       	ld.w	r8,r7[0x0]
8000645e:	08 08       	add	r8,r4
80006460:	8f 08       	st.w	r7[0x0],r8
80006462:	6e 28       	ld.w	r8,r7[0x8]
80006464:	08 18       	sub	r8,r4
80006466:	0c 94       	mov	r4,r6
80006468:	8f 28       	st.w	r7[0x8],r8
8000646a:	c3 08       	rjmp	800064ca <__sfvwrite_r+0x1b6>
8000646c:	08 36       	cp.w	r6,r4
8000646e:	5f ba       	srhi	r10
80006470:	6e 0c       	ld.w	r12,r7[0x0]
80006472:	6e 48       	ld.w	r8,r7[0x10]
80006474:	10 3c       	cp.w	r12,r8
80006476:	5f b8       	srhi	r8
80006478:	f5 e8 00 08 	and	r8,r10,r8
8000647c:	f2 08 18 00 	cp.b	r8,r9
80006480:	c0 e0       	breq	8000649c <__sfvwrite_r+0x188>
80006482:	06 9b       	mov	r11,r3
80006484:	08 9a       	mov	r10,r4
80006486:	e0 a0 03 4a 	rcall	80006b1a <memmove>
8000648a:	6e 08       	ld.w	r8,r7[0x0]
8000648c:	08 08       	add	r8,r4
8000648e:	0e 9b       	mov	r11,r7
80006490:	8f 08       	st.w	r7[0x0],r8
80006492:	0a 9c       	mov	r12,r5
80006494:	fe b0 fd 08 	rcall	80005ea4 <_fflush_r>
80006498:	c1 90       	breq	800064ca <__sfvwrite_r+0x1b6>
8000649a:	c8 48       	rjmp	800065a2 <__sfvwrite_r+0x28e>
8000649c:	6e 59       	ld.w	r9,r7[0x14]
8000649e:	12 36       	cp.w	r6,r9
800064a0:	c0 a3       	brcs	800064b4 <__sfvwrite_r+0x1a0>
800064a2:	6e a8       	ld.w	r8,r7[0x28]
800064a4:	06 9a       	mov	r10,r3
800064a6:	6e 8b       	ld.w	r11,r7[0x20]
800064a8:	0a 9c       	mov	r12,r5
800064aa:	5d 18       	icall	r8
800064ac:	18 94       	mov	r4,r12
800064ae:	e0 89 00 0e 	brgt	800064ca <__sfvwrite_r+0x1b6>
800064b2:	c7 88       	rjmp	800065a2 <__sfvwrite_r+0x28e>
800064b4:	0c 9a       	mov	r10,r6
800064b6:	06 9b       	mov	r11,r3
800064b8:	e0 a0 03 31 	rcall	80006b1a <memmove>
800064bc:	6e 08       	ld.w	r8,r7[0x0]
800064be:	0c 08       	add	r8,r6
800064c0:	0c 94       	mov	r4,r6
800064c2:	8f 08       	st.w	r7[0x0],r8
800064c4:	6e 28       	ld.w	r8,r7[0x8]
800064c6:	0c 18       	sub	r8,r6
800064c8:	8f 28       	st.w	r7[0x8],r8
800064ca:	62 28       	ld.w	r8,r1[0x8]
800064cc:	08 18       	sub	r8,r4
800064ce:	83 28       	st.w	r1[0x8],r8
800064d0:	c6 e0       	breq	800065ac <__sfvwrite_r+0x298>
800064d2:	08 16       	sub	r6,r4
800064d4:	08 03       	add	r3,r4
800064d6:	c6 fb       	rjmp	800063b4 <__sfvwrite_r+0xa0>
800064d8:	60 03       	ld.w	r3,r0[0x0]
800064da:	60 11       	ld.w	r1,r0[0x4]
800064dc:	30 08       	mov	r8,0
800064de:	2f 80       	sub	r0,-8
800064e0:	50 08       	stdsp	sp[0x0],r8
800064e2:	58 01       	cp.w	r1,0
800064e4:	cf a0       	breq	800064d8 <__sfvwrite_r+0x1c4>
800064e6:	40 0a       	lddsp	r10,sp[0x0]
800064e8:	58 0a       	cp.w	r10,0
800064ea:	c1 51       	brne	80006514 <__sfvwrite_r+0x200>
800064ec:	e2 c6 ff ff 	sub	r6,r1,-1
800064f0:	02 9a       	mov	r10,r1
800064f2:	30 ab       	mov	r11,10
800064f4:	06 9c       	mov	r12,r3
800064f6:	e0 a0 03 07 	rcall	80006b04 <memchr>
800064fa:	f8 c8 ff ff 	sub	r8,r12,-1
800064fe:	58 0c       	cp.w	r12,0
80006500:	f1 d3 e1 16 	subne	r6,r8,r3
80006504:	f9 b9 01 01 	movne	r9,1
80006508:	fb f9 1a 00 	st.wne	sp[0x0],r9
8000650c:	f9 b8 00 01 	moveq	r8,1
80006510:	fb f8 0a 00 	st.weq	sp[0x0],r8
80006514:	02 36       	cp.w	r6,r1
80006516:	ec 04 17 80 	movls	r4,r6
8000651a:	e2 04 17 b0 	movhi	r4,r1
8000651e:	6e 59       	ld.w	r9,r7[0x14]
80006520:	6e 25       	ld.w	r5,r7[0x8]
80006522:	f2 05 00 05 	add	r5,r9,r5
80006526:	0a 34       	cp.w	r4,r5
80006528:	5f 9a       	srgt	r10
8000652a:	6e 0c       	ld.w	r12,r7[0x0]
8000652c:	6e 48       	ld.w	r8,r7[0x10]
8000652e:	10 3c       	cp.w	r12,r8
80006530:	5f b8       	srhi	r8
80006532:	f5 e8 00 08 	and	r8,r10,r8
80006536:	30 0a       	mov	r10,0
80006538:	f4 08 18 00 	cp.b	r8,r10
8000653c:	c0 e0       	breq	80006558 <__sfvwrite_r+0x244>
8000653e:	06 9b       	mov	r11,r3
80006540:	0a 9a       	mov	r10,r5
80006542:	e0 a0 02 ec 	rcall	80006b1a <memmove>
80006546:	6e 08       	ld.w	r8,r7[0x0]
80006548:	0a 08       	add	r8,r5
8000654a:	0e 9b       	mov	r11,r7
8000654c:	8f 08       	st.w	r7[0x0],r8
8000654e:	40 1c       	lddsp	r12,sp[0x4]
80006550:	fe b0 fc aa 	rcall	80005ea4 <_fflush_r>
80006554:	c1 80       	breq	80006584 <__sfvwrite_r+0x270>
80006556:	c2 68       	rjmp	800065a2 <__sfvwrite_r+0x28e>
80006558:	12 34       	cp.w	r4,r9
8000655a:	c0 a5       	brlt	8000656e <__sfvwrite_r+0x25a>
8000655c:	6e a8       	ld.w	r8,r7[0x28]
8000655e:	06 9a       	mov	r10,r3
80006560:	6e 8b       	ld.w	r11,r7[0x20]
80006562:	40 1c       	lddsp	r12,sp[0x4]
80006564:	5d 18       	icall	r8
80006566:	18 95       	mov	r5,r12
80006568:	e0 89 00 0e 	brgt	80006584 <__sfvwrite_r+0x270>
8000656c:	c1 b8       	rjmp	800065a2 <__sfvwrite_r+0x28e>
8000656e:	08 9a       	mov	r10,r4
80006570:	06 9b       	mov	r11,r3
80006572:	e0 a0 02 d4 	rcall	80006b1a <memmove>
80006576:	6e 08       	ld.w	r8,r7[0x0]
80006578:	08 08       	add	r8,r4
8000657a:	08 95       	mov	r5,r4
8000657c:	8f 08       	st.w	r7[0x0],r8
8000657e:	6e 28       	ld.w	r8,r7[0x8]
80006580:	08 18       	sub	r8,r4
80006582:	8f 28       	st.w	r7[0x8],r8
80006584:	0a 16       	sub	r6,r5
80006586:	c0 71       	brne	80006594 <__sfvwrite_r+0x280>
80006588:	0e 9b       	mov	r11,r7
8000658a:	40 1c       	lddsp	r12,sp[0x4]
8000658c:	fe b0 fc 8c 	rcall	80005ea4 <_fflush_r>
80006590:	c0 91       	brne	800065a2 <__sfvwrite_r+0x28e>
80006592:	50 06       	stdsp	sp[0x0],r6
80006594:	64 28       	ld.w	r8,r2[0x8]
80006596:	0a 18       	sub	r8,r5
80006598:	85 28       	st.w	r2[0x8],r8
8000659a:	c0 90       	breq	800065ac <__sfvwrite_r+0x298>
8000659c:	0a 11       	sub	r1,r5
8000659e:	0a 03       	add	r3,r5
800065a0:	ca 1b       	rjmp	800064e2 <__sfvwrite_r+0x1ce>
800065a2:	8e 68       	ld.sh	r8,r7[0xc]
800065a4:	a7 a8       	sbr	r8,0x6
800065a6:	ae 68       	st.h	r7[0xc],r8
800065a8:	3f fc       	mov	r12,-1
800065aa:	c0 28       	rjmp	800065ae <__sfvwrite_r+0x29a>
800065ac:	30 0c       	mov	r12,0
800065ae:	2f dd       	sub	sp,-12
800065b0:	d8 32       	popm	r0-r7,pc
800065b2:	d7 03       	nop

800065b4 <_fwalk>:
800065b4:	d4 31       	pushm	r0-r7,lr
800065b6:	30 05       	mov	r5,0
800065b8:	16 91       	mov	r1,r11
800065ba:	f8 c7 ff 28 	sub	r7,r12,-216
800065be:	0a 92       	mov	r2,r5
800065c0:	fe b0 fc f8 	rcall	80005fb0 <__sfp_lock_acquire>
800065c4:	3f f3       	mov	r3,-1
800065c6:	c1 68       	rjmp	800065f2 <_fwalk+0x3e>
800065c8:	6e 26       	ld.w	r6,r7[0x8]
800065ca:	6e 14       	ld.w	r4,r7[0x4]
800065cc:	2f 46       	sub	r6,-12
800065ce:	c0 c8       	rjmp	800065e6 <_fwalk+0x32>
800065d0:	8c 08       	ld.sh	r8,r6[0x0]
800065d2:	e4 08 19 00 	cp.h	r8,r2
800065d6:	c0 70       	breq	800065e4 <_fwalk+0x30>
800065d8:	8c 18       	ld.sh	r8,r6[0x2]
800065da:	e6 08 19 00 	cp.h	r8,r3
800065de:	c0 30       	breq	800065e4 <_fwalk+0x30>
800065e0:	5d 11       	icall	r1
800065e2:	18 45       	or	r5,r12
800065e4:	2a 46       	sub	r6,-92
800065e6:	20 14       	sub	r4,1
800065e8:	ec cc 00 0c 	sub	r12,r6,12
800065ec:	58 04       	cp.w	r4,0
800065ee:	cf 14       	brge	800065d0 <_fwalk+0x1c>
800065f0:	6e 07       	ld.w	r7,r7[0x0]
800065f2:	58 07       	cp.w	r7,0
800065f4:	ce a1       	brne	800065c8 <_fwalk+0x14>
800065f6:	fe b0 fc de 	rcall	80005fb2 <__sfp_lock_release>
800065fa:	0a 9c       	mov	r12,r5
800065fc:	d8 32       	popm	r0-r7,pc
800065fe:	d7 03       	nop

80006600 <_localeconv_r>:
80006600:	fe cc d8 48 	sub	r12,pc,-10168
80006604:	5e fc       	retal	r12
80006606:	d7 03       	nop

80006608 <__smakebuf_r>:
80006608:	d4 21       	pushm	r4-r7,lr
8000660a:	20 fd       	sub	sp,60
8000660c:	96 68       	ld.sh	r8,r11[0xc]
8000660e:	16 97       	mov	r7,r11
80006610:	18 96       	mov	r6,r12
80006612:	e2 18 00 02 	andl	r8,0x2,COH
80006616:	c3 c1       	brne	8000668e <__smakebuf_r+0x86>
80006618:	96 7b       	ld.sh	r11,r11[0xe]
8000661a:	f0 0b 19 00 	cp.h	r11,r8
8000661e:	c0 55       	brlt	80006628 <__smakebuf_r+0x20>
80006620:	1a 9a       	mov	r10,sp
80006622:	e0 a0 08 9d 	rcall	8000775c <_fstat_r>
80006626:	c0 f4       	brge	80006644 <__smakebuf_r+0x3c>
80006628:	8e 65       	ld.sh	r5,r7[0xc]
8000662a:	0a 98       	mov	r8,r5
8000662c:	ab b8       	sbr	r8,0xb
8000662e:	e2 15 00 80 	andl	r5,0x80,COH
80006632:	ae 68       	st.h	r7[0xc],r8
80006634:	30 04       	mov	r4,0
80006636:	e0 68 04 00 	mov	r8,1024
8000663a:	f9 b5 01 40 	movne	r5,64
8000663e:	f0 05 17 00 	moveq	r5,r8
80006642:	c1 c8       	rjmp	8000667a <__smakebuf_r+0x72>
80006644:	40 18       	lddsp	r8,sp[0x4]
80006646:	e2 18 f0 00 	andl	r8,0xf000,COH
8000664a:	e0 48 20 00 	cp.w	r8,8192
8000664e:	5f 04       	sreq	r4
80006650:	e0 48 80 00 	cp.w	r8,32768
80006654:	c0 e1       	brne	80006670 <__smakebuf_r+0x68>
80006656:	6e b9       	ld.w	r9,r7[0x2c]
80006658:	fe c8 f1 e8 	sub	r8,pc,-3608
8000665c:	10 39       	cp.w	r9,r8
8000665e:	c0 91       	brne	80006670 <__smakebuf_r+0x68>
80006660:	8e 68       	ld.sh	r8,r7[0xc]
80006662:	e0 65 04 00 	mov	r5,1024
80006666:	ab a8       	sbr	r8,0xa
80006668:	ef 45 00 50 	st.w	r7[80],r5
8000666c:	ae 68       	st.h	r7[0xc],r8
8000666e:	c0 68       	rjmp	8000667a <__smakebuf_r+0x72>
80006670:	8e 68       	ld.sh	r8,r7[0xc]
80006672:	e0 65 04 00 	mov	r5,1024
80006676:	ab b8       	sbr	r8,0xb
80006678:	ae 68       	st.h	r7[0xc],r8
8000667a:	0a 9b       	mov	r11,r5
8000667c:	0c 9c       	mov	r12,r6
8000667e:	c2 bc       	rcall	800066d4 <_malloc_r>
80006680:	8e 68       	ld.sh	r8,r7[0xc]
80006682:	c0 d1       	brne	8000669c <__smakebuf_r+0x94>
80006684:	ed b8 00 09 	bld	r8,0x9
80006688:	c1 b0       	breq	800066be <__smakebuf_r+0xb6>
8000668a:	a1 b8       	sbr	r8,0x1
8000668c:	ae 68       	st.h	r7[0xc],r8
8000668e:	ee c8 ff b9 	sub	r8,r7,-71
80006692:	8f 48       	st.w	r7[0x10],r8
80006694:	8f 08       	st.w	r7[0x0],r8
80006696:	30 18       	mov	r8,1
80006698:	8f 58       	st.w	r7[0x14],r8
8000669a:	c1 28       	rjmp	800066be <__smakebuf_r+0xb6>
8000669c:	a7 b8       	sbr	r8,0x7
8000669e:	8f 4c       	st.w	r7[0x10],r12
800066a0:	ae 68       	st.h	r7[0xc],r8
800066a2:	8f 55       	st.w	r7[0x14],r5
800066a4:	fe c8 06 f0 	sub	r8,pc,1776
800066a8:	8f 0c       	st.w	r7[0x0],r12
800066aa:	8d a8       	st.w	r6[0x28],r8
800066ac:	58 04       	cp.w	r4,0
800066ae:	c0 80       	breq	800066be <__smakebuf_r+0xb6>
800066b0:	8e 7c       	ld.sh	r12,r7[0xe]
800066b2:	e0 a0 07 47 	rcall	80007540 <isatty>
800066b6:	c0 40       	breq	800066be <__smakebuf_r+0xb6>
800066b8:	8e 68       	ld.sh	r8,r7[0xc]
800066ba:	a1 a8       	sbr	r8,0x0
800066bc:	ae 68       	st.h	r7[0xc],r8
800066be:	2f 1d       	sub	sp,-60
800066c0:	d8 22       	popm	r4-r7,pc
800066c2:	d7 03       	nop

800066c4 <malloc>:
800066c4:	d4 01       	pushm	lr
800066c6:	e0 68 00 fc 	mov	r8,252
800066ca:	18 9b       	mov	r11,r12
800066cc:	70 0c       	ld.w	r12,r8[0x0]
800066ce:	c0 3c       	rcall	800066d4 <_malloc_r>
800066d0:	d8 02       	popm	pc
800066d2:	d7 03       	nop

800066d4 <_malloc_r>:
800066d4:	d4 31       	pushm	r0-r7,lr
800066d6:	f6 c8 ff f5 	sub	r8,r11,-11
800066da:	18 95       	mov	r5,r12
800066dc:	10 97       	mov	r7,r8
800066de:	e0 17 ff f8 	andl	r7,0xfff8
800066e2:	59 68       	cp.w	r8,22
800066e4:	f9 b7 08 10 	movls	r7,16
800066e8:	16 37       	cp.w	r7,r11
800066ea:	5f 38       	srlo	r8
800066ec:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
800066f0:	c0 50       	breq	800066fa <_malloc_r+0x26>
800066f2:	30 c8       	mov	r8,12
800066f4:	99 38       	st.w	r12[0xc],r8
800066f6:	e0 8f 01 f7 	bral	80006ae4 <_malloc_r+0x410>
800066fa:	e0 a0 02 36 	rcall	80006b66 <__malloc_lock>
800066fe:	e0 47 01 f7 	cp.w	r7,503
80006702:	e0 8b 00 1d 	brhi	8000673c <_malloc_r+0x68>
80006706:	ee 03 16 03 	lsr	r3,r7,0x3
8000670a:	e0 68 01 00 	mov	r8,256
8000670e:	f0 03 00 38 	add	r8,r8,r3<<0x3
80006712:	70 36       	ld.w	r6,r8[0xc]
80006714:	10 36       	cp.w	r6,r8
80006716:	c0 61       	brne	80006722 <_malloc_r+0x4e>
80006718:	ec c8 ff f8 	sub	r8,r6,-8
8000671c:	70 36       	ld.w	r6,r8[0xc]
8000671e:	10 36       	cp.w	r6,r8
80006720:	c0 c0       	breq	80006738 <_malloc_r+0x64>
80006722:	6c 18       	ld.w	r8,r6[0x4]
80006724:	e0 18 ff fc 	andl	r8,0xfffc
80006728:	6c 3a       	ld.w	r10,r6[0xc]
8000672a:	ec 08 00 09 	add	r9,r6,r8
8000672e:	0a 9c       	mov	r12,r5
80006730:	6c 28       	ld.w	r8,r6[0x8]
80006732:	95 28       	st.w	r10[0x8],r8
80006734:	91 3a       	st.w	r8[0xc],r10
80006736:	c4 78       	rjmp	800067c4 <_malloc_r+0xf0>
80006738:	2f e3       	sub	r3,-2
8000673a:	c4 d8       	rjmp	800067d4 <_malloc_r+0x100>
8000673c:	ee 03 16 09 	lsr	r3,r7,0x9
80006740:	c0 41       	brne	80006748 <_malloc_r+0x74>
80006742:	ee 03 16 03 	lsr	r3,r7,0x3
80006746:	c2 68       	rjmp	80006792 <_malloc_r+0xbe>
80006748:	58 43       	cp.w	r3,4
8000674a:	e0 8b 00 06 	brhi	80006756 <_malloc_r+0x82>
8000674e:	ee 03 16 06 	lsr	r3,r7,0x6
80006752:	2c 83       	sub	r3,-56
80006754:	c1 f8       	rjmp	80006792 <_malloc_r+0xbe>
80006756:	59 43       	cp.w	r3,20
80006758:	e0 8b 00 04 	brhi	80006760 <_malloc_r+0x8c>
8000675c:	2a 53       	sub	r3,-91
8000675e:	c1 a8       	rjmp	80006792 <_malloc_r+0xbe>
80006760:	e0 43 00 54 	cp.w	r3,84
80006764:	e0 8b 00 06 	brhi	80006770 <_malloc_r+0x9c>
80006768:	ee 03 16 0c 	lsr	r3,r7,0xc
8000676c:	29 23       	sub	r3,-110
8000676e:	c1 28       	rjmp	80006792 <_malloc_r+0xbe>
80006770:	e0 43 01 54 	cp.w	r3,340
80006774:	e0 8b 00 06 	brhi	80006780 <_malloc_r+0xac>
80006778:	ee 03 16 0f 	lsr	r3,r7,0xf
8000677c:	28 93       	sub	r3,-119
8000677e:	c0 a8       	rjmp	80006792 <_malloc_r+0xbe>
80006780:	e0 43 05 54 	cp.w	r3,1364
80006784:	e0 88 00 04 	brls	8000678c <_malloc_r+0xb8>
80006788:	37 e3       	mov	r3,126
8000678a:	c0 48       	rjmp	80006792 <_malloc_r+0xbe>
8000678c:	ee 03 16 12 	lsr	r3,r7,0x12
80006790:	28 43       	sub	r3,-124
80006792:	e0 6a 01 00 	mov	r10,256
80006796:	f4 03 00 3a 	add	r10,r10,r3<<0x3
8000679a:	74 36       	ld.w	r6,r10[0xc]
8000679c:	c1 98       	rjmp	800067ce <_malloc_r+0xfa>
8000679e:	6c 19       	ld.w	r9,r6[0x4]
800067a0:	e0 19 ff fc 	andl	r9,0xfffc
800067a4:	f2 07 01 0b 	sub	r11,r9,r7
800067a8:	58 fb       	cp.w	r11,15
800067aa:	e0 8a 00 04 	brle	800067b2 <_malloc_r+0xde>
800067ae:	20 13       	sub	r3,1
800067b0:	c1 18       	rjmp	800067d2 <_malloc_r+0xfe>
800067b2:	6c 38       	ld.w	r8,r6[0xc]
800067b4:	58 0b       	cp.w	r11,0
800067b6:	c0 b5       	brlt	800067cc <_malloc_r+0xf8>
800067b8:	6c 2a       	ld.w	r10,r6[0x8]
800067ba:	ec 09 00 09 	add	r9,r6,r9
800067be:	0a 9c       	mov	r12,r5
800067c0:	91 2a       	st.w	r8[0x8],r10
800067c2:	95 38       	st.w	r10[0xc],r8
800067c4:	72 18       	ld.w	r8,r9[0x4]
800067c6:	a1 a8       	sbr	r8,0x0
800067c8:	93 18       	st.w	r9[0x4],r8
800067ca:	cb c8       	rjmp	80006942 <_malloc_r+0x26e>
800067cc:	10 96       	mov	r6,r8
800067ce:	14 36       	cp.w	r6,r10
800067d0:	ce 71       	brne	8000679e <_malloc_r+0xca>
800067d2:	2f f3       	sub	r3,-1
800067d4:	e0 6a 01 00 	mov	r10,256
800067d8:	f4 cc ff f8 	sub	r12,r10,-8
800067dc:	78 26       	ld.w	r6,r12[0x8]
800067de:	18 36       	cp.w	r6,r12
800067e0:	c6 c0       	breq	800068b8 <_malloc_r+0x1e4>
800067e2:	6c 19       	ld.w	r9,r6[0x4]
800067e4:	e0 19 ff fc 	andl	r9,0xfffc
800067e8:	f2 07 01 08 	sub	r8,r9,r7
800067ec:	58 f8       	cp.w	r8,15
800067ee:	e0 89 00 8f 	brgt	8000690c <_malloc_r+0x238>
800067f2:	99 3c       	st.w	r12[0xc],r12
800067f4:	99 2c       	st.w	r12[0x8],r12
800067f6:	58 08       	cp.w	r8,0
800067f8:	c0 55       	brlt	80006802 <_malloc_r+0x12e>
800067fa:	ec 09 00 09 	add	r9,r6,r9
800067fe:	0a 9c       	mov	r12,r5
80006800:	ce 2b       	rjmp	800067c4 <_malloc_r+0xf0>
80006802:	e0 49 01 ff 	cp.w	r9,511
80006806:	e0 8b 00 13 	brhi	8000682c <_malloc_r+0x158>
8000680a:	a3 99       	lsr	r9,0x3
8000680c:	f4 09 00 38 	add	r8,r10,r9<<0x3
80006810:	70 2b       	ld.w	r11,r8[0x8]
80006812:	8d 38       	st.w	r6[0xc],r8
80006814:	8d 2b       	st.w	r6[0x8],r11
80006816:	97 36       	st.w	r11[0xc],r6
80006818:	91 26       	st.w	r8[0x8],r6
8000681a:	a3 49       	asr	r9,0x2
8000681c:	74 18       	ld.w	r8,r10[0x4]
8000681e:	30 1b       	mov	r11,1
80006820:	f6 09 09 49 	lsl	r9,r11,r9
80006824:	f1 e9 10 09 	or	r9,r8,r9
80006828:	95 19       	st.w	r10[0x4],r9
8000682a:	c4 78       	rjmp	800068b8 <_malloc_r+0x1e4>
8000682c:	f2 0a 16 09 	lsr	r10,r9,0x9
80006830:	58 4a       	cp.w	r10,4
80006832:	e0 8b 00 07 	brhi	80006840 <_malloc_r+0x16c>
80006836:	f2 0a 16 06 	lsr	r10,r9,0x6
8000683a:	2c 8a       	sub	r10,-56
8000683c:	c2 08       	rjmp	8000687c <_malloc_r+0x1a8>
8000683e:	d7 03       	nop
80006840:	59 4a       	cp.w	r10,20
80006842:	e0 8b 00 04 	brhi	8000684a <_malloc_r+0x176>
80006846:	2a 5a       	sub	r10,-91
80006848:	c1 a8       	rjmp	8000687c <_malloc_r+0x1a8>
8000684a:	e0 4a 00 54 	cp.w	r10,84
8000684e:	e0 8b 00 06 	brhi	8000685a <_malloc_r+0x186>
80006852:	f2 0a 16 0c 	lsr	r10,r9,0xc
80006856:	29 2a       	sub	r10,-110
80006858:	c1 28       	rjmp	8000687c <_malloc_r+0x1a8>
8000685a:	e0 4a 01 54 	cp.w	r10,340
8000685e:	e0 8b 00 06 	brhi	8000686a <_malloc_r+0x196>
80006862:	f2 0a 16 0f 	lsr	r10,r9,0xf
80006866:	28 9a       	sub	r10,-119
80006868:	c0 a8       	rjmp	8000687c <_malloc_r+0x1a8>
8000686a:	e0 4a 05 54 	cp.w	r10,1364
8000686e:	e0 88 00 04 	brls	80006876 <_malloc_r+0x1a2>
80006872:	37 ea       	mov	r10,126
80006874:	c0 48       	rjmp	8000687c <_malloc_r+0x1a8>
80006876:	f2 0a 16 12 	lsr	r10,r9,0x12
8000687a:	28 4a       	sub	r10,-124
8000687c:	e0 6b 01 00 	mov	r11,256
80006880:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80006884:	68 28       	ld.w	r8,r4[0x8]
80006886:	08 38       	cp.w	r8,r4
80006888:	c0 e1       	brne	800068a4 <_malloc_r+0x1d0>
8000688a:	76 19       	ld.w	r9,r11[0x4]
8000688c:	a3 4a       	asr	r10,0x2
8000688e:	30 1e       	mov	lr,1
80006890:	fc 0a 09 4a 	lsl	r10,lr,r10
80006894:	f3 ea 10 0a 	or	r10,r9,r10
80006898:	10 99       	mov	r9,r8
8000689a:	97 1a       	st.w	r11[0x4],r10
8000689c:	c0 a8       	rjmp	800068b0 <_malloc_r+0x1dc>
8000689e:	70 28       	ld.w	r8,r8[0x8]
800068a0:	08 38       	cp.w	r8,r4
800068a2:	c0 60       	breq	800068ae <_malloc_r+0x1da>
800068a4:	70 1a       	ld.w	r10,r8[0x4]
800068a6:	e0 1a ff fc 	andl	r10,0xfffc
800068aa:	14 39       	cp.w	r9,r10
800068ac:	cf 93       	brcs	8000689e <_malloc_r+0x1ca>
800068ae:	70 39       	ld.w	r9,r8[0xc]
800068b0:	8d 39       	st.w	r6[0xc],r9
800068b2:	8d 28       	st.w	r6[0x8],r8
800068b4:	91 36       	st.w	r8[0xc],r6
800068b6:	93 26       	st.w	r9[0x8],r6
800068b8:	e6 08 14 02 	asr	r8,r3,0x2
800068bc:	30 1b       	mov	r11,1
800068be:	e0 64 01 00 	mov	r4,256
800068c2:	f6 08 09 4b 	lsl	r11,r11,r8
800068c6:	68 18       	ld.w	r8,r4[0x4]
800068c8:	10 3b       	cp.w	r11,r8
800068ca:	e0 8b 00 69 	brhi	8000699c <_malloc_r+0x2c8>
800068ce:	f7 e8 00 09 	and	r9,r11,r8
800068d2:	c0 b1       	brne	800068e8 <_malloc_r+0x214>
800068d4:	e0 13 ff fc 	andl	r3,0xfffc
800068d8:	a1 7b       	lsl	r11,0x1
800068da:	2f c3       	sub	r3,-4
800068dc:	c0 38       	rjmp	800068e2 <_malloc_r+0x20e>
800068de:	2f c3       	sub	r3,-4
800068e0:	a1 7b       	lsl	r11,0x1
800068e2:	f7 e8 00 09 	and	r9,r11,r8
800068e6:	cf c0       	breq	800068de <_malloc_r+0x20a>
800068e8:	e8 03 00 3e 	add	lr,r4,r3<<0x3
800068ec:	06 92       	mov	r2,r3
800068ee:	1c 91       	mov	r1,lr
800068f0:	62 36       	ld.w	r6,r1[0xc]
800068f2:	c2 d8       	rjmp	8000694c <_malloc_r+0x278>
800068f4:	6c 1a       	ld.w	r10,r6[0x4]
800068f6:	e0 1a ff fc 	andl	r10,0xfffc
800068fa:	f4 07 01 08 	sub	r8,r10,r7
800068fe:	58 f8       	cp.w	r8,15
80006900:	e0 8a 00 15 	brle	8000692a <_malloc_r+0x256>
80006904:	6c 3a       	ld.w	r10,r6[0xc]
80006906:	6c 29       	ld.w	r9,r6[0x8]
80006908:	95 29       	st.w	r10[0x8],r9
8000690a:	93 3a       	st.w	r9[0xc],r10
8000690c:	0e 99       	mov	r9,r7
8000690e:	ec 07 00 07 	add	r7,r6,r7
80006912:	a1 a9       	sbr	r9,0x0
80006914:	99 37       	st.w	r12[0xc],r7
80006916:	99 27       	st.w	r12[0x8],r7
80006918:	8d 19       	st.w	r6[0x4],r9
8000691a:	ee 08 09 08 	st.w	r7[r8],r8
8000691e:	8f 2c       	st.w	r7[0x8],r12
80006920:	8f 3c       	st.w	r7[0xc],r12
80006922:	a1 a8       	sbr	r8,0x0
80006924:	0a 9c       	mov	r12,r5
80006926:	8f 18       	st.w	r7[0x4],r8
80006928:	c0 d8       	rjmp	80006942 <_malloc_r+0x26e>
8000692a:	6c 39       	ld.w	r9,r6[0xc]
8000692c:	58 08       	cp.w	r8,0
8000692e:	c0 e5       	brlt	8000694a <_malloc_r+0x276>
80006930:	ec 0a 00 0a 	add	r10,r6,r10
80006934:	74 18       	ld.w	r8,r10[0x4]
80006936:	a1 a8       	sbr	r8,0x0
80006938:	0a 9c       	mov	r12,r5
8000693a:	95 18       	st.w	r10[0x4],r8
8000693c:	6c 28       	ld.w	r8,r6[0x8]
8000693e:	93 28       	st.w	r9[0x8],r8
80006940:	91 39       	st.w	r8[0xc],r9
80006942:	c1 3d       	rcall	80006b68 <__malloc_unlock>
80006944:	ec cc ff f8 	sub	r12,r6,-8
80006948:	d8 32       	popm	r0-r7,pc
8000694a:	12 96       	mov	r6,r9
8000694c:	02 36       	cp.w	r6,r1
8000694e:	cd 31       	brne	800068f4 <_malloc_r+0x220>
80006950:	2f f2       	sub	r2,-1
80006952:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80006956:	c0 30       	breq	8000695c <_malloc_r+0x288>
80006958:	2f 81       	sub	r1,-8
8000695a:	cc bb       	rjmp	800068f0 <_malloc_r+0x21c>
8000695c:	1c 98       	mov	r8,lr
8000695e:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80006962:	c0 81       	brne	80006972 <_malloc_r+0x29e>
80006964:	68 19       	ld.w	r9,r4[0x4]
80006966:	f6 08 11 ff 	rsub	r8,r11,-1
8000696a:	f3 e8 00 08 	and	r8,r9,r8
8000696e:	89 18       	st.w	r4[0x4],r8
80006970:	c0 78       	rjmp	8000697e <_malloc_r+0x2aa>
80006972:	f0 c9 00 08 	sub	r9,r8,8
80006976:	20 13       	sub	r3,1
80006978:	70 08       	ld.w	r8,r8[0x0]
8000697a:	12 38       	cp.w	r8,r9
8000697c:	cf 10       	breq	8000695e <_malloc_r+0x28a>
8000697e:	a1 7b       	lsl	r11,0x1
80006980:	68 18       	ld.w	r8,r4[0x4]
80006982:	10 3b       	cp.w	r11,r8
80006984:	e0 8b 00 0c 	brhi	8000699c <_malloc_r+0x2c8>
80006988:	58 0b       	cp.w	r11,0
8000698a:	c0 90       	breq	8000699c <_malloc_r+0x2c8>
8000698c:	04 93       	mov	r3,r2
8000698e:	c0 38       	rjmp	80006994 <_malloc_r+0x2c0>
80006990:	2f c3       	sub	r3,-4
80006992:	a1 7b       	lsl	r11,0x1
80006994:	f7 e8 00 09 	and	r9,r11,r8
80006998:	ca 81       	brne	800068e8 <_malloc_r+0x214>
8000699a:	cf bb       	rjmp	80006990 <_malloc_r+0x2bc>
8000699c:	68 23       	ld.w	r3,r4[0x8]
8000699e:	66 12       	ld.w	r2,r3[0x4]
800069a0:	e0 12 ff fc 	andl	r2,0xfffc
800069a4:	0e 32       	cp.w	r2,r7
800069a6:	5f 39       	srlo	r9
800069a8:	e4 07 01 08 	sub	r8,r2,r7
800069ac:	58 f8       	cp.w	r8,15
800069ae:	5f aa       	srle	r10
800069b0:	f5 e9 10 09 	or	r9,r10,r9
800069b4:	e0 80 00 9a 	breq	80006ae8 <_malloc_r+0x414>
800069b8:	e0 68 06 2c 	mov	r8,1580
800069bc:	70 01       	ld.w	r1,r8[0x0]
800069be:	e0 68 05 0c 	mov	r8,1292
800069c2:	2f 01       	sub	r1,-16
800069c4:	70 08       	ld.w	r8,r8[0x0]
800069c6:	0e 01       	add	r1,r7
800069c8:	5b f8       	cp.w	r8,-1
800069ca:	c0 40       	breq	800069d2 <_malloc_r+0x2fe>
800069cc:	28 11       	sub	r1,-127
800069ce:	e0 11 ff 80 	andl	r1,0xff80
800069d2:	02 9b       	mov	r11,r1
800069d4:	0a 9c       	mov	r12,r5
800069d6:	e0 a0 05 39 	rcall	80007448 <_sbrk_r>
800069da:	18 96       	mov	r6,r12
800069dc:	5b fc       	cp.w	r12,-1
800069de:	c7 50       	breq	80006ac8 <_malloc_r+0x3f4>
800069e0:	e6 02 00 08 	add	r8,r3,r2
800069e4:	10 3c       	cp.w	r12,r8
800069e6:	c0 32       	brcc	800069ec <_malloc_r+0x318>
800069e8:	08 33       	cp.w	r3,r4
800069ea:	c6 f1       	brne	80006ac8 <_malloc_r+0x3f4>
800069ec:	e0 6a 06 30 	mov	r10,1584
800069f0:	74 09       	ld.w	r9,r10[0x0]
800069f2:	e2 09 00 09 	add	r9,r1,r9
800069f6:	95 09       	st.w	r10[0x0],r9
800069f8:	10 36       	cp.w	r6,r8
800069fa:	c0 a1       	brne	80006a0e <_malloc_r+0x33a>
800069fc:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80006a00:	c0 71       	brne	80006a0e <_malloc_r+0x33a>
80006a02:	e2 02 00 02 	add	r2,r1,r2
80006a06:	68 28       	ld.w	r8,r4[0x8]
80006a08:	a1 a2       	sbr	r2,0x0
80006a0a:	91 12       	st.w	r8[0x4],r2
80006a0c:	c4 f8       	rjmp	80006aaa <_malloc_r+0x3d6>
80006a0e:	e0 6a 05 0c 	mov	r10,1292
80006a12:	74 0b       	ld.w	r11,r10[0x0]
80006a14:	5b fb       	cp.w	r11,-1
80006a16:	c0 31       	brne	80006a1c <_malloc_r+0x348>
80006a18:	95 06       	st.w	r10[0x0],r6
80006a1a:	c0 78       	rjmp	80006a28 <_malloc_r+0x354>
80006a1c:	ec 09 00 09 	add	r9,r6,r9
80006a20:	e0 6a 06 30 	mov	r10,1584
80006a24:	10 19       	sub	r9,r8
80006a26:	95 09       	st.w	r10[0x0],r9
80006a28:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80006a2c:	f0 09 11 08 	rsub	r9,r8,8
80006a30:	58 08       	cp.w	r8,0
80006a32:	f2 08 17 10 	movne	r8,r9
80006a36:	ed d8 e1 06 	addne	r6,r6,r8
80006a3a:	28 08       	sub	r8,-128
80006a3c:	ec 01 00 01 	add	r1,r6,r1
80006a40:	0a 9c       	mov	r12,r5
80006a42:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80006a46:	f0 01 01 01 	sub	r1,r8,r1
80006a4a:	02 9b       	mov	r11,r1
80006a4c:	e0 a0 04 fe 	rcall	80007448 <_sbrk_r>
80006a50:	e0 68 06 30 	mov	r8,1584
80006a54:	5b fc       	cp.w	r12,-1
80006a56:	ec 0c 17 00 	moveq	r12,r6
80006a5a:	f9 b1 00 00 	moveq	r1,0
80006a5e:	70 09       	ld.w	r9,r8[0x0]
80006a60:	0c 1c       	sub	r12,r6
80006a62:	89 26       	st.w	r4[0x8],r6
80006a64:	02 0c       	add	r12,r1
80006a66:	12 01       	add	r1,r9
80006a68:	a1 ac       	sbr	r12,0x0
80006a6a:	91 01       	st.w	r8[0x0],r1
80006a6c:	8d 1c       	st.w	r6[0x4],r12
80006a6e:	08 33       	cp.w	r3,r4
80006a70:	c1 d0       	breq	80006aaa <_malloc_r+0x3d6>
80006a72:	58 f2       	cp.w	r2,15
80006a74:	e0 8b 00 05 	brhi	80006a7e <_malloc_r+0x3aa>
80006a78:	30 18       	mov	r8,1
80006a7a:	8d 18       	st.w	r6[0x4],r8
80006a7c:	c2 68       	rjmp	80006ac8 <_malloc_r+0x3f4>
80006a7e:	30 59       	mov	r9,5
80006a80:	20 c2       	sub	r2,12
80006a82:	e0 12 ff f8 	andl	r2,0xfff8
80006a86:	e6 02 00 08 	add	r8,r3,r2
80006a8a:	91 29       	st.w	r8[0x8],r9
80006a8c:	91 19       	st.w	r8[0x4],r9
80006a8e:	66 18       	ld.w	r8,r3[0x4]
80006a90:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80006a94:	e5 e8 10 08 	or	r8,r2,r8
80006a98:	87 18       	st.w	r3[0x4],r8
80006a9a:	58 f2       	cp.w	r2,15
80006a9c:	e0 88 00 07 	brls	80006aaa <_malloc_r+0x3d6>
80006aa0:	e6 cb ff f8 	sub	r11,r3,-8
80006aa4:	0a 9c       	mov	r12,r5
80006aa6:	fe b0 fb 71 	rcall	80006188 <_free_r>
80006aaa:	e0 69 06 28 	mov	r9,1576
80006aae:	72 0a       	ld.w	r10,r9[0x0]
80006ab0:	e0 68 06 30 	mov	r8,1584
80006ab4:	70 08       	ld.w	r8,r8[0x0]
80006ab6:	14 38       	cp.w	r8,r10
80006ab8:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80006abc:	e0 69 06 24 	mov	r9,1572
80006ac0:	72 0a       	ld.w	r10,r9[0x0]
80006ac2:	14 38       	cp.w	r8,r10
80006ac4:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80006ac8:	68 28       	ld.w	r8,r4[0x8]
80006aca:	70 18       	ld.w	r8,r8[0x4]
80006acc:	e0 18 ff fc 	andl	r8,0xfffc
80006ad0:	0e 38       	cp.w	r8,r7
80006ad2:	5f 39       	srlo	r9
80006ad4:	0e 18       	sub	r8,r7
80006ad6:	58 f8       	cp.w	r8,15
80006ad8:	5f aa       	srle	r10
80006ada:	f5 e9 10 09 	or	r9,r10,r9
80006ade:	c0 50       	breq	80006ae8 <_malloc_r+0x414>
80006ae0:	0a 9c       	mov	r12,r5
80006ae2:	c4 3c       	rcall	80006b68 <__malloc_unlock>
80006ae4:	d8 3a       	popm	r0-r7,pc,r12=0
80006ae6:	d7 03       	nop
80006ae8:	68 26       	ld.w	r6,r4[0x8]
80006aea:	a1 a8       	sbr	r8,0x0
80006aec:	0e 99       	mov	r9,r7
80006aee:	a1 a9       	sbr	r9,0x0
80006af0:	8d 19       	st.w	r6[0x4],r9
80006af2:	ec 07 00 07 	add	r7,r6,r7
80006af6:	0a 9c       	mov	r12,r5
80006af8:	89 27       	st.w	r4[0x8],r7
80006afa:	8f 18       	st.w	r7[0x4],r8
80006afc:	c3 6c       	rcall	80006b68 <__malloc_unlock>
80006afe:	ec cc ff f8 	sub	r12,r6,-8
80006b02:	d8 32       	popm	r0-r7,pc

80006b04 <memchr>:
80006b04:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
80006b08:	c0 68       	rjmp	80006b14 <memchr+0x10>
80006b0a:	20 1a       	sub	r10,1
80006b0c:	19 88       	ld.ub	r8,r12[0x0]
80006b0e:	16 38       	cp.w	r8,r11
80006b10:	5e 0c       	reteq	r12
80006b12:	2f fc       	sub	r12,-1
80006b14:	58 0a       	cp.w	r10,0
80006b16:	cf a1       	brne	80006b0a <memchr+0x6>
80006b18:	5e fa       	retal	r10

80006b1a <memmove>:
80006b1a:	d4 01       	pushm	lr
80006b1c:	18 3b       	cp.w	r11,r12
80006b1e:	c1 92       	brcc	80006b50 <memmove+0x36>
80006b20:	f6 0a 00 09 	add	r9,r11,r10
80006b24:	12 3c       	cp.w	r12,r9
80006b26:	c1 52       	brcc	80006b50 <memmove+0x36>
80006b28:	f8 0a 00 0b 	add	r11,r12,r10
80006b2c:	30 08       	mov	r8,0
80006b2e:	c0 68       	rjmp	80006b3a <memmove+0x20>
80006b30:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80006b34:	20 1a       	sub	r10,1
80006b36:	f6 08 0b 0e 	st.b	r11[r8],lr
80006b3a:	20 18       	sub	r8,1
80006b3c:	58 0a       	cp.w	r10,0
80006b3e:	cf 91       	brne	80006b30 <memmove+0x16>
80006b40:	d8 02       	popm	pc
80006b42:	f6 08 07 09 	ld.ub	r9,r11[r8]
80006b46:	20 1a       	sub	r10,1
80006b48:	f8 08 0b 09 	st.b	r12[r8],r9
80006b4c:	2f f8       	sub	r8,-1
80006b4e:	c0 28       	rjmp	80006b52 <memmove+0x38>
80006b50:	30 08       	mov	r8,0
80006b52:	58 0a       	cp.w	r10,0
80006b54:	cf 71       	brne	80006b42 <memmove+0x28>
80006b56:	d8 02       	popm	pc

80006b58 <memset>:
80006b58:	18 98       	mov	r8,r12
80006b5a:	c0 38       	rjmp	80006b60 <memset+0x8>
80006b5c:	10 cb       	st.b	r8++,r11
80006b5e:	20 1a       	sub	r10,1
80006b60:	58 0a       	cp.w	r10,0
80006b62:	cf d1       	brne	80006b5c <memset+0x4>
80006b64:	5e fc       	retal	r12

80006b66 <__malloc_lock>:
80006b66:	5e fc       	retal	r12

80006b68 <__malloc_unlock>:
80006b68:	5e fc       	retal	r12

80006b6a <__hi0bits>:
80006b6a:	18 98       	mov	r8,r12
80006b6c:	e0 1c 00 00 	andl	r12,0x0
80006b70:	f0 09 15 10 	lsl	r9,r8,0x10
80006b74:	58 0c       	cp.w	r12,0
80006b76:	f2 08 17 00 	moveq	r8,r9
80006b7a:	f9 bc 00 10 	moveq	r12,16
80006b7e:	f9 bc 01 00 	movne	r12,0
80006b82:	10 9a       	mov	r10,r8
80006b84:	f0 09 15 08 	lsl	r9,r8,0x8
80006b88:	e6 1a ff 00 	andh	r10,0xff00,COH
80006b8c:	f7 bc 00 f8 	subeq	r12,-8
80006b90:	f2 08 17 00 	moveq	r8,r9
80006b94:	10 9a       	mov	r10,r8
80006b96:	f0 09 15 04 	lsl	r9,r8,0x4
80006b9a:	e6 1a f0 00 	andh	r10,0xf000,COH
80006b9e:	f7 bc 00 fc 	subeq	r12,-4
80006ba2:	f2 08 17 00 	moveq	r8,r9
80006ba6:	10 9a       	mov	r10,r8
80006ba8:	f0 09 15 02 	lsl	r9,r8,0x2
80006bac:	e6 1a c0 00 	andh	r10,0xc000,COH
80006bb0:	f7 bc 00 fe 	subeq	r12,-2
80006bb4:	f2 08 17 00 	moveq	r8,r9
80006bb8:	58 08       	cp.w	r8,0
80006bba:	5e 5c       	retlt	r12
80006bbc:	ed b8 00 1e 	bld	r8,0x1e
80006bc0:	f9 bc 01 20 	movne	r12,32
80006bc4:	f7 bc 00 ff 	subeq	r12,-1
80006bc8:	5e fc       	retal	r12

80006bca <__lo0bits>:
80006bca:	18 99       	mov	r9,r12
80006bcc:	78 08       	ld.w	r8,r12[0x0]
80006bce:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
80006bd2:	c1 50       	breq	80006bfc <__lo0bits+0x32>
80006bd4:	ed b8 00 00 	bld	r8,0x0
80006bd8:	c0 21       	brne	80006bdc <__lo0bits+0x12>
80006bda:	5e fd       	retal	0
80006bdc:	10 9b       	mov	r11,r8
80006bde:	f0 0a 16 01 	lsr	r10,r8,0x1
80006be2:	e2 1b 00 02 	andl	r11,0x2,COH
80006be6:	a3 88       	lsr	r8,0x2
80006be8:	58 0b       	cp.w	r11,0
80006bea:	f3 fa 1a 00 	st.wne	r9[0x0],r10
80006bee:	f9 bc 01 01 	movne	r12,1
80006bf2:	f3 f8 0a 00 	st.weq	r9[0x0],r8
80006bf6:	f9 bc 00 02 	moveq	r12,2
80006bfa:	5e fc       	retal	r12
80006bfc:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
80006c00:	f0 0b 16 10 	lsr	r11,r8,0x10
80006c04:	58 0a       	cp.w	r10,0
80006c06:	f6 08 17 00 	moveq	r8,r11
80006c0a:	f9 bc 00 10 	moveq	r12,16
80006c0e:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
80006c12:	f0 0a 16 08 	lsr	r10,r8,0x8
80006c16:	58 0b       	cp.w	r11,0
80006c18:	f7 bc 00 f8 	subeq	r12,-8
80006c1c:	f4 08 17 00 	moveq	r8,r10
80006c20:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80006c24:	f0 0a 16 04 	lsr	r10,r8,0x4
80006c28:	58 0b       	cp.w	r11,0
80006c2a:	f7 bc 00 fc 	subeq	r12,-4
80006c2e:	f4 08 17 00 	moveq	r8,r10
80006c32:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
80006c36:	f0 0a 16 02 	lsr	r10,r8,0x2
80006c3a:	58 0b       	cp.w	r11,0
80006c3c:	f7 bc 00 fe 	subeq	r12,-2
80006c40:	f4 08 17 00 	moveq	r8,r10
80006c44:	ed b8 00 00 	bld	r8,0x0
80006c48:	c0 60       	breq	80006c54 <__lo0bits+0x8a>
80006c4a:	a1 98       	lsr	r8,0x1
80006c4c:	c0 31       	brne	80006c52 <__lo0bits+0x88>
80006c4e:	32 0c       	mov	r12,32
80006c50:	5e fc       	retal	r12
80006c52:	2f fc       	sub	r12,-1
80006c54:	93 08       	st.w	r9[0x0],r8
80006c56:	5e fc       	retal	r12

80006c58 <__mcmp>:
80006c58:	d4 01       	pushm	lr
80006c5a:	18 98       	mov	r8,r12
80006c5c:	76 49       	ld.w	r9,r11[0x10]
80006c5e:	78 4c       	ld.w	r12,r12[0x10]
80006c60:	12 1c       	sub	r12,r9
80006c62:	c1 31       	brne	80006c88 <__mcmp+0x30>
80006c64:	2f b9       	sub	r9,-5
80006c66:	a3 69       	lsl	r9,0x2
80006c68:	12 0b       	add	r11,r9
80006c6a:	f0 09 00 09 	add	r9,r8,r9
80006c6e:	2e c8       	sub	r8,-20
80006c70:	13 4e       	ld.w	lr,--r9
80006c72:	17 4a       	ld.w	r10,--r11
80006c74:	14 3e       	cp.w	lr,r10
80006c76:	c0 60       	breq	80006c82 <__mcmp+0x2a>
80006c78:	f9 bc 03 ff 	movlo	r12,-1
80006c7c:	f9 bc 02 01 	movhs	r12,1
80006c80:	d8 02       	popm	pc
80006c82:	10 39       	cp.w	r9,r8
80006c84:	fe 9b ff f6 	brhi	80006c70 <__mcmp+0x18>
80006c88:	d8 02       	popm	pc
80006c8a:	d7 03       	nop

80006c8c <_Bfree>:
80006c8c:	d4 21       	pushm	r4-r7,lr
80006c8e:	18 97       	mov	r7,r12
80006c90:	16 95       	mov	r5,r11
80006c92:	78 96       	ld.w	r6,r12[0x24]
80006c94:	58 06       	cp.w	r6,0
80006c96:	c0 91       	brne	80006ca8 <_Bfree+0x1c>
80006c98:	31 0c       	mov	r12,16
80006c9a:	fe b0 fd 15 	rcall	800066c4 <malloc>
80006c9e:	99 36       	st.w	r12[0xc],r6
80006ca0:	8f 9c       	st.w	r7[0x24],r12
80006ca2:	99 16       	st.w	r12[0x4],r6
80006ca4:	99 26       	st.w	r12[0x8],r6
80006ca6:	99 06       	st.w	r12[0x0],r6
80006ca8:	58 05       	cp.w	r5,0
80006caa:	c0 90       	breq	80006cbc <_Bfree+0x30>
80006cac:	6a 19       	ld.w	r9,r5[0x4]
80006cae:	6e 98       	ld.w	r8,r7[0x24]
80006cb0:	70 38       	ld.w	r8,r8[0xc]
80006cb2:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
80006cb6:	8b 0a       	st.w	r5[0x0],r10
80006cb8:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
80006cbc:	d8 22       	popm	r4-r7,pc
80006cbe:	d7 03       	nop

80006cc0 <_Balloc>:
80006cc0:	d4 21       	pushm	r4-r7,lr
80006cc2:	18 97       	mov	r7,r12
80006cc4:	16 96       	mov	r6,r11
80006cc6:	78 95       	ld.w	r5,r12[0x24]
80006cc8:	58 05       	cp.w	r5,0
80006cca:	c0 91       	brne	80006cdc <_Balloc+0x1c>
80006ccc:	31 0c       	mov	r12,16
80006cce:	fe b0 fc fb 	rcall	800066c4 <malloc>
80006cd2:	99 35       	st.w	r12[0xc],r5
80006cd4:	8f 9c       	st.w	r7[0x24],r12
80006cd6:	99 15       	st.w	r12[0x4],r5
80006cd8:	99 25       	st.w	r12[0x8],r5
80006cda:	99 05       	st.w	r12[0x0],r5
80006cdc:	6e 95       	ld.w	r5,r7[0x24]
80006cde:	6a 38       	ld.w	r8,r5[0xc]
80006ce0:	58 08       	cp.w	r8,0
80006ce2:	c0 b1       	brne	80006cf8 <_Balloc+0x38>
80006ce4:	31 0a       	mov	r10,16
80006ce6:	30 4b       	mov	r11,4
80006ce8:	0e 9c       	mov	r12,r7
80006cea:	e0 a0 04 93 	rcall	80007610 <_calloc_r>
80006cee:	8b 3c       	st.w	r5[0xc],r12
80006cf0:	6e 98       	ld.w	r8,r7[0x24]
80006cf2:	70 3c       	ld.w	r12,r8[0xc]
80006cf4:	58 0c       	cp.w	r12,0
80006cf6:	c1 b0       	breq	80006d2c <_Balloc+0x6c>
80006cf8:	6e 98       	ld.w	r8,r7[0x24]
80006cfa:	70 38       	ld.w	r8,r8[0xc]
80006cfc:	f0 06 00 28 	add	r8,r8,r6<<0x2
80006d00:	70 0c       	ld.w	r12,r8[0x0]
80006d02:	58 0c       	cp.w	r12,0
80006d04:	c0 40       	breq	80006d0c <_Balloc+0x4c>
80006d06:	78 09       	ld.w	r9,r12[0x0]
80006d08:	91 09       	st.w	r8[0x0],r9
80006d0a:	c0 e8       	rjmp	80006d26 <_Balloc+0x66>
80006d0c:	0e 9c       	mov	r12,r7
80006d0e:	30 17       	mov	r7,1
80006d10:	0e 9b       	mov	r11,r7
80006d12:	ee 06 09 47 	lsl	r7,r7,r6
80006d16:	ee ca ff fb 	sub	r10,r7,-5
80006d1a:	a3 6a       	lsl	r10,0x2
80006d1c:	e0 a0 04 7a 	rcall	80007610 <_calloc_r>
80006d20:	c0 60       	breq	80006d2c <_Balloc+0x6c>
80006d22:	99 16       	st.w	r12[0x4],r6
80006d24:	99 27       	st.w	r12[0x8],r7
80006d26:	30 08       	mov	r8,0
80006d28:	99 38       	st.w	r12[0xc],r8
80006d2a:	99 48       	st.w	r12[0x10],r8
80006d2c:	d8 22       	popm	r4-r7,pc
80006d2e:	d7 03       	nop

80006d30 <__d2b>:
80006d30:	d4 31       	pushm	r0-r7,lr
80006d32:	20 2d       	sub	sp,8
80006d34:	16 93       	mov	r3,r11
80006d36:	12 96       	mov	r6,r9
80006d38:	10 95       	mov	r5,r8
80006d3a:	14 92       	mov	r2,r10
80006d3c:	30 1b       	mov	r11,1
80006d3e:	cc 1f       	rcall	80006cc0 <_Balloc>
80006d40:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
80006d44:	50 09       	stdsp	sp[0x0],r9
80006d46:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
80006d4a:	b5 a9       	sbr	r9,0x14
80006d4c:	f0 01 16 14 	lsr	r1,r8,0x14
80006d50:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006d54:	18 94       	mov	r4,r12
80006d56:	58 02       	cp.w	r2,0
80006d58:	c1 d0       	breq	80006d92 <__d2b+0x62>
80006d5a:	fa cc ff f8 	sub	r12,sp,-8
80006d5e:	18 d2       	st.w	--r12,r2
80006d60:	c3 5f       	rcall	80006bca <__lo0bits>
80006d62:	40 18       	lddsp	r8,sp[0x4]
80006d64:	c0 d0       	breq	80006d7e <__d2b+0x4e>
80006d66:	40 09       	lddsp	r9,sp[0x0]
80006d68:	f8 0a 11 20 	rsub	r10,r12,32
80006d6c:	f2 0a 09 4a 	lsl	r10,r9,r10
80006d70:	f5 e8 10 08 	or	r8,r10,r8
80006d74:	89 58       	st.w	r4[0x14],r8
80006d76:	f2 0c 0a 49 	lsr	r9,r9,r12
80006d7a:	50 09       	stdsp	sp[0x0],r9
80006d7c:	c0 28       	rjmp	80006d80 <__d2b+0x50>
80006d7e:	89 58       	st.w	r4[0x14],r8
80006d80:	40 08       	lddsp	r8,sp[0x0]
80006d82:	58 08       	cp.w	r8,0
80006d84:	f9 b3 01 02 	movne	r3,2
80006d88:	f9 b3 00 01 	moveq	r3,1
80006d8c:	89 68       	st.w	r4[0x18],r8
80006d8e:	89 43       	st.w	r4[0x10],r3
80006d90:	c0 88       	rjmp	80006da0 <__d2b+0x70>
80006d92:	1a 9c       	mov	r12,sp
80006d94:	c1 bf       	rcall	80006bca <__lo0bits>
80006d96:	30 13       	mov	r3,1
80006d98:	40 08       	lddsp	r8,sp[0x0]
80006d9a:	2e 0c       	sub	r12,-32
80006d9c:	89 43       	st.w	r4[0x10],r3
80006d9e:	89 58       	st.w	r4[0x14],r8
80006da0:	58 01       	cp.w	r1,0
80006da2:	c0 90       	breq	80006db4 <__d2b+0x84>
80006da4:	e2 c1 04 33 	sub	r1,r1,1075
80006da8:	18 01       	add	r1,r12
80006daa:	8d 01       	st.w	r6[0x0],r1
80006dac:	f8 0c 11 35 	rsub	r12,r12,53
80006db0:	8b 0c       	st.w	r5[0x0],r12
80006db2:	c0 c8       	rjmp	80006dca <__d2b+0x9a>
80006db4:	e6 c8 ff fc 	sub	r8,r3,-4
80006db8:	f8 cc 04 32 	sub	r12,r12,1074
80006dbc:	a5 73       	lsl	r3,0x5
80006dbe:	8d 0c       	st.w	r6[0x0],r12
80006dc0:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
80006dc4:	cd 3e       	rcall	80006b6a <__hi0bits>
80006dc6:	18 13       	sub	r3,r12
80006dc8:	8b 03       	st.w	r5[0x0],r3
80006dca:	08 9c       	mov	r12,r4
80006dcc:	2f ed       	sub	sp,-8
80006dce:	d8 32       	popm	r0-r7,pc

80006dd0 <__mdiff>:
80006dd0:	d4 31       	pushm	r0-r7,lr
80006dd2:	74 48       	ld.w	r8,r10[0x10]
80006dd4:	76 45       	ld.w	r5,r11[0x10]
80006dd6:	16 97       	mov	r7,r11
80006dd8:	14 96       	mov	r6,r10
80006dda:	10 15       	sub	r5,r8
80006ddc:	c1 31       	brne	80006e02 <__mdiff+0x32>
80006dde:	2f b8       	sub	r8,-5
80006de0:	ee ce ff ec 	sub	lr,r7,-20
80006de4:	a3 68       	lsl	r8,0x2
80006de6:	f4 08 00 0b 	add	r11,r10,r8
80006dea:	ee 08 00 08 	add	r8,r7,r8
80006dee:	11 4a       	ld.w	r10,--r8
80006df0:	17 49       	ld.w	r9,--r11
80006df2:	12 3a       	cp.w	r10,r9
80006df4:	c0 30       	breq	80006dfa <__mdiff+0x2a>
80006df6:	c0 e2       	brcc	80006e12 <__mdiff+0x42>
80006df8:	c0 78       	rjmp	80006e06 <__mdiff+0x36>
80006dfa:	1c 38       	cp.w	r8,lr
80006dfc:	fe 9b ff f9 	brhi	80006dee <__mdiff+0x1e>
80006e00:	c4 98       	rjmp	80006e92 <__mdiff+0xc2>
80006e02:	58 05       	cp.w	r5,0
80006e04:	c0 64       	brge	80006e10 <__mdiff+0x40>
80006e06:	0e 98       	mov	r8,r7
80006e08:	30 15       	mov	r5,1
80006e0a:	0c 97       	mov	r7,r6
80006e0c:	10 96       	mov	r6,r8
80006e0e:	c0 28       	rjmp	80006e12 <__mdiff+0x42>
80006e10:	30 05       	mov	r5,0
80006e12:	6e 1b       	ld.w	r11,r7[0x4]
80006e14:	c5 6f       	rcall	80006cc0 <_Balloc>
80006e16:	6e 49       	ld.w	r9,r7[0x10]
80006e18:	6c 44       	ld.w	r4,r6[0x10]
80006e1a:	99 35       	st.w	r12[0xc],r5
80006e1c:	2f b4       	sub	r4,-5
80006e1e:	f2 c5 ff fb 	sub	r5,r9,-5
80006e22:	ec 04 00 24 	add	r4,r6,r4<<0x2
80006e26:	ee 05 00 25 	add	r5,r7,r5<<0x2
80006e2a:	2e c6       	sub	r6,-20
80006e2c:	2e c7       	sub	r7,-20
80006e2e:	f8 c8 ff ec 	sub	r8,r12,-20
80006e32:	30 0a       	mov	r10,0
80006e34:	0f 0e       	ld.w	lr,r7++
80006e36:	0d 0b       	ld.w	r11,r6++
80006e38:	fc 02 16 10 	lsr	r2,lr,0x10
80006e3c:	f6 03 16 10 	lsr	r3,r11,0x10
80006e40:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80006e44:	e4 03 01 03 	sub	r3,r2,r3
80006e48:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80006e4c:	fc 0b 01 0b 	sub	r11,lr,r11
80006e50:	f6 0a 00 0a 	add	r10,r11,r10
80006e54:	b0 1a       	st.h	r8[0x2],r10
80006e56:	b1 4a       	asr	r10,0x10
80006e58:	e6 0a 00 0a 	add	r10,r3,r10
80006e5c:	b0 0a       	st.h	r8[0x0],r10
80006e5e:	2f c8       	sub	r8,-4
80006e60:	b1 4a       	asr	r10,0x10
80006e62:	08 36       	cp.w	r6,r4
80006e64:	ce 83       	brcs	80006e34 <__mdiff+0x64>
80006e66:	c0 d8       	rjmp	80006e80 <__mdiff+0xb0>
80006e68:	0f 0b       	ld.w	r11,r7++
80006e6a:	f6 0e 16 10 	lsr	lr,r11,0x10
80006e6e:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80006e72:	16 0a       	add	r10,r11
80006e74:	b0 1a       	st.h	r8[0x2],r10
80006e76:	b1 4a       	asr	r10,0x10
80006e78:	1c 0a       	add	r10,lr
80006e7a:	b0 0a       	st.h	r8[0x0],r10
80006e7c:	2f c8       	sub	r8,-4
80006e7e:	b1 4a       	asr	r10,0x10
80006e80:	0a 37       	cp.w	r7,r5
80006e82:	cf 33       	brcs	80006e68 <__mdiff+0x98>
80006e84:	c0 28       	rjmp	80006e88 <__mdiff+0xb8>
80006e86:	20 19       	sub	r9,1
80006e88:	11 4a       	ld.w	r10,--r8
80006e8a:	58 0a       	cp.w	r10,0
80006e8c:	cf d0       	breq	80006e86 <__mdiff+0xb6>
80006e8e:	99 49       	st.w	r12[0x10],r9
80006e90:	d8 32       	popm	r0-r7,pc
80006e92:	30 0b       	mov	r11,0
80006e94:	c1 6f       	rcall	80006cc0 <_Balloc>
80006e96:	30 18       	mov	r8,1
80006e98:	99 48       	st.w	r12[0x10],r8
80006e9a:	30 08       	mov	r8,0
80006e9c:	99 58       	st.w	r12[0x14],r8
80006e9e:	d8 32       	popm	r0-r7,pc

80006ea0 <__lshift>:
80006ea0:	d4 31       	pushm	r0-r7,lr
80006ea2:	16 97       	mov	r7,r11
80006ea4:	76 46       	ld.w	r6,r11[0x10]
80006ea6:	f4 02 14 05 	asr	r2,r10,0x5
80006eaa:	2f f6       	sub	r6,-1
80006eac:	14 93       	mov	r3,r10
80006eae:	18 94       	mov	r4,r12
80006eb0:	04 06       	add	r6,r2
80006eb2:	76 1b       	ld.w	r11,r11[0x4]
80006eb4:	6e 28       	ld.w	r8,r7[0x8]
80006eb6:	c0 38       	rjmp	80006ebc <__lshift+0x1c>
80006eb8:	2f fb       	sub	r11,-1
80006eba:	a1 78       	lsl	r8,0x1
80006ebc:	10 36       	cp.w	r6,r8
80006ebe:	fe 99 ff fd 	brgt	80006eb8 <__lshift+0x18>
80006ec2:	08 9c       	mov	r12,r4
80006ec4:	cf ee       	rcall	80006cc0 <_Balloc>
80006ec6:	30 09       	mov	r9,0
80006ec8:	18 95       	mov	r5,r12
80006eca:	f8 c8 ff ec 	sub	r8,r12,-20
80006ece:	12 9a       	mov	r10,r9
80006ed0:	c0 38       	rjmp	80006ed6 <__lshift+0x36>
80006ed2:	10 aa       	st.w	r8++,r10
80006ed4:	2f f9       	sub	r9,-1
80006ed6:	04 39       	cp.w	r9,r2
80006ed8:	cf d5       	brlt	80006ed2 <__lshift+0x32>
80006eda:	6e 4b       	ld.w	r11,r7[0x10]
80006edc:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
80006ee0:	2f bb       	sub	r11,-5
80006ee2:	ee c9 ff ec 	sub	r9,r7,-20
80006ee6:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
80006eea:	58 03       	cp.w	r3,0
80006eec:	c1 30       	breq	80006f12 <__lshift+0x72>
80006eee:	e6 0c 11 20 	rsub	r12,r3,32
80006ef2:	30 0a       	mov	r10,0
80006ef4:	72 02       	ld.w	r2,r9[0x0]
80006ef6:	e4 03 09 42 	lsl	r2,r2,r3
80006efa:	04 4a       	or	r10,r2
80006efc:	10 aa       	st.w	r8++,r10
80006efe:	13 0a       	ld.w	r10,r9++
80006f00:	f4 0c 0a 4a 	lsr	r10,r10,r12
80006f04:	16 39       	cp.w	r9,r11
80006f06:	cf 73       	brcs	80006ef4 <__lshift+0x54>
80006f08:	91 0a       	st.w	r8[0x0],r10
80006f0a:	58 0a       	cp.w	r10,0
80006f0c:	c0 70       	breq	80006f1a <__lshift+0x7a>
80006f0e:	2f f6       	sub	r6,-1
80006f10:	c0 58       	rjmp	80006f1a <__lshift+0x7a>
80006f12:	13 0a       	ld.w	r10,r9++
80006f14:	10 aa       	st.w	r8++,r10
80006f16:	16 39       	cp.w	r9,r11
80006f18:	cf d3       	brcs	80006f12 <__lshift+0x72>
80006f1a:	08 9c       	mov	r12,r4
80006f1c:	20 16       	sub	r6,1
80006f1e:	0e 9b       	mov	r11,r7
80006f20:	8b 46       	st.w	r5[0x10],r6
80006f22:	cb 5e       	rcall	80006c8c <_Bfree>
80006f24:	0a 9c       	mov	r12,r5
80006f26:	d8 32       	popm	r0-r7,pc

80006f28 <__multiply>:
80006f28:	d4 31       	pushm	r0-r7,lr
80006f2a:	20 2d       	sub	sp,8
80006f2c:	76 49       	ld.w	r9,r11[0x10]
80006f2e:	74 48       	ld.w	r8,r10[0x10]
80006f30:	16 96       	mov	r6,r11
80006f32:	14 95       	mov	r5,r10
80006f34:	10 39       	cp.w	r9,r8
80006f36:	ec 08 17 50 	movlt	r8,r6
80006f3a:	ea 06 17 50 	movlt	r6,r5
80006f3e:	f0 05 17 50 	movlt	r5,r8
80006f42:	6c 28       	ld.w	r8,r6[0x8]
80006f44:	76 43       	ld.w	r3,r11[0x10]
80006f46:	74 42       	ld.w	r2,r10[0x10]
80006f48:	76 1b       	ld.w	r11,r11[0x4]
80006f4a:	e4 03 00 07 	add	r7,r2,r3
80006f4e:	10 37       	cp.w	r7,r8
80006f50:	f7 bb 09 ff 	subgt	r11,-1
80006f54:	cb 6e       	rcall	80006cc0 <_Balloc>
80006f56:	ee c4 ff fb 	sub	r4,r7,-5
80006f5a:	f8 c9 ff ec 	sub	r9,r12,-20
80006f5e:	f8 04 00 24 	add	r4,r12,r4<<0x2
80006f62:	30 0a       	mov	r10,0
80006f64:	12 98       	mov	r8,r9
80006f66:	c0 28       	rjmp	80006f6a <__multiply+0x42>
80006f68:	10 aa       	st.w	r8++,r10
80006f6a:	08 38       	cp.w	r8,r4
80006f6c:	cf e3       	brcs	80006f68 <__multiply+0x40>
80006f6e:	2f b3       	sub	r3,-5
80006f70:	2f b2       	sub	r2,-5
80006f72:	ec 03 00 23 	add	r3,r6,r3<<0x2
80006f76:	ea 02 00 22 	add	r2,r5,r2<<0x2
80006f7a:	ec cb ff ec 	sub	r11,r6,-20
80006f7e:	50 12       	stdsp	sp[0x4],r2
80006f80:	ea ca ff ec 	sub	r10,r5,-20
80006f84:	c4 48       	rjmp	8000700c <__multiply+0xe4>
80006f86:	94 95       	ld.uh	r5,r10[0x2]
80006f88:	58 05       	cp.w	r5,0
80006f8a:	c2 00       	breq	80006fca <__multiply+0xa2>
80006f8c:	12 98       	mov	r8,r9
80006f8e:	16 96       	mov	r6,r11
80006f90:	30 0e       	mov	lr,0
80006f92:	50 09       	stdsp	sp[0x0],r9
80006f94:	0d 02       	ld.w	r2,r6++
80006f96:	e4 00 16 10 	lsr	r0,r2,0x10
80006f9a:	70 01       	ld.w	r1,r8[0x0]
80006f9c:	70 09       	ld.w	r9,r8[0x0]
80006f9e:	b1 81       	lsr	r1,0x10
80006fa0:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
80006fa4:	e0 05 03 41 	mac	r1,r0,r5
80006fa8:	ab 32       	mul	r2,r5
80006faa:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
80006fae:	00 02       	add	r2,r0
80006fb0:	e4 0e 00 0e 	add	lr,r2,lr
80006fb4:	b0 1e       	st.h	r8[0x2],lr
80006fb6:	b1 8e       	lsr	lr,0x10
80006fb8:	1c 01       	add	r1,lr
80006fba:	b0 01       	st.h	r8[0x0],r1
80006fbc:	e2 0e 16 10 	lsr	lr,r1,0x10
80006fc0:	2f c8       	sub	r8,-4
80006fc2:	06 36       	cp.w	r6,r3
80006fc4:	ce 83       	brcs	80006f94 <__multiply+0x6c>
80006fc6:	40 09       	lddsp	r9,sp[0x0]
80006fc8:	91 0e       	st.w	r8[0x0],lr
80006fca:	94 86       	ld.uh	r6,r10[0x0]
80006fcc:	58 06       	cp.w	r6,0
80006fce:	c1 d0       	breq	80007008 <__multiply+0xe0>
80006fd0:	72 02       	ld.w	r2,r9[0x0]
80006fd2:	12 98       	mov	r8,r9
80006fd4:	16 9e       	mov	lr,r11
80006fd6:	30 05       	mov	r5,0
80006fd8:	b0 12       	st.h	r8[0x2],r2
80006fda:	1d 01       	ld.w	r1,lr++
80006fdc:	90 82       	ld.uh	r2,r8[0x0]
80006fde:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
80006fe2:	ad 30       	mul	r0,r6
80006fe4:	e0 02 00 02 	add	r2,r0,r2
80006fe8:	e4 05 00 05 	add	r5,r2,r5
80006fec:	b0 05       	st.h	r8[0x0],r5
80006fee:	b1 85       	lsr	r5,0x10
80006ff0:	b1 81       	lsr	r1,0x10
80006ff2:	2f c8       	sub	r8,-4
80006ff4:	ad 31       	mul	r1,r6
80006ff6:	90 92       	ld.uh	r2,r8[0x2]
80006ff8:	e2 02 00 02 	add	r2,r1,r2
80006ffc:	0a 02       	add	r2,r5
80006ffe:	e4 05 16 10 	lsr	r5,r2,0x10
80007002:	06 3e       	cp.w	lr,r3
80007004:	ce a3       	brcs	80006fd8 <__multiply+0xb0>
80007006:	91 02       	st.w	r8[0x0],r2
80007008:	2f ca       	sub	r10,-4
8000700a:	2f c9       	sub	r9,-4
8000700c:	40 18       	lddsp	r8,sp[0x4]
8000700e:	10 3a       	cp.w	r10,r8
80007010:	cb b3       	brcs	80006f86 <__multiply+0x5e>
80007012:	c0 28       	rjmp	80007016 <__multiply+0xee>
80007014:	20 17       	sub	r7,1
80007016:	58 07       	cp.w	r7,0
80007018:	e0 8a 00 05 	brle	80007022 <__multiply+0xfa>
8000701c:	09 48       	ld.w	r8,--r4
8000701e:	58 08       	cp.w	r8,0
80007020:	cf a0       	breq	80007014 <__multiply+0xec>
80007022:	99 47       	st.w	r12[0x10],r7
80007024:	2f ed       	sub	sp,-8
80007026:	d8 32       	popm	r0-r7,pc

80007028 <__i2b>:
80007028:	d4 21       	pushm	r4-r7,lr
8000702a:	16 97       	mov	r7,r11
8000702c:	30 1b       	mov	r11,1
8000702e:	c4 9e       	rcall	80006cc0 <_Balloc>
80007030:	30 19       	mov	r9,1
80007032:	99 57       	st.w	r12[0x14],r7
80007034:	99 49       	st.w	r12[0x10],r9
80007036:	d8 22       	popm	r4-r7,pc

80007038 <__multadd>:
80007038:	d4 31       	pushm	r0-r7,lr
8000703a:	30 08       	mov	r8,0
8000703c:	12 95       	mov	r5,r9
8000703e:	16 97       	mov	r7,r11
80007040:	18 96       	mov	r6,r12
80007042:	76 44       	ld.w	r4,r11[0x10]
80007044:	f6 c9 ff ec 	sub	r9,r11,-20
80007048:	72 0b       	ld.w	r11,r9[0x0]
8000704a:	f6 0c 16 10 	lsr	r12,r11,0x10
8000704e:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80007052:	f4 0c 02 4c 	mul	r12,r10,r12
80007056:	f4 0b 03 45 	mac	r5,r10,r11
8000705a:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
8000705e:	b1 85       	lsr	r5,0x10
80007060:	18 05       	add	r5,r12
80007062:	ea 0c 15 10 	lsl	r12,r5,0x10
80007066:	f8 0b 00 0b 	add	r11,r12,r11
8000706a:	12 ab       	st.w	r9++,r11
8000706c:	2f f8       	sub	r8,-1
8000706e:	b1 85       	lsr	r5,0x10
80007070:	08 38       	cp.w	r8,r4
80007072:	ce b5       	brlt	80007048 <__multadd+0x10>
80007074:	58 05       	cp.w	r5,0
80007076:	c1 c0       	breq	800070ae <__multadd+0x76>
80007078:	6e 28       	ld.w	r8,r7[0x8]
8000707a:	10 34       	cp.w	r4,r8
8000707c:	c1 35       	brlt	800070a2 <__multadd+0x6a>
8000707e:	6e 1b       	ld.w	r11,r7[0x4]
80007080:	0c 9c       	mov	r12,r6
80007082:	2f fb       	sub	r11,-1
80007084:	c1 ee       	rcall	80006cc0 <_Balloc>
80007086:	6e 4a       	ld.w	r10,r7[0x10]
80007088:	ee cb ff f4 	sub	r11,r7,-12
8000708c:	18 93       	mov	r3,r12
8000708e:	2f ea       	sub	r10,-2
80007090:	2f 4c       	sub	r12,-12
80007092:	a3 6a       	lsl	r10,0x2
80007094:	fe b0 de 36 	rcall	80002d00 <memcpy>
80007098:	0e 9b       	mov	r11,r7
8000709a:	0c 9c       	mov	r12,r6
8000709c:	fe b0 fd f8 	rcall	80006c8c <_Bfree>
800070a0:	06 97       	mov	r7,r3
800070a2:	e8 c8 ff ff 	sub	r8,r4,-1
800070a6:	2f b4       	sub	r4,-5
800070a8:	8f 48       	st.w	r7[0x10],r8
800070aa:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
800070ae:	0e 9c       	mov	r12,r7
800070b0:	d8 32       	popm	r0-r7,pc
800070b2:	d7 03       	nop

800070b4 <__pow5mult>:
800070b4:	d4 31       	pushm	r0-r7,lr
800070b6:	14 96       	mov	r6,r10
800070b8:	18 97       	mov	r7,r12
800070ba:	16 94       	mov	r4,r11
800070bc:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
800070c0:	c0 90       	breq	800070d2 <__pow5mult+0x1e>
800070c2:	20 18       	sub	r8,1
800070c4:	fe c9 e2 cc 	sub	r9,pc,-7476
800070c8:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
800070cc:	30 09       	mov	r9,0
800070ce:	cb 5f       	rcall	80007038 <__multadd>
800070d0:	18 94       	mov	r4,r12
800070d2:	a3 46       	asr	r6,0x2
800070d4:	c3 40       	breq	8000713c <__pow5mult+0x88>
800070d6:	6e 95       	ld.w	r5,r7[0x24]
800070d8:	58 05       	cp.w	r5,0
800070da:	c0 91       	brne	800070ec <__pow5mult+0x38>
800070dc:	31 0c       	mov	r12,16
800070de:	fe b0 fa f3 	rcall	800066c4 <malloc>
800070e2:	99 35       	st.w	r12[0xc],r5
800070e4:	8f 9c       	st.w	r7[0x24],r12
800070e6:	99 15       	st.w	r12[0x4],r5
800070e8:	99 25       	st.w	r12[0x8],r5
800070ea:	99 05       	st.w	r12[0x0],r5
800070ec:	6e 93       	ld.w	r3,r7[0x24]
800070ee:	66 25       	ld.w	r5,r3[0x8]
800070f0:	58 05       	cp.w	r5,0
800070f2:	c0 c1       	brne	8000710a <__pow5mult+0x56>
800070f4:	e0 6b 02 71 	mov	r11,625
800070f8:	0e 9c       	mov	r12,r7
800070fa:	c9 7f       	rcall	80007028 <__i2b>
800070fc:	87 2c       	st.w	r3[0x8],r12
800070fe:	30 08       	mov	r8,0
80007100:	18 95       	mov	r5,r12
80007102:	99 08       	st.w	r12[0x0],r8
80007104:	c0 38       	rjmp	8000710a <__pow5mult+0x56>
80007106:	06 9c       	mov	r12,r3
80007108:	18 95       	mov	r5,r12
8000710a:	ed b6 00 00 	bld	r6,0x0
8000710e:	c0 b1       	brne	80007124 <__pow5mult+0x70>
80007110:	08 9b       	mov	r11,r4
80007112:	0a 9a       	mov	r10,r5
80007114:	0e 9c       	mov	r12,r7
80007116:	c0 9f       	rcall	80006f28 <__multiply>
80007118:	08 9b       	mov	r11,r4
8000711a:	18 93       	mov	r3,r12
8000711c:	0e 9c       	mov	r12,r7
8000711e:	06 94       	mov	r4,r3
80007120:	fe b0 fd b6 	rcall	80006c8c <_Bfree>
80007124:	a1 56       	asr	r6,0x1
80007126:	c0 b0       	breq	8000713c <__pow5mult+0x88>
80007128:	6a 03       	ld.w	r3,r5[0x0]
8000712a:	58 03       	cp.w	r3,0
8000712c:	ce d1       	brne	80007106 <__pow5mult+0x52>
8000712e:	0a 9a       	mov	r10,r5
80007130:	0a 9b       	mov	r11,r5
80007132:	0e 9c       	mov	r12,r7
80007134:	cf ae       	rcall	80006f28 <__multiply>
80007136:	8b 0c       	st.w	r5[0x0],r12
80007138:	99 03       	st.w	r12[0x0],r3
8000713a:	ce 7b       	rjmp	80007108 <__pow5mult+0x54>
8000713c:	08 9c       	mov	r12,r4
8000713e:	d8 32       	popm	r0-r7,pc

80007140 <_realloc_r>:
80007140:	d4 31       	pushm	r0-r7,lr
80007142:	20 1d       	sub	sp,4
80007144:	16 94       	mov	r4,r11
80007146:	18 92       	mov	r2,r12
80007148:	14 9b       	mov	r11,r10
8000714a:	58 04       	cp.w	r4,0
8000714c:	c0 51       	brne	80007156 <_realloc_r+0x16>
8000714e:	fe b0 fa c3 	rcall	800066d4 <_malloc_r>
80007152:	18 95       	mov	r5,r12
80007154:	c5 39       	rjmp	800073fa <_realloc_r+0x2ba>
80007156:	50 0a       	stdsp	sp[0x0],r10
80007158:	fe b0 fd 07 	rcall	80006b66 <__malloc_lock>
8000715c:	40 0b       	lddsp	r11,sp[0x0]
8000715e:	f6 c8 ff f5 	sub	r8,r11,-11
80007162:	e8 c1 00 08 	sub	r1,r4,8
80007166:	10 96       	mov	r6,r8
80007168:	62 1c       	ld.w	r12,r1[0x4]
8000716a:	e0 16 ff f8 	andl	r6,0xfff8
8000716e:	59 68       	cp.w	r8,22
80007170:	f9 b6 08 10 	movls	r6,16
80007174:	16 36       	cp.w	r6,r11
80007176:	5f 38       	srlo	r8
80007178:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
8000717c:	c0 50       	breq	80007186 <_realloc_r+0x46>
8000717e:	30 c8       	mov	r8,12
80007180:	30 05       	mov	r5,0
80007182:	85 38       	st.w	r2[0xc],r8
80007184:	c3 b9       	rjmp	800073fa <_realloc_r+0x2ba>
80007186:	18 90       	mov	r0,r12
80007188:	e0 10 ff fc 	andl	r0,0xfffc
8000718c:	0c 30       	cp.w	r0,r6
8000718e:	e0 84 01 0b 	brge	800073a4 <_realloc_r+0x264>
80007192:	e0 68 01 00 	mov	r8,256
80007196:	e2 00 00 09 	add	r9,r1,r0
8000719a:	70 25       	ld.w	r5,r8[0x8]
8000719c:	0a 39       	cp.w	r9,r5
8000719e:	c0 90       	breq	800071b0 <_realloc_r+0x70>
800071a0:	72 1a       	ld.w	r10,r9[0x4]
800071a2:	a1 ca       	cbr	r10,0x0
800071a4:	f2 0a 00 0a 	add	r10,r9,r10
800071a8:	74 1a       	ld.w	r10,r10[0x4]
800071aa:	ed ba 00 00 	bld	r10,0x0
800071ae:	c2 20       	breq	800071f2 <_realloc_r+0xb2>
800071b0:	72 1a       	ld.w	r10,r9[0x4]
800071b2:	e0 1a ff fc 	andl	r10,0xfffc
800071b6:	f4 00 00 03 	add	r3,r10,r0
800071ba:	0a 39       	cp.w	r9,r5
800071bc:	c1 31       	brne	800071e2 <_realloc_r+0xa2>
800071be:	ec c7 ff f0 	sub	r7,r6,-16
800071c2:	0e 33       	cp.w	r3,r7
800071c4:	c1 95       	brlt	800071f6 <_realloc_r+0xb6>
800071c6:	e2 06 00 09 	add	r9,r1,r6
800071ca:	0c 13       	sub	r3,r6
800071cc:	a1 a3       	sbr	r3,0x0
800071ce:	93 13       	st.w	r9[0x4],r3
800071d0:	91 29       	st.w	r8[0x8],r9
800071d2:	04 9c       	mov	r12,r2
800071d4:	62 18       	ld.w	r8,r1[0x4]
800071d6:	08 95       	mov	r5,r4
800071d8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800071dc:	10 46       	or	r6,r8
800071de:	83 16       	st.w	r1[0x4],r6
800071e0:	c0 b9       	rjmp	800073f6 <_realloc_r+0x2b6>
800071e2:	0c 33       	cp.w	r3,r6
800071e4:	c0 95       	brlt	800071f6 <_realloc_r+0xb6>
800071e6:	72 28       	ld.w	r8,r9[0x8]
800071e8:	02 97       	mov	r7,r1
800071ea:	72 39       	ld.w	r9,r9[0xc]
800071ec:	93 28       	st.w	r9[0x8],r8
800071ee:	91 39       	st.w	r8[0xc],r9
800071f0:	cd c8       	rjmp	800073a8 <_realloc_r+0x268>
800071f2:	30 0a       	mov	r10,0
800071f4:	14 99       	mov	r9,r10
800071f6:	ed bc 00 00 	bld	r12,0x0
800071fa:	e0 80 00 95 	breq	80007324 <_realloc_r+0x1e4>
800071fe:	62 07       	ld.w	r7,r1[0x0]
80007200:	e2 07 01 07 	sub	r7,r1,r7
80007204:	6e 1c       	ld.w	r12,r7[0x4]
80007206:	e0 1c ff fc 	andl	r12,0xfffc
8000720a:	58 09       	cp.w	r9,0
8000720c:	c5 60       	breq	800072b8 <_realloc_r+0x178>
8000720e:	f8 00 00 03 	add	r3,r12,r0
80007212:	0a 39       	cp.w	r9,r5
80007214:	c4 81       	brne	800072a4 <_realloc_r+0x164>
80007216:	14 03       	add	r3,r10
80007218:	ec c9 ff f0 	sub	r9,r6,-16
8000721c:	12 33       	cp.w	r3,r9
8000721e:	c4 d5       	brlt	800072b8 <_realloc_r+0x178>
80007220:	6e 3a       	ld.w	r10,r7[0xc]
80007222:	6e 29       	ld.w	r9,r7[0x8]
80007224:	95 29       	st.w	r10[0x8],r9
80007226:	93 3a       	st.w	r9[0xc],r10
80007228:	ee c5 ff f8 	sub	r5,r7,-8
8000722c:	e0 ca 00 04 	sub	r10,r0,4
80007230:	e0 4a 00 24 	cp.w	r10,36
80007234:	e0 8b 00 25 	brhi	8000727e <_realloc_r+0x13e>
80007238:	0a 99       	mov	r9,r5
8000723a:	59 3a       	cp.w	r10,19
8000723c:	e0 88 00 1a 	brls	80007270 <_realloc_r+0x130>
80007240:	09 09       	ld.w	r9,r4++
80007242:	8b 09       	st.w	r5[0x0],r9
80007244:	09 09       	ld.w	r9,r4++
80007246:	8f 39       	st.w	r7[0xc],r9
80007248:	ee c9 ff f0 	sub	r9,r7,-16
8000724c:	59 ba       	cp.w	r10,27
8000724e:	e0 88 00 11 	brls	80007270 <_realloc_r+0x130>
80007252:	09 0b       	ld.w	r11,r4++
80007254:	93 0b       	st.w	r9[0x0],r11
80007256:	09 09       	ld.w	r9,r4++
80007258:	8f 59       	st.w	r7[0x14],r9
8000725a:	ee c9 ff e8 	sub	r9,r7,-24
8000725e:	e0 4a 00 24 	cp.w	r10,36
80007262:	c0 71       	brne	80007270 <_realloc_r+0x130>
80007264:	09 0a       	ld.w	r10,r4++
80007266:	93 0a       	st.w	r9[0x0],r10
80007268:	ee c9 ff e0 	sub	r9,r7,-32
8000726c:	09 0a       	ld.w	r10,r4++
8000726e:	8f 7a       	st.w	r7[0x1c],r10
80007270:	09 0a       	ld.w	r10,r4++
80007272:	12 aa       	st.w	r9++,r10
80007274:	68 0a       	ld.w	r10,r4[0x0]
80007276:	93 0a       	st.w	r9[0x0],r10
80007278:	68 1a       	ld.w	r10,r4[0x4]
8000727a:	93 1a       	st.w	r9[0x4],r10
8000727c:	c0 78       	rjmp	8000728a <_realloc_r+0x14a>
8000727e:	50 08       	stdsp	sp[0x0],r8
80007280:	08 9b       	mov	r11,r4
80007282:	0a 9c       	mov	r12,r5
80007284:	fe b0 fc 4b 	rcall	80006b1a <memmove>
80007288:	40 08       	lddsp	r8,sp[0x0]
8000728a:	ee 06 00 09 	add	r9,r7,r6
8000728e:	0c 13       	sub	r3,r6
80007290:	a1 a3       	sbr	r3,0x0
80007292:	93 13       	st.w	r9[0x4],r3
80007294:	91 29       	st.w	r8[0x8],r9
80007296:	04 9c       	mov	r12,r2
80007298:	6e 18       	ld.w	r8,r7[0x4]
8000729a:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000729e:	10 46       	or	r6,r8
800072a0:	8f 16       	st.w	r7[0x4],r6
800072a2:	ca a8       	rjmp	800073f6 <_realloc_r+0x2b6>
800072a4:	14 03       	add	r3,r10
800072a6:	0c 33       	cp.w	r3,r6
800072a8:	c0 85       	brlt	800072b8 <_realloc_r+0x178>
800072aa:	72 28       	ld.w	r8,r9[0x8]
800072ac:	72 39       	ld.w	r9,r9[0xc]
800072ae:	93 28       	st.w	r9[0x8],r8
800072b0:	91 39       	st.w	r8[0xc],r9
800072b2:	6e 28       	ld.w	r8,r7[0x8]
800072b4:	6e 39       	ld.w	r9,r7[0xc]
800072b6:	c0 78       	rjmp	800072c4 <_realloc_r+0x184>
800072b8:	f8 00 00 03 	add	r3,r12,r0
800072bc:	0c 33       	cp.w	r3,r6
800072be:	c3 35       	brlt	80007324 <_realloc_r+0x1e4>
800072c0:	6e 39       	ld.w	r9,r7[0xc]
800072c2:	6e 28       	ld.w	r8,r7[0x8]
800072c4:	93 28       	st.w	r9[0x8],r8
800072c6:	91 39       	st.w	r8[0xc],r9
800072c8:	e0 ca 00 04 	sub	r10,r0,4
800072cc:	ee cc ff f8 	sub	r12,r7,-8
800072d0:	e0 4a 00 24 	cp.w	r10,36
800072d4:	e0 8b 00 24 	brhi	8000731c <_realloc_r+0x1dc>
800072d8:	59 3a       	cp.w	r10,19
800072da:	e0 88 00 1a 	brls	8000730e <_realloc_r+0x1ce>
800072de:	09 08       	ld.w	r8,r4++
800072e0:	99 08       	st.w	r12[0x0],r8
800072e2:	09 08       	ld.w	r8,r4++
800072e4:	8f 38       	st.w	r7[0xc],r8
800072e6:	ee cc ff f0 	sub	r12,r7,-16
800072ea:	59 ba       	cp.w	r10,27
800072ec:	e0 88 00 11 	brls	8000730e <_realloc_r+0x1ce>
800072f0:	09 08       	ld.w	r8,r4++
800072f2:	99 08       	st.w	r12[0x0],r8
800072f4:	09 08       	ld.w	r8,r4++
800072f6:	8f 58       	st.w	r7[0x14],r8
800072f8:	ee cc ff e8 	sub	r12,r7,-24
800072fc:	e0 4a 00 24 	cp.w	r10,36
80007300:	c0 71       	brne	8000730e <_realloc_r+0x1ce>
80007302:	09 08       	ld.w	r8,r4++
80007304:	99 08       	st.w	r12[0x0],r8
80007306:	ee cc ff e0 	sub	r12,r7,-32
8000730a:	09 08       	ld.w	r8,r4++
8000730c:	8f 78       	st.w	r7[0x1c],r8
8000730e:	09 08       	ld.w	r8,r4++
80007310:	18 a8       	st.w	r12++,r8
80007312:	68 08       	ld.w	r8,r4[0x0]
80007314:	99 08       	st.w	r12[0x0],r8
80007316:	68 18       	ld.w	r8,r4[0x4]
80007318:	99 18       	st.w	r12[0x4],r8
8000731a:	c4 78       	rjmp	800073a8 <_realloc_r+0x268>
8000731c:	08 9b       	mov	r11,r4
8000731e:	fe b0 fb fe 	rcall	80006b1a <memmove>
80007322:	c4 38       	rjmp	800073a8 <_realloc_r+0x268>
80007324:	04 9c       	mov	r12,r2
80007326:	fe b0 f9 d7 	rcall	800066d4 <_malloc_r>
8000732a:	18 95       	mov	r5,r12
8000732c:	c3 a0       	breq	800073a0 <_realloc_r+0x260>
8000732e:	62 18       	ld.w	r8,r1[0x4]
80007330:	f8 c9 00 08 	sub	r9,r12,8
80007334:	a1 c8       	cbr	r8,0x0
80007336:	e2 08 00 08 	add	r8,r1,r8
8000733a:	10 39       	cp.w	r9,r8
8000733c:	c0 71       	brne	8000734a <_realloc_r+0x20a>
8000733e:	72 13       	ld.w	r3,r9[0x4]
80007340:	02 97       	mov	r7,r1
80007342:	e0 13 ff fc 	andl	r3,0xfffc
80007346:	00 03       	add	r3,r0
80007348:	c3 08       	rjmp	800073a8 <_realloc_r+0x268>
8000734a:	e0 ca 00 04 	sub	r10,r0,4
8000734e:	e0 4a 00 24 	cp.w	r10,36
80007352:	e0 8b 00 20 	brhi	80007392 <_realloc_r+0x252>
80007356:	08 99       	mov	r9,r4
80007358:	18 98       	mov	r8,r12
8000735a:	59 3a       	cp.w	r10,19
8000735c:	e0 88 00 14 	brls	80007384 <_realloc_r+0x244>
80007360:	13 0b       	ld.w	r11,r9++
80007362:	10 ab       	st.w	r8++,r11
80007364:	13 0b       	ld.w	r11,r9++
80007366:	10 ab       	st.w	r8++,r11
80007368:	59 ba       	cp.w	r10,27
8000736a:	e0 88 00 0d 	brls	80007384 <_realloc_r+0x244>
8000736e:	13 0b       	ld.w	r11,r9++
80007370:	10 ab       	st.w	r8++,r11
80007372:	13 0b       	ld.w	r11,r9++
80007374:	10 ab       	st.w	r8++,r11
80007376:	e0 4a 00 24 	cp.w	r10,36
8000737a:	c0 51       	brne	80007384 <_realloc_r+0x244>
8000737c:	13 0a       	ld.w	r10,r9++
8000737e:	10 aa       	st.w	r8++,r10
80007380:	13 0a       	ld.w	r10,r9++
80007382:	10 aa       	st.w	r8++,r10
80007384:	13 0a       	ld.w	r10,r9++
80007386:	10 aa       	st.w	r8++,r10
80007388:	72 0a       	ld.w	r10,r9[0x0]
8000738a:	91 0a       	st.w	r8[0x0],r10
8000738c:	72 19       	ld.w	r9,r9[0x4]
8000738e:	91 19       	st.w	r8[0x4],r9
80007390:	c0 48       	rjmp	80007398 <_realloc_r+0x258>
80007392:	08 9b       	mov	r11,r4
80007394:	fe b0 fb c3 	rcall	80006b1a <memmove>
80007398:	08 9b       	mov	r11,r4
8000739a:	04 9c       	mov	r12,r2
8000739c:	fe b0 f6 f6 	rcall	80006188 <_free_r>
800073a0:	04 9c       	mov	r12,r2
800073a2:	c2 a8       	rjmp	800073f6 <_realloc_r+0x2b6>
800073a4:	00 93       	mov	r3,r0
800073a6:	02 97       	mov	r7,r1
800073a8:	e6 06 01 09 	sub	r9,r3,r6
800073ac:	6e 18       	ld.w	r8,r7[0x4]
800073ae:	58 f9       	cp.w	r9,15
800073b0:	e0 88 00 16 	brls	800073dc <_realloc_r+0x29c>
800073b4:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800073b8:	ed e8 10 08 	or	r8,r6,r8
800073bc:	8f 18       	st.w	r7[0x4],r8
800073be:	12 98       	mov	r8,r9
800073c0:	a1 a8       	sbr	r8,0x0
800073c2:	ee 06 00 0b 	add	r11,r7,r6
800073c6:	f6 09 00 09 	add	r9,r11,r9
800073ca:	97 18       	st.w	r11[0x4],r8
800073cc:	72 18       	ld.w	r8,r9[0x4]
800073ce:	a1 a8       	sbr	r8,0x0
800073d0:	2f 8b       	sub	r11,-8
800073d2:	93 18       	st.w	r9[0x4],r8
800073d4:	04 9c       	mov	r12,r2
800073d6:	fe b0 f6 d9 	rcall	80006188 <_free_r>
800073da:	c0 b8       	rjmp	800073f0 <_realloc_r+0x2b0>
800073dc:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800073e0:	e7 e8 10 08 	or	r8,r3,r8
800073e4:	8f 18       	st.w	r7[0x4],r8
800073e6:	ee 03 00 03 	add	r3,r7,r3
800073ea:	66 18       	ld.w	r8,r3[0x4]
800073ec:	a1 a8       	sbr	r8,0x0
800073ee:	87 18       	st.w	r3[0x4],r8
800073f0:	04 9c       	mov	r12,r2
800073f2:	ee c5 ff f8 	sub	r5,r7,-8
800073f6:	fe b0 fb b9 	rcall	80006b68 <__malloc_unlock>
800073fa:	0a 9c       	mov	r12,r5
800073fc:	2f fd       	sub	sp,-4
800073fe:	d8 32       	popm	r0-r7,pc

80007400 <__isinfd>:
80007400:	14 98       	mov	r8,r10
80007402:	fc 19 7f f0 	movh	r9,0x7ff0
80007406:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000740a:	f0 0b 11 00 	rsub	r11,r8,0
8000740e:	f7 e8 10 08 	or	r8,r11,r8
80007412:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
80007416:	f2 08 01 08 	sub	r8,r9,r8
8000741a:	f0 0c 11 00 	rsub	r12,r8,0
8000741e:	f9 e8 10 08 	or	r8,r12,r8
80007422:	f0 0c 14 1f 	asr	r12,r8,0x1f
80007426:	2f fc       	sub	r12,-1
80007428:	5e fc       	retal	r12

8000742a <__isnand>:
8000742a:	14 98       	mov	r8,r10
8000742c:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007430:	f0 0c 11 00 	rsub	r12,r8,0
80007434:	10 4c       	or	r12,r8
80007436:	fc 18 7f f0 	movh	r8,0x7ff0
8000743a:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
8000743e:	f0 0c 01 0c 	sub	r12,r8,r12
80007442:	bf 9c       	lsr	r12,0x1f
80007444:	5e fc       	retal	r12
80007446:	d7 03       	nop

80007448 <_sbrk_r>:
80007448:	d4 21       	pushm	r4-r7,lr
8000744a:	30 08       	mov	r8,0
8000744c:	18 97       	mov	r7,r12
8000744e:	e0 66 06 5c 	mov	r6,1628
80007452:	16 9c       	mov	r12,r11
80007454:	8d 08       	st.w	r6[0x0],r8
80007456:	ca fc       	rcall	800075b4 <_sbrk>
80007458:	5b fc       	cp.w	r12,-1
8000745a:	c0 51       	brne	80007464 <_sbrk_r+0x1c>
8000745c:	6c 08       	ld.w	r8,r6[0x0]
8000745e:	58 08       	cp.w	r8,0
80007460:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007464:	d8 22       	popm	r4-r7,pc
80007466:	d7 03       	nop

80007468 <__sclose>:
80007468:	d4 01       	pushm	lr
8000746a:	96 7b       	ld.sh	r11,r11[0xe]
8000746c:	cf ec       	rcall	80007668 <_close_r>
8000746e:	d8 02       	popm	pc

80007470 <__sseek>:
80007470:	d4 21       	pushm	r4-r7,lr
80007472:	16 97       	mov	r7,r11
80007474:	96 7b       	ld.sh	r11,r11[0xe]
80007476:	c8 5d       	rcall	80007780 <_lseek_r>
80007478:	8e 68       	ld.sh	r8,r7[0xc]
8000747a:	10 99       	mov	r9,r8
8000747c:	ad c8       	cbr	r8,0xc
8000747e:	ad a9       	sbr	r9,0xc
80007480:	5b fc       	cp.w	r12,-1
80007482:	ef f8 0c 06 	st.heq	r7[0xc],r8
80007486:	ef f9 1c 06 	st.hne	r7[0xc],r9
8000748a:	ef fc 1a 15 	st.wne	r7[0x54],r12
8000748e:	d8 22       	popm	r4-r7,pc

80007490 <__swrite>:
80007490:	d4 21       	pushm	r4-r7,lr
80007492:	96 68       	ld.sh	r8,r11[0xc]
80007494:	16 97       	mov	r7,r11
80007496:	14 95       	mov	r5,r10
80007498:	12 94       	mov	r4,r9
8000749a:	e2 18 01 00 	andl	r8,0x100,COH
8000749e:	18 96       	mov	r6,r12
800074a0:	c0 50       	breq	800074aa <__swrite+0x1a>
800074a2:	30 29       	mov	r9,2
800074a4:	30 0a       	mov	r10,0
800074a6:	96 7b       	ld.sh	r11,r11[0xe]
800074a8:	c6 cd       	rcall	80007780 <_lseek_r>
800074aa:	8e 68       	ld.sh	r8,r7[0xc]
800074ac:	ad c8       	cbr	r8,0xc
800074ae:	08 99       	mov	r9,r4
800074b0:	0a 9a       	mov	r10,r5
800074b2:	8e 7b       	ld.sh	r11,r7[0xe]
800074b4:	0c 9c       	mov	r12,r6
800074b6:	ae 68       	st.h	r7[0xc],r8
800074b8:	c9 ac       	rcall	800075ec <_write_r>
800074ba:	d8 22       	popm	r4-r7,pc

800074bc <__sread>:
800074bc:	d4 21       	pushm	r4-r7,lr
800074be:	16 97       	mov	r7,r11
800074c0:	96 7b       	ld.sh	r11,r11[0xe]
800074c2:	c7 1d       	rcall	800077a4 <_read_r>
800074c4:	c0 65       	brlt	800074d0 <__sread+0x14>
800074c6:	6f 58       	ld.w	r8,r7[0x54]
800074c8:	18 08       	add	r8,r12
800074ca:	ef 48 00 54 	st.w	r7[84],r8
800074ce:	d8 22       	popm	r4-r7,pc
800074d0:	8e 68       	ld.sh	r8,r7[0xc]
800074d2:	ad c8       	cbr	r8,0xc
800074d4:	ae 68       	st.h	r7[0xc],r8
800074d6:	d8 22       	popm	r4-r7,pc

800074d8 <strlen>:
800074d8:	30 09       	mov	r9,0
800074da:	18 98       	mov	r8,r12
800074dc:	c0 28       	rjmp	800074e0 <strlen+0x8>
800074de:	2f f8       	sub	r8,-1
800074e0:	11 8a       	ld.ub	r10,r8[0x0]
800074e2:	f2 0a 18 00 	cp.b	r10,r9
800074e6:	cf c1       	brne	800074de <strlen+0x6>
800074e8:	f0 0c 01 0c 	sub	r12,r8,r12
800074ec:	5e fc       	retal	r12
800074ee:	d7 03       	nop

800074f0 <_close>:
800074f0:	30 28       	mov	r8,2
800074f2:	d6 73       	breakpoint
800074f4:	3f fc       	mov	r12,-1
800074f6:	35 8b       	mov	r11,88
800074f8:	58 0c       	cp.w	r12,0
800074fa:	5e 4c       	retge	r12
800074fc:	e0 6a 06 5c 	mov	r10,1628
80007500:	95 0b       	st.w	r10[0x0],r11
80007502:	5e fc       	retal	r12

80007504 <_lseek>:
80007504:	30 58       	mov	r8,5
80007506:	d6 73       	breakpoint
80007508:	3f fc       	mov	r12,-1
8000750a:	35 8b       	mov	r11,88
8000750c:	58 0c       	cp.w	r12,0
8000750e:	5e 4c       	retge	r12
80007510:	e0 6a 06 5c 	mov	r10,1628
80007514:	95 0b       	st.w	r10[0x0],r11
80007516:	5e fc       	retal	r12

80007518 <_read>:
80007518:	30 38       	mov	r8,3
8000751a:	d6 73       	breakpoint
8000751c:	3f fc       	mov	r12,-1
8000751e:	35 8b       	mov	r11,88
80007520:	58 0c       	cp.w	r12,0
80007522:	5e 4c       	retge	r12
80007524:	e0 6a 06 5c 	mov	r10,1628
80007528:	95 0b       	st.w	r10[0x0],r11
8000752a:	5e fc       	retal	r12

8000752c <_write>:
8000752c:	30 48       	mov	r8,4
8000752e:	d6 73       	breakpoint
80007530:	3f fc       	mov	r12,-1
80007532:	35 8b       	mov	r11,88
80007534:	58 0c       	cp.w	r12,0
80007536:	5e 4c       	retge	r12
80007538:	e0 6a 06 5c 	mov	r10,1628
8000753c:	95 0b       	st.w	r10[0x0],r11
8000753e:	5e fc       	retal	r12

80007540 <isatty>:
80007540:	30 b8       	mov	r8,11
80007542:	d6 73       	breakpoint
80007544:	3f fc       	mov	r12,-1
80007546:	35 8b       	mov	r11,88
80007548:	58 0c       	cp.w	r12,0
8000754a:	5e 4c       	retge	r12
8000754c:	e0 6a 06 5c 	mov	r10,1628
80007550:	95 0b       	st.w	r10[0x0],r11
80007552:	5e fc       	retal	r12

80007554 <_fstat_host>:
80007554:	30 98       	mov	r8,9
80007556:	d6 73       	breakpoint
80007558:	3f fc       	mov	r12,-1
8000755a:	35 8b       	mov	r11,88
8000755c:	58 0c       	cp.w	r12,0
8000755e:	5e 4c       	retge	r12
80007560:	e0 6a 06 5c 	mov	r10,1628
80007564:	95 0b       	st.w	r10[0x0],r11
80007566:	5e fc       	retal	r12

80007568 <_fstat>:
80007568:	d4 21       	pushm	r4-r7,lr
8000756a:	21 0d       	sub	sp,64
8000756c:	16 97       	mov	r7,r11
8000756e:	1a 9b       	mov	r11,sp
80007570:	cf 2f       	rcall	80007554 <_fstat_host>
80007572:	c0 34       	brge	80007578 <_fstat+0x10>
80007574:	3f fc       	mov	r12,-1
80007576:	c1 c8       	rjmp	800075ae <_fstat+0x46>
80007578:	40 08       	lddsp	r8,sp[0x0]
8000757a:	ae 08       	st.h	r7[0x0],r8
8000757c:	40 18       	lddsp	r8,sp[0x4]
8000757e:	ae 18       	st.h	r7[0x2],r8
80007580:	40 28       	lddsp	r8,sp[0x8]
80007582:	8f 18       	st.w	r7[0x4],r8
80007584:	40 38       	lddsp	r8,sp[0xc]
80007586:	ae 48       	st.h	r7[0x8],r8
80007588:	40 48       	lddsp	r8,sp[0x10]
8000758a:	ae 58       	st.h	r7[0xa],r8
8000758c:	40 58       	lddsp	r8,sp[0x14]
8000758e:	ae 68       	st.h	r7[0xc],r8
80007590:	40 68       	lddsp	r8,sp[0x18]
80007592:	ae 78       	st.h	r7[0xe],r8
80007594:	40 88       	lddsp	r8,sp[0x20]
80007596:	8f 48       	st.w	r7[0x10],r8
80007598:	40 a8       	lddsp	r8,sp[0x28]
8000759a:	8f b8       	st.w	r7[0x2c],r8
8000759c:	40 c8       	lddsp	r8,sp[0x30]
8000759e:	8f c8       	st.w	r7[0x30],r8
800075a0:	40 d8       	lddsp	r8,sp[0x34]
800075a2:	8f 58       	st.w	r7[0x14],r8
800075a4:	40 e8       	lddsp	r8,sp[0x38]
800075a6:	30 0c       	mov	r12,0
800075a8:	8f 78       	st.w	r7[0x1c],r8
800075aa:	40 f8       	lddsp	r8,sp[0x3c]
800075ac:	8f 98       	st.w	r7[0x24],r8
800075ae:	2f 0d       	sub	sp,-64
800075b0:	d8 22       	popm	r4-r7,pc
800075b2:	d7 03       	nop

800075b4 <_sbrk>:
800075b4:	d4 01       	pushm	lr
800075b6:	e0 68 06 58 	mov	r8,1624
800075ba:	70 09       	ld.w	r9,r8[0x0]
800075bc:	58 09       	cp.w	r9,0
800075be:	c0 41       	brne	800075c6 <_sbrk+0x12>
800075c0:	e0 69 06 60 	mov	r9,1632
800075c4:	91 09       	st.w	r8[0x0],r9
800075c6:	e0 69 06 58 	mov	r9,1624
800075ca:	e0 6a f0 00 	mov	r10,61440
800075ce:	72 08       	ld.w	r8,r9[0x0]
800075d0:	f0 0c 00 0c 	add	r12,r8,r12
800075d4:	14 3c       	cp.w	r12,r10
800075d6:	e0 8b 00 04 	brhi	800075de <_sbrk+0x2a>
800075da:	93 0c       	st.w	r9[0x0],r12
800075dc:	c0 58       	rjmp	800075e6 <_sbrk+0x32>
800075de:	c5 5c       	rcall	80007688 <__errno>
800075e0:	30 c8       	mov	r8,12
800075e2:	99 08       	st.w	r12[0x0],r8
800075e4:	3f f8       	mov	r8,-1
800075e6:	10 9c       	mov	r12,r8
800075e8:	d8 02       	popm	pc
800075ea:	d7 03       	nop

800075ec <_write_r>:
800075ec:	d4 21       	pushm	r4-r7,lr
800075ee:	16 98       	mov	r8,r11
800075f0:	18 97       	mov	r7,r12
800075f2:	10 9c       	mov	r12,r8
800075f4:	30 08       	mov	r8,0
800075f6:	14 9b       	mov	r11,r10
800075f8:	e0 66 06 5c 	mov	r6,1628
800075fc:	12 9a       	mov	r10,r9
800075fe:	8d 08       	st.w	r6[0x0],r8
80007600:	c9 6f       	rcall	8000752c <_write>
80007602:	5b fc       	cp.w	r12,-1
80007604:	c0 51       	brne	8000760e <_write_r+0x22>
80007606:	6c 08       	ld.w	r8,r6[0x0]
80007608:	58 08       	cp.w	r8,0
8000760a:	ef f8 1a 03 	st.wne	r7[0xc],r8
8000760e:	d8 22       	popm	r4-r7,pc

80007610 <_calloc_r>:
80007610:	d4 21       	pushm	r4-r7,lr
80007612:	f4 0b 02 4b 	mul	r11,r10,r11
80007616:	fe b0 f8 5f 	rcall	800066d4 <_malloc_r>
8000761a:	18 97       	mov	r7,r12
8000761c:	c2 30       	breq	80007662 <_calloc_r+0x52>
8000761e:	f8 fa ff fc 	ld.w	r10,r12[-4]
80007622:	e0 1a ff fc 	andl	r10,0xfffc
80007626:	20 4a       	sub	r10,4
80007628:	e0 4a 00 24 	cp.w	r10,36
8000762c:	e0 8b 00 18 	brhi	8000765c <_calloc_r+0x4c>
80007630:	18 98       	mov	r8,r12
80007632:	59 3a       	cp.w	r10,19
80007634:	e0 88 00 0f 	brls	80007652 <_calloc_r+0x42>
80007638:	30 09       	mov	r9,0
8000763a:	10 a9       	st.w	r8++,r9
8000763c:	10 a9       	st.w	r8++,r9
8000763e:	59 ba       	cp.w	r10,27
80007640:	e0 88 00 09 	brls	80007652 <_calloc_r+0x42>
80007644:	10 a9       	st.w	r8++,r9
80007646:	10 a9       	st.w	r8++,r9
80007648:	e0 4a 00 24 	cp.w	r10,36
8000764c:	c0 31       	brne	80007652 <_calloc_r+0x42>
8000764e:	10 a9       	st.w	r8++,r9
80007650:	10 a9       	st.w	r8++,r9
80007652:	30 09       	mov	r9,0
80007654:	10 a9       	st.w	r8++,r9
80007656:	91 19       	st.w	r8[0x4],r9
80007658:	91 09       	st.w	r8[0x0],r9
8000765a:	c0 48       	rjmp	80007662 <_calloc_r+0x52>
8000765c:	30 0b       	mov	r11,0
8000765e:	fe b0 fa 7d 	rcall	80006b58 <memset>
80007662:	0e 9c       	mov	r12,r7
80007664:	d8 22       	popm	r4-r7,pc
80007666:	d7 03       	nop

80007668 <_close_r>:
80007668:	d4 21       	pushm	r4-r7,lr
8000766a:	30 08       	mov	r8,0
8000766c:	18 97       	mov	r7,r12
8000766e:	e0 66 06 5c 	mov	r6,1628
80007672:	16 9c       	mov	r12,r11
80007674:	8d 08       	st.w	r6[0x0],r8
80007676:	c3 df       	rcall	800074f0 <_close>
80007678:	5b fc       	cp.w	r12,-1
8000767a:	c0 51       	brne	80007684 <_close_r+0x1c>
8000767c:	6c 08       	ld.w	r8,r6[0x0]
8000767e:	58 08       	cp.w	r8,0
80007680:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007684:	d8 22       	popm	r4-r7,pc
80007686:	d7 03       	nop

80007688 <__errno>:
80007688:	e0 68 00 fc 	mov	r8,252
8000768c:	70 0c       	ld.w	r12,r8[0x0]
8000768e:	2f 4c       	sub	r12,-12
80007690:	5e fc       	retal	r12
80007692:	d7 03       	nop

80007694 <_fclose_r>:
80007694:	d4 21       	pushm	r4-r7,lr
80007696:	18 96       	mov	r6,r12
80007698:	16 97       	mov	r7,r11
8000769a:	58 0b       	cp.w	r11,0
8000769c:	c0 31       	brne	800076a2 <_fclose_r+0xe>
8000769e:	16 95       	mov	r5,r11
800076a0:	c5 38       	rjmp	80007746 <_fclose_r+0xb2>
800076a2:	fe b0 f4 87 	rcall	80005fb0 <__sfp_lock_acquire>
800076a6:	58 06       	cp.w	r6,0
800076a8:	c0 70       	breq	800076b6 <_fclose_r+0x22>
800076aa:	6c 68       	ld.w	r8,r6[0x18]
800076ac:	58 08       	cp.w	r8,0
800076ae:	c0 41       	brne	800076b6 <_fclose_r+0x22>
800076b0:	0c 9c       	mov	r12,r6
800076b2:	fe b0 f4 d1 	rcall	80006054 <__sinit>
800076b6:	fe c8 e9 5e 	sub	r8,pc,-5794
800076ba:	10 37       	cp.w	r7,r8
800076bc:	c0 31       	brne	800076c2 <_fclose_r+0x2e>
800076be:	6c 07       	ld.w	r7,r6[0x0]
800076c0:	c0 c8       	rjmp	800076d8 <_fclose_r+0x44>
800076c2:	fe c8 e9 4a 	sub	r8,pc,-5814
800076c6:	10 37       	cp.w	r7,r8
800076c8:	c0 31       	brne	800076ce <_fclose_r+0x3a>
800076ca:	6c 17       	ld.w	r7,r6[0x4]
800076cc:	c0 68       	rjmp	800076d8 <_fclose_r+0x44>
800076ce:	fe c8 e9 36 	sub	r8,pc,-5834
800076d2:	10 37       	cp.w	r7,r8
800076d4:	ed f7 00 02 	ld.weq	r7,r6[0x8]
800076d8:	8e 69       	ld.sh	r9,r7[0xc]
800076da:	30 08       	mov	r8,0
800076dc:	f0 09 19 00 	cp.h	r9,r8
800076e0:	c0 51       	brne	800076ea <_fclose_r+0x56>
800076e2:	fe b0 f4 68 	rcall	80005fb2 <__sfp_lock_release>
800076e6:	30 05       	mov	r5,0
800076e8:	c2 f8       	rjmp	80007746 <_fclose_r+0xb2>
800076ea:	0e 9b       	mov	r11,r7
800076ec:	0c 9c       	mov	r12,r6
800076ee:	fe b0 f3 db 	rcall	80005ea4 <_fflush_r>
800076f2:	6e c8       	ld.w	r8,r7[0x30]
800076f4:	18 95       	mov	r5,r12
800076f6:	58 08       	cp.w	r8,0
800076f8:	c0 60       	breq	80007704 <_fclose_r+0x70>
800076fa:	6e 8b       	ld.w	r11,r7[0x20]
800076fc:	0c 9c       	mov	r12,r6
800076fe:	5d 18       	icall	r8
80007700:	f9 b5 05 ff 	movlt	r5,-1
80007704:	8e 68       	ld.sh	r8,r7[0xc]
80007706:	ed b8 00 07 	bld	r8,0x7
8000770a:	c0 51       	brne	80007714 <_fclose_r+0x80>
8000770c:	6e 4b       	ld.w	r11,r7[0x10]
8000770e:	0c 9c       	mov	r12,r6
80007710:	fe b0 f5 3c 	rcall	80006188 <_free_r>
80007714:	6e db       	ld.w	r11,r7[0x34]
80007716:	58 0b       	cp.w	r11,0
80007718:	c0 a0       	breq	8000772c <_fclose_r+0x98>
8000771a:	ee c8 ff bc 	sub	r8,r7,-68
8000771e:	10 3b       	cp.w	r11,r8
80007720:	c0 40       	breq	80007728 <_fclose_r+0x94>
80007722:	0c 9c       	mov	r12,r6
80007724:	fe b0 f5 32 	rcall	80006188 <_free_r>
80007728:	30 08       	mov	r8,0
8000772a:	8f d8       	st.w	r7[0x34],r8
8000772c:	6f 2b       	ld.w	r11,r7[0x48]
8000772e:	58 0b       	cp.w	r11,0
80007730:	c0 70       	breq	8000773e <_fclose_r+0xaa>
80007732:	0c 9c       	mov	r12,r6
80007734:	fe b0 f5 2a 	rcall	80006188 <_free_r>
80007738:	30 08       	mov	r8,0
8000773a:	ef 48 00 48 	st.w	r7[72],r8
8000773e:	30 08       	mov	r8,0
80007740:	ae 68       	st.h	r7[0xc],r8
80007742:	fe b0 f4 38 	rcall	80005fb2 <__sfp_lock_release>
80007746:	0a 9c       	mov	r12,r5
80007748:	d8 22       	popm	r4-r7,pc
8000774a:	d7 03       	nop

8000774c <fclose>:
8000774c:	d4 01       	pushm	lr
8000774e:	e0 68 00 fc 	mov	r8,252
80007752:	18 9b       	mov	r11,r12
80007754:	70 0c       	ld.w	r12,r8[0x0]
80007756:	c9 ff       	rcall	80007694 <_fclose_r>
80007758:	d8 02       	popm	pc
8000775a:	d7 03       	nop

8000775c <_fstat_r>:
8000775c:	d4 21       	pushm	r4-r7,lr
8000775e:	16 98       	mov	r8,r11
80007760:	18 97       	mov	r7,r12
80007762:	10 9c       	mov	r12,r8
80007764:	30 08       	mov	r8,0
80007766:	e0 66 06 5c 	mov	r6,1628
8000776a:	14 9b       	mov	r11,r10
8000776c:	8d 08       	st.w	r6[0x0],r8
8000776e:	cf de       	rcall	80007568 <_fstat>
80007770:	5b fc       	cp.w	r12,-1
80007772:	c0 51       	brne	8000777c <_fstat_r+0x20>
80007774:	6c 08       	ld.w	r8,r6[0x0]
80007776:	58 08       	cp.w	r8,0
80007778:	ef f8 1a 03 	st.wne	r7[0xc],r8
8000777c:	d8 22       	popm	r4-r7,pc
8000777e:	d7 03       	nop

80007780 <_lseek_r>:
80007780:	d4 21       	pushm	r4-r7,lr
80007782:	16 98       	mov	r8,r11
80007784:	18 97       	mov	r7,r12
80007786:	10 9c       	mov	r12,r8
80007788:	30 08       	mov	r8,0
8000778a:	14 9b       	mov	r11,r10
8000778c:	e0 66 06 5c 	mov	r6,1628
80007790:	12 9a       	mov	r10,r9
80007792:	8d 08       	st.w	r6[0x0],r8
80007794:	cb 8e       	rcall	80007504 <_lseek>
80007796:	5b fc       	cp.w	r12,-1
80007798:	c0 51       	brne	800077a2 <_lseek_r+0x22>
8000779a:	6c 08       	ld.w	r8,r6[0x0]
8000779c:	58 08       	cp.w	r8,0
8000779e:	ef f8 1a 03 	st.wne	r7[0xc],r8
800077a2:	d8 22       	popm	r4-r7,pc

800077a4 <_read_r>:
800077a4:	d4 21       	pushm	r4-r7,lr
800077a6:	16 98       	mov	r8,r11
800077a8:	18 97       	mov	r7,r12
800077aa:	10 9c       	mov	r12,r8
800077ac:	30 08       	mov	r8,0
800077ae:	14 9b       	mov	r11,r10
800077b0:	e0 66 06 5c 	mov	r6,1628
800077b4:	12 9a       	mov	r10,r9
800077b6:	8d 08       	st.w	r6[0x0],r8
800077b8:	cb 0e       	rcall	80007518 <_read>
800077ba:	5b fc       	cp.w	r12,-1
800077bc:	c0 51       	brne	800077c6 <_read_r+0x22>
800077be:	6c 08       	ld.w	r8,r6[0x0]
800077c0:	58 08       	cp.w	r8,0
800077c2:	ef f8 1a 03 	st.wne	r7[0xc],r8
800077c6:	d8 22       	popm	r4-r7,pc

800077c8 <__avr32_f64_mul>:
800077c8:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
800077cc:	e0 80 00 dc 	breq	80007984 <__avr32_f64_mul_op1_zero>
800077d0:	d4 21       	pushm	r4-r7,lr
800077d2:	f7 e9 20 0e 	eor	lr,r11,r9
800077d6:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
800077da:	30 15       	mov	r5,1
800077dc:	c4 30       	breq	80007862 <__avr32_f64_mul_op1_subnormal>
800077de:	ab 6b       	lsl	r11,0xa
800077e0:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
800077e4:	ab 6a       	lsl	r10,0xa
800077e6:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
800077ea:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
800077ee:	c5 c0       	breq	800078a6 <__avr32_f64_mul_op2_subnormal>
800077f0:	a1 78       	lsl	r8,0x1
800077f2:	5c f9       	rol	r9
800077f4:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
800077f8:	e0 47 07 ff 	cp.w	r7,2047
800077fc:	c7 70       	breq	800078ea <__avr32_f64_mul_op_nan_or_inf>
800077fe:	e0 46 07 ff 	cp.w	r6,2047
80007802:	c7 40       	breq	800078ea <__avr32_f64_mul_op_nan_or_inf>
80007804:	ee 06 00 0c 	add	r12,r7,r6
80007808:	e0 2c 03 fe 	sub	r12,1022
8000780c:	f6 08 06 44 	mulu.d	r4,r11,r8
80007810:	f4 09 07 44 	macu.d	r4,r10,r9
80007814:	f4 08 06 46 	mulu.d	r6,r10,r8
80007818:	f6 09 06 4a 	mulu.d	r10,r11,r9
8000781c:	08 07       	add	r7,r4
8000781e:	f4 05 00 4a 	adc	r10,r10,r5
80007822:	5c 0b       	acr	r11
80007824:	ed bb 00 14 	bld	r11,0x14
80007828:	c0 50       	breq	80007832 <__avr32_f64_mul+0x6a>
8000782a:	a1 77       	lsl	r7,0x1
8000782c:	5c fa       	rol	r10
8000782e:	5c fb       	rol	r11
80007830:	20 1c       	sub	r12,1
80007832:	58 0c       	cp.w	r12,0
80007834:	e0 8a 00 6f 	brle	80007912 <__avr32_f64_mul_res_subnormal>
80007838:	e0 4c 07 ff 	cp.w	r12,2047
8000783c:	e0 84 00 9c 	brge	80007974 <__avr32_f64_mul_res_inf>
80007840:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80007844:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
80007848:	ef e6 12 17 	or	r7,r7,r6>>0x1
8000784c:	ee 17 80 00 	eorh	r7,0x8000
80007850:	f1 b7 04 20 	satu	r7,0x1
80007854:	0e 0a       	add	r10,r7
80007856:	5c 0b       	acr	r11
80007858:	ed be 00 1f 	bld	lr,0x1f
8000785c:	ef bb 00 1f 	bst	r11,0x1f
80007860:	d8 22       	popm	r4-r7,pc

80007862 <__avr32_f64_mul_op1_subnormal>:
80007862:	e4 1b 00 0f 	andh	r11,0xf
80007866:	f4 0c 12 00 	clz	r12,r10
8000786a:	f6 06 12 00 	clz	r6,r11
8000786e:	f7 bc 03 e1 	sublo	r12,-31
80007872:	f8 06 17 30 	movlo	r6,r12
80007876:	f7 b6 02 01 	subhs	r6,1
8000787a:	e0 46 00 20 	cp.w	r6,32
8000787e:	c0 d4       	brge	80007898 <__avr32_f64_mul_op1_subnormal+0x36>
80007880:	ec 0c 11 20 	rsub	r12,r6,32
80007884:	f6 06 09 4b 	lsl	r11,r11,r6
80007888:	f4 0c 0a 4c 	lsr	r12,r10,r12
8000788c:	18 4b       	or	r11,r12
8000788e:	f4 06 09 4a 	lsl	r10,r10,r6
80007892:	20 b6       	sub	r6,11
80007894:	0c 17       	sub	r7,r6
80007896:	ca ab       	rjmp	800077ea <__avr32_f64_mul+0x22>
80007898:	f4 06 09 4b 	lsl	r11,r10,r6
8000789c:	c6 40       	breq	80007964 <__avr32_f64_mul_res_zero>
8000789e:	30 0a       	mov	r10,0
800078a0:	20 b6       	sub	r6,11
800078a2:	0c 17       	sub	r7,r6
800078a4:	ca 3b       	rjmp	800077ea <__avr32_f64_mul+0x22>

800078a6 <__avr32_f64_mul_op2_subnormal>:
800078a6:	e4 19 00 0f 	andh	r9,0xf
800078aa:	f0 0c 12 00 	clz	r12,r8
800078ae:	f2 05 12 00 	clz	r5,r9
800078b2:	f7 bc 03 ea 	sublo	r12,-22
800078b6:	f8 05 17 30 	movlo	r5,r12
800078ba:	f7 b5 02 0a 	subhs	r5,10
800078be:	e0 45 00 20 	cp.w	r5,32
800078c2:	c0 d4       	brge	800078dc <__avr32_f64_mul_op2_subnormal+0x36>
800078c4:	ea 0c 11 20 	rsub	r12,r5,32
800078c8:	f2 05 09 49 	lsl	r9,r9,r5
800078cc:	f0 0c 0a 4c 	lsr	r12,r8,r12
800078d0:	18 49       	or	r9,r12
800078d2:	f0 05 09 48 	lsl	r8,r8,r5
800078d6:	20 25       	sub	r5,2
800078d8:	0a 16       	sub	r6,r5
800078da:	c8 fb       	rjmp	800077f8 <__avr32_f64_mul+0x30>
800078dc:	f0 05 09 49 	lsl	r9,r8,r5
800078e0:	c4 20       	breq	80007964 <__avr32_f64_mul_res_zero>
800078e2:	30 08       	mov	r8,0
800078e4:	20 25       	sub	r5,2
800078e6:	0a 16       	sub	r6,r5
800078e8:	c8 8b       	rjmp	800077f8 <__avr32_f64_mul+0x30>

800078ea <__avr32_f64_mul_op_nan_or_inf>:
800078ea:	e4 19 00 0f 	andh	r9,0xf
800078ee:	e4 1b 00 0f 	andh	r11,0xf
800078f2:	14 4b       	or	r11,r10
800078f4:	10 49       	or	r9,r8
800078f6:	e0 47 07 ff 	cp.w	r7,2047
800078fa:	c0 91       	brne	8000790c <__avr32_f64_mul_op1_not_naninf>
800078fc:	58 0b       	cp.w	r11,0
800078fe:	c3 81       	brne	8000796e <__avr32_f64_mul_res_nan>
80007900:	e0 46 07 ff 	cp.w	r6,2047
80007904:	c3 81       	brne	80007974 <__avr32_f64_mul_res_inf>
80007906:	58 09       	cp.w	r9,0
80007908:	c3 60       	breq	80007974 <__avr32_f64_mul_res_inf>
8000790a:	c3 28       	rjmp	8000796e <__avr32_f64_mul_res_nan>

8000790c <__avr32_f64_mul_op1_not_naninf>:
8000790c:	58 09       	cp.w	r9,0
8000790e:	c3 30       	breq	80007974 <__avr32_f64_mul_res_inf>
80007910:	c2 f8       	rjmp	8000796e <__avr32_f64_mul_res_nan>

80007912 <__avr32_f64_mul_res_subnormal>:
80007912:	5c 3c       	neg	r12
80007914:	2f fc       	sub	r12,-1
80007916:	f1 bc 04 c0 	satu	r12,0x6
8000791a:	e0 4c 00 20 	cp.w	r12,32
8000791e:	c1 14       	brge	80007940 <__avr32_f64_mul_res_subnormal+0x2e>
80007920:	f8 08 11 20 	rsub	r8,r12,32
80007924:	0e 46       	or	r6,r7
80007926:	ee 0c 0a 47 	lsr	r7,r7,r12
8000792a:	f4 08 09 49 	lsl	r9,r10,r8
8000792e:	12 47       	or	r7,r9
80007930:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007934:	f6 08 09 49 	lsl	r9,r11,r8
80007938:	12 4a       	or	r10,r9
8000793a:	f6 0c 0a 4b 	lsr	r11,r11,r12
8000793e:	c8 3b       	rjmp	80007844 <__avr32_f64_mul+0x7c>
80007940:	f8 08 11 20 	rsub	r8,r12,32
80007944:	f9 b9 00 00 	moveq	r9,0
80007948:	c0 30       	breq	8000794e <__avr32_f64_mul_res_subnormal+0x3c>
8000794a:	f6 08 09 49 	lsl	r9,r11,r8
8000794e:	0e 46       	or	r6,r7
80007950:	ed ea 10 16 	or	r6,r6,r10<<0x1
80007954:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007958:	f3 ea 10 07 	or	r7,r9,r10
8000795c:	f6 0c 0a 4a 	lsr	r10,r11,r12
80007960:	30 0b       	mov	r11,0
80007962:	c7 1b       	rjmp	80007844 <__avr32_f64_mul+0x7c>

80007964 <__avr32_f64_mul_res_zero>:
80007964:	1c 9b       	mov	r11,lr
80007966:	e6 1b 80 00 	andh	r11,0x8000,COH
8000796a:	30 0a       	mov	r10,0
8000796c:	d8 22       	popm	r4-r7,pc

8000796e <__avr32_f64_mul_res_nan>:
8000796e:	3f fb       	mov	r11,-1
80007970:	3f fa       	mov	r10,-1
80007972:	d8 22       	popm	r4-r7,pc

80007974 <__avr32_f64_mul_res_inf>:
80007974:	f0 6b 00 00 	mov	r11,-1048576
80007978:	ed be 00 1f 	bld	lr,0x1f
8000797c:	ef bb 00 1f 	bst	r11,0x1f
80007980:	30 0a       	mov	r10,0
80007982:	d8 22       	popm	r4-r7,pc

80007984 <__avr32_f64_mul_op1_zero>:
80007984:	f7 e9 20 0b 	eor	r11,r11,r9
80007988:	e6 1b 80 00 	andh	r11,0x8000,COH
8000798c:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80007990:	e0 4c 07 ff 	cp.w	r12,2047
80007994:	5e 1c       	retne	r12
80007996:	3f fa       	mov	r10,-1
80007998:	3f fb       	mov	r11,-1
8000799a:	5e fc       	retal	r12

8000799c <__avr32_f64_sub_from_add>:
8000799c:	ee 19 80 00 	eorh	r9,0x8000

800079a0 <__avr32_f64_sub>:
800079a0:	f7 e9 20 0c 	eor	r12,r11,r9
800079a4:	e0 86 00 ca 	brmi	80007b38 <__avr32_f64_add_from_sub>
800079a8:	eb cd 40 e0 	pushm	r5-r7,lr
800079ac:	16 9c       	mov	r12,r11
800079ae:	e6 1c 80 00 	andh	r12,0x8000,COH
800079b2:	bf db       	cbr	r11,0x1f
800079b4:	bf d9       	cbr	r9,0x1f
800079b6:	10 3a       	cp.w	r10,r8
800079b8:	f2 0b 13 00 	cpc	r11,r9
800079bc:	c0 92       	brcc	800079ce <__avr32_f64_sub+0x2e>
800079be:	16 97       	mov	r7,r11
800079c0:	12 9b       	mov	r11,r9
800079c2:	0e 99       	mov	r9,r7
800079c4:	14 97       	mov	r7,r10
800079c6:	10 9a       	mov	r10,r8
800079c8:	0e 98       	mov	r8,r7
800079ca:	ee 1c 80 00 	eorh	r12,0x8000
800079ce:	f6 07 16 14 	lsr	r7,r11,0x14
800079d2:	ab 7b       	lsl	r11,0xb
800079d4:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
800079d8:	ab 7a       	lsl	r10,0xb
800079da:	bf bb       	sbr	r11,0x1f
800079dc:	f2 06 16 14 	lsr	r6,r9,0x14
800079e0:	c4 40       	breq	80007a68 <__avr32_f64_sub_opL_subnormal>
800079e2:	ab 79       	lsl	r9,0xb
800079e4:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800079e8:	ab 78       	lsl	r8,0xb
800079ea:	bf b9       	sbr	r9,0x1f

800079ec <__avr32_f64_sub_opL_subnormal_done>:
800079ec:	e0 47 07 ff 	cp.w	r7,2047
800079f0:	c4 f0       	breq	80007a8e <__avr32_f64_sub_opH_nan_or_inf>
800079f2:	0e 26       	rsub	r6,r7
800079f4:	c1 20       	breq	80007a18 <__avr32_f64_sub_shift_done>
800079f6:	ec 05 11 20 	rsub	r5,r6,32
800079fa:	e0 46 00 20 	cp.w	r6,32
800079fe:	c7 c2       	brcc	80007af6 <__avr32_f64_sub_longshift>
80007a00:	f0 05 09 4e 	lsl	lr,r8,r5
80007a04:	f2 05 09 45 	lsl	r5,r9,r5
80007a08:	f0 06 0a 48 	lsr	r8,r8,r6
80007a0c:	f2 06 0a 49 	lsr	r9,r9,r6
80007a10:	0a 48       	or	r8,r5
80007a12:	58 0e       	cp.w	lr,0
80007a14:	5f 1e       	srne	lr
80007a16:	1c 48       	or	r8,lr

80007a18 <__avr32_f64_sub_shift_done>:
80007a18:	10 1a       	sub	r10,r8
80007a1a:	f6 09 01 4b 	sbc	r11,r11,r9
80007a1e:	f6 06 12 00 	clz	r6,r11
80007a22:	c0 e0       	breq	80007a3e <__avr32_f64_sub_longnormalize_done>
80007a24:	c7 83       	brcs	80007b14 <__avr32_f64_sub_longnormalize>
80007a26:	ec 0e 11 20 	rsub	lr,r6,32
80007a2a:	f6 06 09 4b 	lsl	r11,r11,r6
80007a2e:	f4 0e 0a 4e 	lsr	lr,r10,lr
80007a32:	1c 4b       	or	r11,lr
80007a34:	f4 06 09 4a 	lsl	r10,r10,r6
80007a38:	0c 17       	sub	r7,r6
80007a3a:	e0 8a 00 39 	brle	80007aac <__avr32_f64_sub_subnormal_result>

80007a3e <__avr32_f64_sub_longnormalize_done>:
80007a3e:	f4 09 15 15 	lsl	r9,r10,0x15
80007a42:	ab 9a       	lsr	r10,0xb
80007a44:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80007a48:	ab 9b       	lsr	r11,0xb
80007a4a:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80007a4e:	18 4b       	or	r11,r12

80007a50 <__avr32_f64_sub_round>:
80007a50:	fc 17 80 00 	movh	r7,0x8000
80007a54:	ed ba 00 00 	bld	r10,0x0
80007a58:	f7 b7 01 ff 	subne	r7,-1
80007a5c:	0e 39       	cp.w	r9,r7
80007a5e:	5f 29       	srhs	r9
80007a60:	12 0a       	add	r10,r9
80007a62:	5c 0b       	acr	r11
80007a64:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007a68 <__avr32_f64_sub_opL_subnormal>:
80007a68:	ab 79       	lsl	r9,0xb
80007a6a:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80007a6e:	ab 78       	lsl	r8,0xb
80007a70:	f3 e8 10 0e 	or	lr,r9,r8
80007a74:	f9 b6 01 01 	movne	r6,1
80007a78:	ee 0e 11 00 	rsub	lr,r7,0
80007a7c:	f9 b7 00 01 	moveq	r7,1
80007a80:	ef bb 00 1f 	bst	r11,0x1f
80007a84:	f7 ea 10 0e 	or	lr,r11,r10
80007a88:	f9 b7 00 00 	moveq	r7,0
80007a8c:	cb 0b       	rjmp	800079ec <__avr32_f64_sub_opL_subnormal_done>

80007a8e <__avr32_f64_sub_opH_nan_or_inf>:
80007a8e:	bf db       	cbr	r11,0x1f
80007a90:	f7 ea 10 0e 	or	lr,r11,r10
80007a94:	c0 81       	brne	80007aa4 <__avr32_f64_sub_return_nan>
80007a96:	e0 46 07 ff 	cp.w	r6,2047
80007a9a:	c0 50       	breq	80007aa4 <__avr32_f64_sub_return_nan>
80007a9c:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80007aa0:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007aa4 <__avr32_f64_sub_return_nan>:
80007aa4:	3f fa       	mov	r10,-1
80007aa6:	3f fb       	mov	r11,-1
80007aa8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007aac <__avr32_f64_sub_subnormal_result>:
80007aac:	5c 37       	neg	r7
80007aae:	2f f7       	sub	r7,-1
80007ab0:	f1 b7 04 c0 	satu	r7,0x6
80007ab4:	e0 47 00 20 	cp.w	r7,32
80007ab8:	c1 14       	brge	80007ada <__avr32_f64_sub_subnormal_result+0x2e>
80007aba:	ee 08 11 20 	rsub	r8,r7,32
80007abe:	f4 08 09 49 	lsl	r9,r10,r8
80007ac2:	5f 16       	srne	r6
80007ac4:	f4 07 0a 4a 	lsr	r10,r10,r7
80007ac8:	0c 4a       	or	r10,r6
80007aca:	f6 08 09 49 	lsl	r9,r11,r8
80007ace:	f5 e9 10 0a 	or	r10,r10,r9
80007ad2:	f4 07 0a 4b 	lsr	r11,r10,r7
80007ad6:	30 07       	mov	r7,0
80007ad8:	cb 3b       	rjmp	80007a3e <__avr32_f64_sub_longnormalize_done>
80007ada:	ee 08 11 40 	rsub	r8,r7,64
80007ade:	f6 08 09 49 	lsl	r9,r11,r8
80007ae2:	14 49       	or	r9,r10
80007ae4:	5f 16       	srne	r6
80007ae6:	f6 07 0a 4a 	lsr	r10,r11,r7
80007aea:	0c 4a       	or	r10,r6
80007aec:	30 0b       	mov	r11,0
80007aee:	30 07       	mov	r7,0
80007af0:	ca 7b       	rjmp	80007a3e <__avr32_f64_sub_longnormalize_done>
80007af2:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007af6 <__avr32_f64_sub_longshift>:
80007af6:	f1 b6 04 c0 	satu	r6,0x6
80007afa:	f0 0e 17 00 	moveq	lr,r8
80007afe:	c0 40       	breq	80007b06 <__avr32_f64_sub_longshift+0x10>
80007b00:	f2 05 09 4e 	lsl	lr,r9,r5
80007b04:	10 4e       	or	lr,r8
80007b06:	f2 06 0a 48 	lsr	r8,r9,r6
80007b0a:	30 09       	mov	r9,0
80007b0c:	58 0e       	cp.w	lr,0
80007b0e:	5f 1e       	srne	lr
80007b10:	1c 48       	or	r8,lr
80007b12:	c8 3b       	rjmp	80007a18 <__avr32_f64_sub_shift_done>

80007b14 <__avr32_f64_sub_longnormalize>:
80007b14:	f4 06 12 00 	clz	r6,r10
80007b18:	f9 b7 03 00 	movlo	r7,0
80007b1c:	f9 b6 03 00 	movlo	r6,0
80007b20:	f9 bc 03 00 	movlo	r12,0
80007b24:	f7 b6 02 e0 	subhs	r6,-32
80007b28:	f4 06 09 4b 	lsl	r11,r10,r6
80007b2c:	30 0a       	mov	r10,0
80007b2e:	0c 17       	sub	r7,r6
80007b30:	fe 9a ff be 	brle	80007aac <__avr32_f64_sub_subnormal_result>
80007b34:	c8 5b       	rjmp	80007a3e <__avr32_f64_sub_longnormalize_done>
80007b36:	d7 03       	nop

80007b38 <__avr32_f64_add_from_sub>:
80007b38:	ee 19 80 00 	eorh	r9,0x8000

80007b3c <__avr32_f64_add>:
80007b3c:	f7 e9 20 0c 	eor	r12,r11,r9
80007b40:	fe 96 ff 2e 	brmi	8000799c <__avr32_f64_sub_from_add>
80007b44:	eb cd 40 e0 	pushm	r5-r7,lr
80007b48:	16 9c       	mov	r12,r11
80007b4a:	e6 1c 80 00 	andh	r12,0x8000,COH
80007b4e:	bf db       	cbr	r11,0x1f
80007b50:	bf d9       	cbr	r9,0x1f
80007b52:	12 3b       	cp.w	r11,r9
80007b54:	c0 72       	brcc	80007b62 <__avr32_f64_add+0x26>
80007b56:	16 97       	mov	r7,r11
80007b58:	12 9b       	mov	r11,r9
80007b5a:	0e 99       	mov	r9,r7
80007b5c:	14 97       	mov	r7,r10
80007b5e:	10 9a       	mov	r10,r8
80007b60:	0e 98       	mov	r8,r7
80007b62:	30 0e       	mov	lr,0
80007b64:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80007b68:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80007b6c:	b5 ab       	sbr	r11,0x14
80007b6e:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80007b72:	c6 20       	breq	80007c36 <__avr32_f64_add_op2_subnormal>
80007b74:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80007b78:	b5 a9       	sbr	r9,0x14
80007b7a:	e0 47 07 ff 	cp.w	r7,2047
80007b7e:	c2 80       	breq	80007bce <__avr32_f64_add_opH_nan_or_inf>
80007b80:	0e 26       	rsub	r6,r7
80007b82:	c1 20       	breq	80007ba6 <__avr32_f64_add_shift_done>
80007b84:	e0 46 00 36 	cp.w	r6,54
80007b88:	c1 52       	brcc	80007bb2 <__avr32_f64_add_res_of_done>
80007b8a:	ec 05 11 20 	rsub	r5,r6,32
80007b8e:	e0 46 00 20 	cp.w	r6,32
80007b92:	c3 52       	brcc	80007bfc <__avr32_f64_add_longshift>
80007b94:	f0 05 09 4e 	lsl	lr,r8,r5
80007b98:	f2 05 09 45 	lsl	r5,r9,r5
80007b9c:	f0 06 0a 48 	lsr	r8,r8,r6
80007ba0:	f2 06 0a 49 	lsr	r9,r9,r6
80007ba4:	0a 48       	or	r8,r5

80007ba6 <__avr32_f64_add_shift_done>:
80007ba6:	10 0a       	add	r10,r8
80007ba8:	f6 09 00 4b 	adc	r11,r11,r9
80007bac:	ed bb 00 15 	bld	r11,0x15
80007bb0:	c3 40       	breq	80007c18 <__avr32_f64_add_res_of>

80007bb2 <__avr32_f64_add_res_of_done>:
80007bb2:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80007bb6:	18 4b       	or	r11,r12

80007bb8 <__avr32_f64_add_round>:
80007bb8:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80007bbc:	18 4e       	or	lr,r12
80007bbe:	ee 1e 80 00 	eorh	lr,0x8000
80007bc2:	f1 be 04 20 	satu	lr,0x1
80007bc6:	1c 0a       	add	r10,lr
80007bc8:	5c 0b       	acr	r11
80007bca:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007bce <__avr32_f64_add_opH_nan_or_inf>:
80007bce:	b5 cb       	cbr	r11,0x14
80007bd0:	f7 ea 10 0e 	or	lr,r11,r10
80007bd4:	c1 01       	brne	80007bf4 <__avr32_f64_add_return_nan>
80007bd6:	e0 46 07 ff 	cp.w	r6,2047
80007bda:	c0 30       	breq	80007be0 <__avr32_f64_add_opL_nan_or_inf>
80007bdc:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007be0 <__avr32_f64_add_opL_nan_or_inf>:
80007be0:	b5 c9       	cbr	r9,0x14
80007be2:	f3 e8 10 0e 	or	lr,r9,r8
80007be6:	c0 71       	brne	80007bf4 <__avr32_f64_add_return_nan>
80007be8:	30 0a       	mov	r10,0
80007bea:	fc 1b 7f f0 	movh	r11,0x7ff0
80007bee:	18 4b       	or	r11,r12
80007bf0:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007bf4 <__avr32_f64_add_return_nan>:
80007bf4:	3f fa       	mov	r10,-1
80007bf6:	3f fb       	mov	r11,-1
80007bf8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007bfc <__avr32_f64_add_longshift>:
80007bfc:	f1 b6 04 c0 	satu	r6,0x6
80007c00:	f0 0e 17 00 	moveq	lr,r8
80007c04:	c0 60       	breq	80007c10 <__avr32_f64_add_longshift+0x14>
80007c06:	f2 05 09 4e 	lsl	lr,r9,r5
80007c0a:	58 08       	cp.w	r8,0
80007c0c:	5f 18       	srne	r8
80007c0e:	10 4e       	or	lr,r8
80007c10:	f2 06 0a 48 	lsr	r8,r9,r6
80007c14:	30 09       	mov	r9,0
80007c16:	cc 8b       	rjmp	80007ba6 <__avr32_f64_add_shift_done>

80007c18 <__avr32_f64_add_res_of>:
80007c18:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80007c1c:	a1 9b       	lsr	r11,0x1
80007c1e:	5d 0a       	ror	r10
80007c20:	5d 0e       	ror	lr
80007c22:	2f f7       	sub	r7,-1
80007c24:	e0 47 07 ff 	cp.w	r7,2047
80007c28:	f9 ba 00 00 	moveq	r10,0
80007c2c:	f9 bb 00 00 	moveq	r11,0
80007c30:	f9 be 00 00 	moveq	lr,0
80007c34:	cb fb       	rjmp	80007bb2 <__avr32_f64_add_res_of_done>

80007c36 <__avr32_f64_add_op2_subnormal>:
80007c36:	30 16       	mov	r6,1
80007c38:	58 07       	cp.w	r7,0
80007c3a:	ca 01       	brne	80007b7a <__avr32_f64_add+0x3e>
80007c3c:	b5 cb       	cbr	r11,0x14
80007c3e:	10 0a       	add	r10,r8
80007c40:	f6 09 00 4b 	adc	r11,r11,r9
80007c44:	18 4b       	or	r11,r12
80007c46:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80007c4a:	d7 03       	nop

80007c4c <__avr32_f64_to_u32>:
80007c4c:	58 0b       	cp.w	r11,0
80007c4e:	5e 6d       	retmi	0

80007c50 <__avr32_f64_to_s32>:
80007c50:	f6 0c 15 01 	lsl	r12,r11,0x1
80007c54:	b5 9c       	lsr	r12,0x15
80007c56:	e0 2c 03 ff 	sub	r12,1023
80007c5a:	5e 3d       	retlo	0
80007c5c:	f8 0c 11 1f 	rsub	r12,r12,31
80007c60:	16 99       	mov	r9,r11
80007c62:	ab 7b       	lsl	r11,0xb
80007c64:	bf bb       	sbr	r11,0x1f
80007c66:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80007c6a:	f6 0c 0a 4b 	lsr	r11,r11,r12
80007c6e:	a1 79       	lsl	r9,0x1
80007c70:	5e 2b       	reths	r11
80007c72:	5c 3b       	neg	r11
80007c74:	5e fb       	retal	r11

80007c76 <__avr32_u32_to_f64>:
80007c76:	f8 cb 00 00 	sub	r11,r12,0
80007c7a:	30 0c       	mov	r12,0
80007c7c:	c0 38       	rjmp	80007c82 <__avr32_s32_to_f64+0x4>

80007c7e <__avr32_s32_to_f64>:
80007c7e:	18 9b       	mov	r11,r12
80007c80:	5c 4b       	abs	r11
80007c82:	30 0a       	mov	r10,0
80007c84:	5e 0b       	reteq	r11
80007c86:	d4 01       	pushm	lr
80007c88:	e0 69 04 1e 	mov	r9,1054
80007c8c:	f6 08 12 00 	clz	r8,r11
80007c90:	c1 70       	breq	80007cbe <__avr32_s32_to_f64+0x40>
80007c92:	c0 c3       	brcs	80007caa <__avr32_s32_to_f64+0x2c>
80007c94:	f0 0e 11 20 	rsub	lr,r8,32
80007c98:	f6 08 09 4b 	lsl	r11,r11,r8
80007c9c:	f4 0e 0a 4e 	lsr	lr,r10,lr
80007ca0:	1c 4b       	or	r11,lr
80007ca2:	f4 08 09 4a 	lsl	r10,r10,r8
80007ca6:	10 19       	sub	r9,r8
80007ca8:	c0 b8       	rjmp	80007cbe <__avr32_s32_to_f64+0x40>
80007caa:	f4 08 12 00 	clz	r8,r10
80007cae:	f9 b8 03 00 	movlo	r8,0
80007cb2:	f7 b8 02 e0 	subhs	r8,-32
80007cb6:	f4 08 09 4b 	lsl	r11,r10,r8
80007cba:	30 0a       	mov	r10,0
80007cbc:	10 19       	sub	r9,r8
80007cbe:	58 09       	cp.w	r9,0
80007cc0:	e0 89 00 30 	brgt	80007d20 <__avr32_s32_to_f64+0xa2>
80007cc4:	5c 39       	neg	r9
80007cc6:	2f f9       	sub	r9,-1
80007cc8:	e0 49 00 36 	cp.w	r9,54
80007ccc:	c0 43       	brcs	80007cd4 <__avr32_s32_to_f64+0x56>
80007cce:	30 0b       	mov	r11,0
80007cd0:	30 0a       	mov	r10,0
80007cd2:	c2 68       	rjmp	80007d1e <__avr32_s32_to_f64+0xa0>
80007cd4:	2f 69       	sub	r9,-10
80007cd6:	f2 08 11 20 	rsub	r8,r9,32
80007cda:	e0 49 00 20 	cp.w	r9,32
80007cde:	c0 b2       	brcc	80007cf4 <__avr32_s32_to_f64+0x76>
80007ce0:	f4 08 09 4e 	lsl	lr,r10,r8
80007ce4:	f6 08 09 48 	lsl	r8,r11,r8
80007ce8:	f4 09 0a 4a 	lsr	r10,r10,r9
80007cec:	f6 09 0a 4b 	lsr	r11,r11,r9
80007cf0:	10 4b       	or	r11,r8
80007cf2:	c0 88       	rjmp	80007d02 <__avr32_s32_to_f64+0x84>
80007cf4:	f6 08 09 4e 	lsl	lr,r11,r8
80007cf8:	14 4e       	or	lr,r10
80007cfa:	16 9a       	mov	r10,r11
80007cfc:	30 0b       	mov	r11,0
80007cfe:	f4 09 0a 4a 	lsr	r10,r10,r9
80007d02:	ed ba 00 00 	bld	r10,0x0
80007d06:	c0 92       	brcc	80007d18 <__avr32_s32_to_f64+0x9a>
80007d08:	1c 7e       	tst	lr,lr
80007d0a:	c0 41       	brne	80007d12 <__avr32_s32_to_f64+0x94>
80007d0c:	ed ba 00 01 	bld	r10,0x1
80007d10:	c0 42       	brcc	80007d18 <__avr32_s32_to_f64+0x9a>
80007d12:	2f fa       	sub	r10,-1
80007d14:	f7 bb 02 ff 	subhs	r11,-1
80007d18:	5c fc       	rol	r12
80007d1a:	5d 0b       	ror	r11
80007d1c:	5d 0a       	ror	r10
80007d1e:	d8 02       	popm	pc
80007d20:	e0 68 03 ff 	mov	r8,1023
80007d24:	ed ba 00 0b 	bld	r10,0xb
80007d28:	f7 b8 00 ff 	subeq	r8,-1
80007d2c:	10 0a       	add	r10,r8
80007d2e:	5c 0b       	acr	r11
80007d30:	f7 b9 03 fe 	sublo	r9,-2
80007d34:	e0 49 07 ff 	cp.w	r9,2047
80007d38:	c0 55       	brlt	80007d42 <__avr32_s32_to_f64+0xc4>
80007d3a:	30 0a       	mov	r10,0
80007d3c:	fc 1b ff e0 	movh	r11,0xffe0
80007d40:	c0 c8       	rjmp	80007d58 <__floatsidf_return_op1>
80007d42:	ed bb 00 1f 	bld	r11,0x1f
80007d46:	f7 b9 01 01 	subne	r9,1
80007d4a:	ab 9a       	lsr	r10,0xb
80007d4c:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80007d50:	a1 7b       	lsl	r11,0x1
80007d52:	ab 9b       	lsr	r11,0xb
80007d54:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80007d58 <__floatsidf_return_op1>:
80007d58:	a1 7c       	lsl	r12,0x1
80007d5a:	5d 0b       	ror	r11
80007d5c:	d8 02       	popm	pc

80007d5e <__avr32_f64_cmp_eq>:
80007d5e:	10 3a       	cp.w	r10,r8
80007d60:	f2 0b 13 00 	cpc	r11,r9
80007d64:	c0 80       	breq	80007d74 <__avr32_f64_cmp_eq+0x16>
80007d66:	a1 7b       	lsl	r11,0x1
80007d68:	a1 79       	lsl	r9,0x1
80007d6a:	14 4b       	or	r11,r10
80007d6c:	12 4b       	or	r11,r9
80007d6e:	10 4b       	or	r11,r8
80007d70:	5e 0f       	reteq	1
80007d72:	5e fd       	retal	0
80007d74:	a1 7b       	lsl	r11,0x1
80007d76:	fc 1c ff e0 	movh	r12,0xffe0
80007d7a:	58 0a       	cp.w	r10,0
80007d7c:	f8 0b 13 00 	cpc	r11,r12
80007d80:	5e 8f       	retls	1
80007d82:	5e fd       	retal	0

80007d84 <__avr32_f64_cmp_ge>:
80007d84:	1a de       	st.w	--sp,lr
80007d86:	1a d7       	st.w	--sp,r7
80007d88:	a1 7b       	lsl	r11,0x1
80007d8a:	5f 3c       	srlo	r12
80007d8c:	a1 79       	lsl	r9,0x1
80007d8e:	5f 37       	srlo	r7
80007d90:	5c fc       	rol	r12
80007d92:	fc 1e ff e0 	movh	lr,0xffe0
80007d96:	58 0a       	cp.w	r10,0
80007d98:	fc 0b 13 00 	cpc	r11,lr
80007d9c:	e0 8b 00 1d 	brhi	80007dd6 <__avr32_f64_cmp_ge+0x52>
80007da0:	58 08       	cp.w	r8,0
80007da2:	fc 09 13 00 	cpc	r9,lr
80007da6:	e0 8b 00 18 	brhi	80007dd6 <__avr32_f64_cmp_ge+0x52>
80007daa:	58 0b       	cp.w	r11,0
80007dac:	f5 ba 00 00 	subfeq	r10,0
80007db0:	c1 50       	breq	80007dda <__avr32_f64_cmp_ge+0x56>
80007db2:	1b 07       	ld.w	r7,sp++
80007db4:	1b 0e       	ld.w	lr,sp++
80007db6:	58 3c       	cp.w	r12,3
80007db8:	c0 a0       	breq	80007dcc <__avr32_f64_cmp_ge+0x48>
80007dba:	58 1c       	cp.w	r12,1
80007dbc:	c0 33       	brcs	80007dc2 <__avr32_f64_cmp_ge+0x3e>
80007dbe:	5e 0f       	reteq	1
80007dc0:	5e 1d       	retne	0
80007dc2:	10 3a       	cp.w	r10,r8
80007dc4:	f2 0b 13 00 	cpc	r11,r9
80007dc8:	5e 2f       	reths	1
80007dca:	5e 3d       	retlo	0
80007dcc:	14 38       	cp.w	r8,r10
80007dce:	f6 09 13 00 	cpc	r9,r11
80007dd2:	5e 2f       	reths	1
80007dd4:	5e 3d       	retlo	0
80007dd6:	1b 07       	ld.w	r7,sp++
80007dd8:	d8 0a       	popm	pc,r12=0
80007dda:	58 17       	cp.w	r7,1
80007ddc:	5f 0c       	sreq	r12
80007dde:	58 09       	cp.w	r9,0
80007de0:	f5 b8 00 00 	subfeq	r8,0
80007de4:	1b 07       	ld.w	r7,sp++
80007de6:	1b 0e       	ld.w	lr,sp++
80007de8:	5e 0f       	reteq	1
80007dea:	5e fc       	retal	r12

80007dec <__avr32_f64_cmp_lt>:
80007dec:	1a de       	st.w	--sp,lr
80007dee:	1a d7       	st.w	--sp,r7
80007df0:	a1 7b       	lsl	r11,0x1
80007df2:	5f 3c       	srlo	r12
80007df4:	a1 79       	lsl	r9,0x1
80007df6:	5f 37       	srlo	r7
80007df8:	5c fc       	rol	r12
80007dfa:	fc 1e ff e0 	movh	lr,0xffe0
80007dfe:	58 0a       	cp.w	r10,0
80007e00:	fc 0b 13 00 	cpc	r11,lr
80007e04:	e0 8b 00 1d 	brhi	80007e3e <__avr32_f64_cmp_lt+0x52>
80007e08:	58 08       	cp.w	r8,0
80007e0a:	fc 09 13 00 	cpc	r9,lr
80007e0e:	e0 8b 00 18 	brhi	80007e3e <__avr32_f64_cmp_lt+0x52>
80007e12:	58 0b       	cp.w	r11,0
80007e14:	f5 ba 00 00 	subfeq	r10,0
80007e18:	c1 50       	breq	80007e42 <__avr32_f64_cmp_lt+0x56>
80007e1a:	1b 07       	ld.w	r7,sp++
80007e1c:	1b 0e       	ld.w	lr,sp++
80007e1e:	58 3c       	cp.w	r12,3
80007e20:	c0 a0       	breq	80007e34 <__avr32_f64_cmp_lt+0x48>
80007e22:	58 1c       	cp.w	r12,1
80007e24:	c0 33       	brcs	80007e2a <__avr32_f64_cmp_lt+0x3e>
80007e26:	5e 0d       	reteq	0
80007e28:	5e 1f       	retne	1
80007e2a:	10 3a       	cp.w	r10,r8
80007e2c:	f2 0b 13 00 	cpc	r11,r9
80007e30:	5e 2d       	reths	0
80007e32:	5e 3f       	retlo	1
80007e34:	14 38       	cp.w	r8,r10
80007e36:	f6 09 13 00 	cpc	r9,r11
80007e3a:	5e 2d       	reths	0
80007e3c:	5e 3f       	retlo	1
80007e3e:	1b 07       	ld.w	r7,sp++
80007e40:	d8 0a       	popm	pc,r12=0
80007e42:	58 17       	cp.w	r7,1
80007e44:	5f 1c       	srne	r12
80007e46:	58 09       	cp.w	r9,0
80007e48:	f5 b8 00 00 	subfeq	r8,0
80007e4c:	1b 07       	ld.w	r7,sp++
80007e4e:	1b 0e       	ld.w	lr,sp++
80007e50:	5e 0d       	reteq	0
80007e52:	5e fc       	retal	r12

80007e54 <__avr32_f64_div>:
80007e54:	eb cd 40 ff 	pushm	r0-r7,lr
80007e58:	f7 e9 20 0e 	eor	lr,r11,r9
80007e5c:	f6 07 16 14 	lsr	r7,r11,0x14
80007e60:	a9 7b       	lsl	r11,0x9
80007e62:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80007e66:	a9 7a       	lsl	r10,0x9
80007e68:	bd bb       	sbr	r11,0x1d
80007e6a:	e4 1b 3f ff 	andh	r11,0x3fff
80007e6e:	ab d7       	cbr	r7,0xb
80007e70:	e0 80 00 cc 	breq	80008008 <__avr32_f64_div_round_subnormal+0x54>
80007e74:	e0 47 07 ff 	cp.w	r7,2047
80007e78:	e0 84 00 b5 	brge	80007fe2 <__avr32_f64_div_round_subnormal+0x2e>
80007e7c:	f2 06 16 14 	lsr	r6,r9,0x14
80007e80:	a9 79       	lsl	r9,0x9
80007e82:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80007e86:	a9 78       	lsl	r8,0x9
80007e88:	bd b9       	sbr	r9,0x1d
80007e8a:	e4 19 3f ff 	andh	r9,0x3fff
80007e8e:	ab d6       	cbr	r6,0xb
80007e90:	e0 80 00 e2 	breq	80008054 <__avr32_f64_div_round_subnormal+0xa0>
80007e94:	e0 46 07 ff 	cp.w	r6,2047
80007e98:	e0 84 00 b2 	brge	80007ffc <__avr32_f64_div_round_subnormal+0x48>
80007e9c:	0c 17       	sub	r7,r6
80007e9e:	fe 37 fc 01 	sub	r7,-1023
80007ea2:	fc 1c 80 00 	movh	r12,0x8000
80007ea6:	f8 03 16 01 	lsr	r3,r12,0x1
80007eaa:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80007eae:	5c d4       	com	r4
80007eb0:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80007eb4:	e6 09 06 44 	mulu.d	r4,r3,r9
80007eb8:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007ebc:	e6 05 06 44 	mulu.d	r4,r3,r5
80007ec0:	ea 03 15 02 	lsl	r3,r5,0x2
80007ec4:	e6 09 06 44 	mulu.d	r4,r3,r9
80007ec8:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007ecc:	e6 05 06 44 	mulu.d	r4,r3,r5
80007ed0:	ea 03 15 02 	lsl	r3,r5,0x2
80007ed4:	e6 09 06 44 	mulu.d	r4,r3,r9
80007ed8:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007edc:	e6 05 06 44 	mulu.d	r4,r3,r5
80007ee0:	ea 03 15 02 	lsl	r3,r5,0x2
80007ee4:	e6 08 06 40 	mulu.d	r0,r3,r8
80007ee8:	e4 09 07 40 	macu.d	r0,r2,r9
80007eec:	e6 09 06 44 	mulu.d	r4,r3,r9
80007ef0:	02 04       	add	r4,r1
80007ef2:	5c 05       	acr	r5
80007ef4:	a3 65       	lsl	r5,0x2
80007ef6:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80007efa:	a3 64       	lsl	r4,0x2
80007efc:	5c 34       	neg	r4
80007efe:	f8 05 01 45 	sbc	r5,r12,r5
80007f02:	e6 04 06 40 	mulu.d	r0,r3,r4
80007f06:	e4 05 07 40 	macu.d	r0,r2,r5
80007f0a:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f0e:	02 04       	add	r4,r1
80007f10:	5c 05       	acr	r5
80007f12:	ea 03 15 02 	lsl	r3,r5,0x2
80007f16:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80007f1a:	e8 02 15 02 	lsl	r2,r4,0x2
80007f1e:	e6 08 06 40 	mulu.d	r0,r3,r8
80007f22:	e4 09 07 40 	macu.d	r0,r2,r9
80007f26:	e6 09 06 44 	mulu.d	r4,r3,r9
80007f2a:	02 04       	add	r4,r1
80007f2c:	5c 05       	acr	r5
80007f2e:	a3 65       	lsl	r5,0x2
80007f30:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80007f34:	a3 64       	lsl	r4,0x2
80007f36:	5c 34       	neg	r4
80007f38:	f8 05 01 45 	sbc	r5,r12,r5
80007f3c:	e6 04 06 40 	mulu.d	r0,r3,r4
80007f40:	e4 05 07 40 	macu.d	r0,r2,r5
80007f44:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f48:	02 04       	add	r4,r1
80007f4a:	5c 05       	acr	r5
80007f4c:	ea 03 15 02 	lsl	r3,r5,0x2
80007f50:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80007f54:	e8 02 15 02 	lsl	r2,r4,0x2
80007f58:	e6 0a 06 40 	mulu.d	r0,r3,r10
80007f5c:	e4 0b 07 40 	macu.d	r0,r2,r11
80007f60:	e6 0b 06 42 	mulu.d	r2,r3,r11
80007f64:	02 02       	add	r2,r1
80007f66:	5c 03       	acr	r3
80007f68:	ed b3 00 1c 	bld	r3,0x1c
80007f6c:	c0 90       	breq	80007f7e <__avr32_f64_div+0x12a>
80007f6e:	a1 72       	lsl	r2,0x1
80007f70:	5c f3       	rol	r3
80007f72:	20 17       	sub	r7,1
80007f74:	a3 9a       	lsr	r10,0x3
80007f76:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80007f7a:	a3 9b       	lsr	r11,0x3
80007f7c:	c0 58       	rjmp	80007f86 <__avr32_f64_div+0x132>
80007f7e:	a5 8a       	lsr	r10,0x4
80007f80:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80007f84:	a5 8b       	lsr	r11,0x4
80007f86:	58 07       	cp.w	r7,0
80007f88:	e0 8a 00 8b 	brle	8000809e <__avr32_f64_div_res_subnormal>
80007f8c:	e0 12 ff 00 	andl	r2,0xff00
80007f90:	e8 12 00 80 	orl	r2,0x80
80007f94:	e6 08 06 40 	mulu.d	r0,r3,r8
80007f98:	e4 09 07 40 	macu.d	r0,r2,r9
80007f9c:	e4 08 06 44 	mulu.d	r4,r2,r8
80007fa0:	e6 09 06 48 	mulu.d	r8,r3,r9
80007fa4:	00 05       	add	r5,r0
80007fa6:	f0 01 00 48 	adc	r8,r8,r1
80007faa:	5c 09       	acr	r9
80007fac:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80007fb0:	58 04       	cp.w	r4,0
80007fb2:	5c 25       	cpc	r5

80007fb4 <__avr32_f64_div_round_subnormal>:
80007fb4:	f4 08 13 00 	cpc	r8,r10
80007fb8:	f6 09 13 00 	cpc	r9,r11
80007fbc:	5f 36       	srlo	r6
80007fbe:	f8 06 17 00 	moveq	r6,r12
80007fc2:	e4 0a 16 08 	lsr	r10,r2,0x8
80007fc6:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
80007fca:	e6 0b 16 08 	lsr	r11,r3,0x8
80007fce:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80007fd2:	ed be 00 1f 	bld	lr,0x1f
80007fd6:	ef bb 00 1f 	bst	r11,0x1f
80007fda:	0c 0a       	add	r10,r6
80007fdc:	5c 0b       	acr	r11
80007fde:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80007fe2:	e4 1b 00 0f 	andh	r11,0xf
80007fe6:	14 4b       	or	r11,r10
80007fe8:	e0 81 00 a7 	brne	80008136 <__avr32_f64_div_res_subnormal+0x98>
80007fec:	f2 06 16 14 	lsr	r6,r9,0x14
80007ff0:	ab d6       	cbr	r6,0xb
80007ff2:	e0 46 07 ff 	cp.w	r6,2047
80007ff6:	e0 81 00 a4 	brne	8000813e <__avr32_f64_div_res_subnormal+0xa0>
80007ffa:	c9 e8       	rjmp	80008136 <__avr32_f64_div_res_subnormal+0x98>
80007ffc:	e4 19 00 0f 	andh	r9,0xf
80008000:	10 49       	or	r9,r8
80008002:	e0 81 00 9a 	brne	80008136 <__avr32_f64_div_res_subnormal+0x98>
80008006:	c9 28       	rjmp	8000812a <__avr32_f64_div_res_subnormal+0x8c>
80008008:	a3 7b       	lsl	r11,0x3
8000800a:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
8000800e:	a3 7a       	lsl	r10,0x3
80008010:	f5 eb 10 04 	or	r4,r10,r11
80008014:	e0 80 00 a0 	breq	80008154 <__avr32_f64_div_op1_zero>
80008018:	f6 04 12 00 	clz	r4,r11
8000801c:	c1 70       	breq	8000804a <__avr32_f64_div_round_subnormal+0x96>
8000801e:	c0 c3       	brcs	80008036 <__avr32_f64_div_round_subnormal+0x82>
80008020:	e8 05 11 20 	rsub	r5,r4,32
80008024:	f6 04 09 4b 	lsl	r11,r11,r4
80008028:	f4 05 0a 45 	lsr	r5,r10,r5
8000802c:	0a 4b       	or	r11,r5
8000802e:	f4 04 09 4a 	lsl	r10,r10,r4
80008032:	08 17       	sub	r7,r4
80008034:	c0 b8       	rjmp	8000804a <__avr32_f64_div_round_subnormal+0x96>
80008036:	f4 04 12 00 	clz	r4,r10
8000803a:	f9 b4 03 00 	movlo	r4,0
8000803e:	f7 b4 02 e0 	subhs	r4,-32
80008042:	f4 04 09 4b 	lsl	r11,r10,r4
80008046:	30 0a       	mov	r10,0
80008048:	08 17       	sub	r7,r4
8000804a:	a3 8a       	lsr	r10,0x2
8000804c:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
80008050:	a3 8b       	lsr	r11,0x2
80008052:	c1 1b       	rjmp	80007e74 <__avr32_f64_div+0x20>
80008054:	a3 79       	lsl	r9,0x3
80008056:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
8000805a:	a3 78       	lsl	r8,0x3
8000805c:	f3 e8 10 04 	or	r4,r9,r8
80008060:	c6 f0       	breq	8000813e <__avr32_f64_div_res_subnormal+0xa0>
80008062:	f2 04 12 00 	clz	r4,r9
80008066:	c1 70       	breq	80008094 <__avr32_f64_div_round_subnormal+0xe0>
80008068:	c0 c3       	brcs	80008080 <__avr32_f64_div_round_subnormal+0xcc>
8000806a:	e8 05 11 20 	rsub	r5,r4,32
8000806e:	f2 04 09 49 	lsl	r9,r9,r4
80008072:	f0 05 0a 45 	lsr	r5,r8,r5
80008076:	0a 49       	or	r9,r5
80008078:	f0 04 09 48 	lsl	r8,r8,r4
8000807c:	08 16       	sub	r6,r4
8000807e:	c0 b8       	rjmp	80008094 <__avr32_f64_div_round_subnormal+0xe0>
80008080:	f0 04 12 00 	clz	r4,r8
80008084:	f9 b4 03 00 	movlo	r4,0
80008088:	f7 b4 02 e0 	subhs	r4,-32
8000808c:	f0 04 09 49 	lsl	r9,r8,r4
80008090:	30 08       	mov	r8,0
80008092:	08 16       	sub	r6,r4
80008094:	a3 88       	lsr	r8,0x2
80008096:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
8000809a:	a3 89       	lsr	r9,0x2
8000809c:	cf ca       	rjmp	80007e94 <__avr32_f64_div+0x40>

8000809e <__avr32_f64_div_res_subnormal>:
8000809e:	5c 37       	neg	r7
800080a0:	2f f7       	sub	r7,-1
800080a2:	f1 b7 04 c0 	satu	r7,0x6
800080a6:	e0 47 00 20 	cp.w	r7,32
800080aa:	c1 54       	brge	800080d4 <__avr32_f64_div_res_subnormal+0x36>
800080ac:	ee 06 11 20 	rsub	r6,r7,32
800080b0:	e4 07 0a 42 	lsr	r2,r2,r7
800080b4:	e6 06 09 4c 	lsl	r12,r3,r6
800080b8:	18 42       	or	r2,r12
800080ba:	e6 07 0a 43 	lsr	r3,r3,r7
800080be:	f4 06 09 41 	lsl	r1,r10,r6
800080c2:	f4 07 0a 4a 	lsr	r10,r10,r7
800080c6:	f6 06 09 4c 	lsl	r12,r11,r6
800080ca:	18 4a       	or	r10,r12
800080cc:	f6 07 0a 4b 	lsr	r11,r11,r7
800080d0:	30 00       	mov	r0,0
800080d2:	c1 58       	rjmp	800080fc <__avr32_f64_div_res_subnormal+0x5e>
800080d4:	ee 06 11 20 	rsub	r6,r7,32
800080d8:	f9 b0 00 00 	moveq	r0,0
800080dc:	f9 bc 00 00 	moveq	r12,0
800080e0:	c0 50       	breq	800080ea <__avr32_f64_div_res_subnormal+0x4c>
800080e2:	f4 06 09 40 	lsl	r0,r10,r6
800080e6:	f6 06 09 4c 	lsl	r12,r11,r6
800080ea:	e6 07 0a 42 	lsr	r2,r3,r7
800080ee:	30 03       	mov	r3,0
800080f0:	f4 07 0a 41 	lsr	r1,r10,r7
800080f4:	18 41       	or	r1,r12
800080f6:	f6 07 0a 4a 	lsr	r10,r11,r7
800080fa:	30 0b       	mov	r11,0
800080fc:	e0 12 ff 00 	andl	r2,0xff00
80008100:	e8 12 00 80 	orl	r2,0x80
80008104:	e6 08 06 46 	mulu.d	r6,r3,r8
80008108:	e4 09 07 46 	macu.d	r6,r2,r9
8000810c:	e4 08 06 44 	mulu.d	r4,r2,r8
80008110:	e6 09 06 48 	mulu.d	r8,r3,r9
80008114:	0c 05       	add	r5,r6
80008116:	f0 07 00 48 	adc	r8,r8,r7
8000811a:	5c 09       	acr	r9
8000811c:	30 07       	mov	r7,0
8000811e:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008122:	00 34       	cp.w	r4,r0
80008124:	e2 05 13 00 	cpc	r5,r1
80008128:	c4 6b       	rjmp	80007fb4 <__avr32_f64_div_round_subnormal>
8000812a:	1c 9b       	mov	r11,lr
8000812c:	e6 1b 80 00 	andh	r11,0x8000,COH
80008130:	30 0a       	mov	r10,0
80008132:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008136:	3f fb       	mov	r11,-1
80008138:	30 0a       	mov	r10,0
8000813a:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000813e:	f5 eb 10 04 	or	r4,r10,r11
80008142:	c0 90       	breq	80008154 <__avr32_f64_div_op1_zero>
80008144:	1c 9b       	mov	r11,lr
80008146:	e6 1b 80 00 	andh	r11,0x8000,COH
8000814a:	ea 1b 7f f0 	orh	r11,0x7ff0
8000814e:	30 0a       	mov	r10,0
80008150:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008154 <__avr32_f64_div_op1_zero>:
80008154:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80008158:	ce f0       	breq	80008136 <__avr32_f64_div_res_subnormal+0x98>
8000815a:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
8000815e:	e0 44 07 ff 	cp.w	r4,2047
80008162:	ce 41       	brne	8000812a <__avr32_f64_div_res_subnormal+0x8c>
80008164:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
80008168:	ce 10       	breq	8000812a <__avr32_f64_div_res_subnormal+0x8c>
8000816a:	ce 6b       	rjmp	80008136 <__avr32_f64_div_res_subnormal+0x98>

8000816c <__avr32_udiv64>:
8000816c:	d4 31       	pushm	r0-r7,lr
8000816e:	1a 97       	mov	r7,sp
80008170:	20 3d       	sub	sp,12
80008172:	10 9c       	mov	r12,r8
80008174:	12 9e       	mov	lr,r9
80008176:	14 93       	mov	r3,r10
80008178:	58 09       	cp.w	r9,0
8000817a:	e0 81 00 bd 	brne	800082f4 <__avr32_udiv64+0x188>
8000817e:	16 38       	cp.w	r8,r11
80008180:	e0 88 00 40 	brls	80008200 <__avr32_udiv64+0x94>
80008184:	f0 08 12 00 	clz	r8,r8
80008188:	c0 d0       	breq	800081a2 <__avr32_udiv64+0x36>
8000818a:	f6 08 09 4b 	lsl	r11,r11,r8
8000818e:	f0 09 11 20 	rsub	r9,r8,32
80008192:	f8 08 09 4c 	lsl	r12,r12,r8
80008196:	f4 09 0a 49 	lsr	r9,r10,r9
8000819a:	f4 08 09 43 	lsl	r3,r10,r8
8000819e:	f3 eb 10 0b 	or	r11,r9,r11
800081a2:	f8 0e 16 10 	lsr	lr,r12,0x10
800081a6:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800081aa:	f6 0e 0d 00 	divu	r0,r11,lr
800081ae:	e6 0b 16 10 	lsr	r11,r3,0x10
800081b2:	00 99       	mov	r9,r0
800081b4:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800081b8:	e0 0a 02 48 	mul	r8,r0,r10
800081bc:	10 3b       	cp.w	r11,r8
800081be:	c0 a2       	brcc	800081d2 <__avr32_udiv64+0x66>
800081c0:	20 19       	sub	r9,1
800081c2:	18 0b       	add	r11,r12
800081c4:	18 3b       	cp.w	r11,r12
800081c6:	c0 63       	brcs	800081d2 <__avr32_udiv64+0x66>
800081c8:	10 3b       	cp.w	r11,r8
800081ca:	f7 b9 03 01 	sublo	r9,1
800081ce:	f7 dc e3 0b 	addcs	r11,r11,r12
800081d2:	f6 08 01 01 	sub	r1,r11,r8
800081d6:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
800081da:	e2 0e 0d 00 	divu	r0,r1,lr
800081de:	e7 e1 11 03 	or	r3,r3,r1<<0x10
800081e2:	00 98       	mov	r8,r0
800081e4:	e0 0a 02 4a 	mul	r10,r0,r10
800081e8:	14 33       	cp.w	r3,r10
800081ea:	c0 82       	brcc	800081fa <__avr32_udiv64+0x8e>
800081ec:	20 18       	sub	r8,1
800081ee:	18 03       	add	r3,r12
800081f0:	18 33       	cp.w	r3,r12
800081f2:	c0 43       	brcs	800081fa <__avr32_udiv64+0x8e>
800081f4:	14 33       	cp.w	r3,r10
800081f6:	f7 b8 03 01 	sublo	r8,1
800081fa:	f1 e9 11 08 	or	r8,r8,r9<<0x10
800081fe:	cd f8       	rjmp	800083bc <__avr32_udiv64+0x250>
80008200:	58 08       	cp.w	r8,0
80008202:	c0 51       	brne	8000820c <__avr32_udiv64+0xa0>
80008204:	30 19       	mov	r9,1
80008206:	f2 08 0d 08 	divu	r8,r9,r8
8000820a:	10 9c       	mov	r12,r8
8000820c:	f8 06 12 00 	clz	r6,r12
80008210:	c0 41       	brne	80008218 <__avr32_udiv64+0xac>
80008212:	18 1b       	sub	r11,r12
80008214:	30 19       	mov	r9,1
80008216:	c4 08       	rjmp	80008296 <__avr32_udiv64+0x12a>
80008218:	ec 01 11 20 	rsub	r1,r6,32
8000821c:	f4 01 0a 49 	lsr	r9,r10,r1
80008220:	f8 06 09 4c 	lsl	r12,r12,r6
80008224:	f6 06 09 48 	lsl	r8,r11,r6
80008228:	f6 01 0a 41 	lsr	r1,r11,r1
8000822c:	f3 e8 10 08 	or	r8,r9,r8
80008230:	f8 03 16 10 	lsr	r3,r12,0x10
80008234:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008238:	e2 03 0d 00 	divu	r0,r1,r3
8000823c:	f0 0b 16 10 	lsr	r11,r8,0x10
80008240:	00 9e       	mov	lr,r0
80008242:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008246:	e0 05 02 49 	mul	r9,r0,r5
8000824a:	12 3b       	cp.w	r11,r9
8000824c:	c0 a2       	brcc	80008260 <__avr32_udiv64+0xf4>
8000824e:	20 1e       	sub	lr,1
80008250:	18 0b       	add	r11,r12
80008252:	18 3b       	cp.w	r11,r12
80008254:	c0 63       	brcs	80008260 <__avr32_udiv64+0xf4>
80008256:	12 3b       	cp.w	r11,r9
80008258:	f7 be 03 01 	sublo	lr,1
8000825c:	f7 dc e3 0b 	addcs	r11,r11,r12
80008260:	12 1b       	sub	r11,r9
80008262:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008266:	f6 03 0d 02 	divu	r2,r11,r3
8000826a:	f1 e3 11 08 	or	r8,r8,r3<<0x10
8000826e:	04 99       	mov	r9,r2
80008270:	e4 05 02 4b 	mul	r11,r2,r5
80008274:	16 38       	cp.w	r8,r11
80008276:	c0 a2       	brcc	8000828a <__avr32_udiv64+0x11e>
80008278:	20 19       	sub	r9,1
8000827a:	18 08       	add	r8,r12
8000827c:	18 38       	cp.w	r8,r12
8000827e:	c0 63       	brcs	8000828a <__avr32_udiv64+0x11e>
80008280:	16 38       	cp.w	r8,r11
80008282:	f7 b9 03 01 	sublo	r9,1
80008286:	f1 dc e3 08 	addcs	r8,r8,r12
8000828a:	f4 06 09 43 	lsl	r3,r10,r6
8000828e:	f0 0b 01 0b 	sub	r11,r8,r11
80008292:	f3 ee 11 09 	or	r9,r9,lr<<0x10
80008296:	f8 06 16 10 	lsr	r6,r12,0x10
8000829a:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
8000829e:	f6 06 0d 00 	divu	r0,r11,r6
800082a2:	e6 0b 16 10 	lsr	r11,r3,0x10
800082a6:	00 9a       	mov	r10,r0
800082a8:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800082ac:	e0 0e 02 48 	mul	r8,r0,lr
800082b0:	10 3b       	cp.w	r11,r8
800082b2:	c0 a2       	brcc	800082c6 <__avr32_udiv64+0x15a>
800082b4:	20 1a       	sub	r10,1
800082b6:	18 0b       	add	r11,r12
800082b8:	18 3b       	cp.w	r11,r12
800082ba:	c0 63       	brcs	800082c6 <__avr32_udiv64+0x15a>
800082bc:	10 3b       	cp.w	r11,r8
800082be:	f7 ba 03 01 	sublo	r10,1
800082c2:	f7 dc e3 0b 	addcs	r11,r11,r12
800082c6:	f6 08 01 01 	sub	r1,r11,r8
800082ca:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
800082ce:	e2 06 0d 00 	divu	r0,r1,r6
800082d2:	e7 e1 11 03 	or	r3,r3,r1<<0x10
800082d6:	00 98       	mov	r8,r0
800082d8:	e0 0e 02 4b 	mul	r11,r0,lr
800082dc:	16 33       	cp.w	r3,r11
800082de:	c0 82       	brcc	800082ee <__avr32_udiv64+0x182>
800082e0:	20 18       	sub	r8,1
800082e2:	18 03       	add	r3,r12
800082e4:	18 33       	cp.w	r3,r12
800082e6:	c0 43       	brcs	800082ee <__avr32_udiv64+0x182>
800082e8:	16 33       	cp.w	r3,r11
800082ea:	f7 b8 03 01 	sublo	r8,1
800082ee:	f1 ea 11 08 	or	r8,r8,r10<<0x10
800082f2:	c6 98       	rjmp	800083c4 <__avr32_udiv64+0x258>
800082f4:	16 39       	cp.w	r9,r11
800082f6:	e0 8b 00 65 	brhi	800083c0 <__avr32_udiv64+0x254>
800082fa:	f2 09 12 00 	clz	r9,r9
800082fe:	c0 b1       	brne	80008314 <__avr32_udiv64+0x1a8>
80008300:	10 3a       	cp.w	r10,r8
80008302:	5f 2a       	srhs	r10
80008304:	1c 3b       	cp.w	r11,lr
80008306:	5f b8       	srhi	r8
80008308:	10 4a       	or	r10,r8
8000830a:	f2 0a 18 00 	cp.b	r10,r9
8000830e:	c5 90       	breq	800083c0 <__avr32_udiv64+0x254>
80008310:	30 18       	mov	r8,1
80008312:	c5 98       	rjmp	800083c4 <__avr32_udiv64+0x258>
80008314:	f0 09 09 46 	lsl	r6,r8,r9
80008318:	f2 03 11 20 	rsub	r3,r9,32
8000831c:	fc 09 09 4e 	lsl	lr,lr,r9
80008320:	f0 03 0a 48 	lsr	r8,r8,r3
80008324:	f6 09 09 4c 	lsl	r12,r11,r9
80008328:	f4 03 0a 42 	lsr	r2,r10,r3
8000832c:	ef 46 ff f4 	st.w	r7[-12],r6
80008330:	f6 03 0a 43 	lsr	r3,r11,r3
80008334:	18 42       	or	r2,r12
80008336:	f1 ee 10 0c 	or	r12,r8,lr
8000833a:	f8 01 16 10 	lsr	r1,r12,0x10
8000833e:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008342:	e6 01 0d 04 	divu	r4,r3,r1
80008346:	e4 03 16 10 	lsr	r3,r2,0x10
8000834a:	08 9e       	mov	lr,r4
8000834c:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80008350:	e8 06 02 48 	mul	r8,r4,r6
80008354:	10 33       	cp.w	r3,r8
80008356:	c0 a2       	brcc	8000836a <__avr32_udiv64+0x1fe>
80008358:	20 1e       	sub	lr,1
8000835a:	18 03       	add	r3,r12
8000835c:	18 33       	cp.w	r3,r12
8000835e:	c0 63       	brcs	8000836a <__avr32_udiv64+0x1fe>
80008360:	10 33       	cp.w	r3,r8
80008362:	f7 be 03 01 	sublo	lr,1
80008366:	e7 dc e3 03 	addcs	r3,r3,r12
8000836a:	10 13       	sub	r3,r8
8000836c:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
80008370:	e6 01 0d 00 	divu	r0,r3,r1
80008374:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008378:	00 98       	mov	r8,r0
8000837a:	e0 06 02 46 	mul	r6,r0,r6
8000837e:	0c 3b       	cp.w	r11,r6
80008380:	c0 a2       	brcc	80008394 <__avr32_udiv64+0x228>
80008382:	20 18       	sub	r8,1
80008384:	18 0b       	add	r11,r12
80008386:	18 3b       	cp.w	r11,r12
80008388:	c0 63       	brcs	80008394 <__avr32_udiv64+0x228>
8000838a:	0c 3b       	cp.w	r11,r6
8000838c:	f7 dc e3 0b 	addcs	r11,r11,r12
80008390:	f7 b8 03 01 	sublo	r8,1
80008394:	f1 ee 11 08 	or	r8,r8,lr<<0x10
80008398:	ee f4 ff f4 	ld.w	r4,r7[-12]
8000839c:	0c 1b       	sub	r11,r6
8000839e:	f0 04 06 42 	mulu.d	r2,r8,r4
800083a2:	06 95       	mov	r5,r3
800083a4:	16 35       	cp.w	r5,r11
800083a6:	e0 8b 00 0a 	brhi	800083ba <__avr32_udiv64+0x24e>
800083aa:	5f 0b       	sreq	r11
800083ac:	f4 09 09 49 	lsl	r9,r10,r9
800083b0:	12 32       	cp.w	r2,r9
800083b2:	5f b9       	srhi	r9
800083b4:	f7 e9 00 09 	and	r9,r11,r9
800083b8:	c0 60       	breq	800083c4 <__avr32_udiv64+0x258>
800083ba:	20 18       	sub	r8,1
800083bc:	30 09       	mov	r9,0
800083be:	c0 38       	rjmp	800083c4 <__avr32_udiv64+0x258>
800083c0:	30 09       	mov	r9,0
800083c2:	12 98       	mov	r8,r9
800083c4:	10 9a       	mov	r10,r8
800083c6:	12 93       	mov	r3,r9
800083c8:	10 92       	mov	r2,r8
800083ca:	12 9b       	mov	r11,r9
800083cc:	2f dd       	sub	sp,-12
800083ce:	d8 32       	popm	r0-r7,pc

800083d0 <__avr32_umod64>:
800083d0:	d4 31       	pushm	r0-r7,lr
800083d2:	1a 97       	mov	r7,sp
800083d4:	20 3d       	sub	sp,12
800083d6:	10 9c       	mov	r12,r8
800083d8:	12 95       	mov	r5,r9
800083da:	14 9e       	mov	lr,r10
800083dc:	16 91       	mov	r1,r11
800083de:	16 96       	mov	r6,r11
800083e0:	58 09       	cp.w	r9,0
800083e2:	e0 81 00 81 	brne	800084e4 <__avr32_umod64+0x114>
800083e6:	16 38       	cp.w	r8,r11
800083e8:	e0 88 00 12 	brls	8000840c <__avr32_umod64+0x3c>
800083ec:	f0 08 12 00 	clz	r8,r8
800083f0:	c4 e0       	breq	8000848c <__avr32_umod64+0xbc>
800083f2:	f6 08 09 46 	lsl	r6,r11,r8
800083f6:	f8 08 09 4c 	lsl	r12,r12,r8
800083fa:	f0 0b 11 20 	rsub	r11,r8,32
800083fe:	f4 08 09 4e 	lsl	lr,r10,r8
80008402:	f4 0b 0a 4b 	lsr	r11,r10,r11
80008406:	f7 e6 10 06 	or	r6,r11,r6
8000840a:	c4 18       	rjmp	8000848c <__avr32_umod64+0xbc>
8000840c:	58 08       	cp.w	r8,0
8000840e:	c0 51       	brne	80008418 <__avr32_umod64+0x48>
80008410:	30 19       	mov	r9,1
80008412:	f2 08 0d 08 	divu	r8,r9,r8
80008416:	10 9c       	mov	r12,r8
80008418:	f8 08 12 00 	clz	r8,r12
8000841c:	c0 31       	brne	80008422 <__avr32_umod64+0x52>
8000841e:	18 16       	sub	r6,r12
80008420:	c3 68       	rjmp	8000848c <__avr32_umod64+0xbc>
80008422:	f0 03 11 20 	rsub	r3,r8,32
80008426:	f4 03 0a 4b 	lsr	r11,r10,r3
8000842a:	f8 08 09 4c 	lsl	r12,r12,r8
8000842e:	ec 08 09 49 	lsl	r9,r6,r8
80008432:	ec 03 0a 43 	lsr	r3,r6,r3
80008436:	f7 e9 10 09 	or	r9,r11,r9
8000843a:	f8 05 16 10 	lsr	r5,r12,0x10
8000843e:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008442:	e6 05 0d 02 	divu	r2,r3,r5
80008446:	f2 0e 16 10 	lsr	lr,r9,0x10
8000844a:	ec 02 02 4b 	mul	r11,r6,r2
8000844e:	fd e3 11 0e 	or	lr,lr,r3<<0x10
80008452:	16 3e       	cp.w	lr,r11
80008454:	c0 72       	brcc	80008462 <__avr32_umod64+0x92>
80008456:	18 0e       	add	lr,r12
80008458:	18 3e       	cp.w	lr,r12
8000845a:	c0 43       	brcs	80008462 <__avr32_umod64+0x92>
8000845c:	16 3e       	cp.w	lr,r11
8000845e:	fd dc e3 0e 	addcs	lr,lr,r12
80008462:	fc 0b 01 03 	sub	r3,lr,r11
80008466:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
8000846a:	e6 05 0d 02 	divu	r2,r3,r5
8000846e:	f3 e3 11 09 	or	r9,r9,r3<<0x10
80008472:	a5 36       	mul	r6,r2
80008474:	0c 39       	cp.w	r9,r6
80008476:	c0 72       	brcc	80008484 <__avr32_umod64+0xb4>
80008478:	18 09       	add	r9,r12
8000847a:	18 39       	cp.w	r9,r12
8000847c:	c0 43       	brcs	80008484 <__avr32_umod64+0xb4>
8000847e:	0c 39       	cp.w	r9,r6
80008480:	f3 dc e3 09 	addcs	r9,r9,r12
80008484:	f2 06 01 06 	sub	r6,r9,r6
80008488:	f4 08 09 4e 	lsl	lr,r10,r8
8000848c:	f8 0a 16 10 	lsr	r10,r12,0x10
80008490:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008494:	ec 0a 0d 02 	divu	r2,r6,r10
80008498:	fc 09 16 10 	lsr	r9,lr,0x10
8000849c:	ea 02 02 4b 	mul	r11,r5,r2
800084a0:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800084a4:	16 39       	cp.w	r9,r11
800084a6:	c0 72       	brcc	800084b4 <__avr32_umod64+0xe4>
800084a8:	18 09       	add	r9,r12
800084aa:	18 39       	cp.w	r9,r12
800084ac:	c0 43       	brcs	800084b4 <__avr32_umod64+0xe4>
800084ae:	16 39       	cp.w	r9,r11
800084b0:	f3 dc e3 09 	addcs	r9,r9,r12
800084b4:	f2 0b 01 0b 	sub	r11,r9,r11
800084b8:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
800084bc:	f6 0a 0d 0a 	divu	r10,r11,r10
800084c0:	fd eb 11 0e 	or	lr,lr,r11<<0x10
800084c4:	ea 0a 02 4a 	mul	r10,r5,r10
800084c8:	14 3e       	cp.w	lr,r10
800084ca:	c0 72       	brcc	800084d8 <__avr32_umod64+0x108>
800084cc:	18 0e       	add	lr,r12
800084ce:	18 3e       	cp.w	lr,r12
800084d0:	c0 43       	brcs	800084d8 <__avr32_umod64+0x108>
800084d2:	14 3e       	cp.w	lr,r10
800084d4:	fd dc e3 0e 	addcs	lr,lr,r12
800084d8:	fc 0a 01 0a 	sub	r10,lr,r10
800084dc:	30 0b       	mov	r11,0
800084de:	f4 08 0a 4a 	lsr	r10,r10,r8
800084e2:	c7 b8       	rjmp	800085d8 <__avr32_umod64+0x208>
800084e4:	16 39       	cp.w	r9,r11
800084e6:	e0 8b 00 79 	brhi	800085d8 <__avr32_umod64+0x208>
800084ea:	f2 09 12 00 	clz	r9,r9
800084ee:	c1 21       	brne	80008512 <__avr32_umod64+0x142>
800084f0:	10 3a       	cp.w	r10,r8
800084f2:	5f 2b       	srhs	r11
800084f4:	0a 31       	cp.w	r1,r5
800084f6:	5f ba       	srhi	r10
800084f8:	f7 ea 10 0a 	or	r10,r11,r10
800084fc:	f2 0a 18 00 	cp.b	r10,r9
80008500:	c0 60       	breq	8000850c <__avr32_umod64+0x13c>
80008502:	fc 08 01 0c 	sub	r12,lr,r8
80008506:	e2 05 01 46 	sbc	r6,r1,r5
8000850a:	18 9e       	mov	lr,r12
8000850c:	0c 9b       	mov	r11,r6
8000850e:	1c 9a       	mov	r10,lr
80008510:	c6 48       	rjmp	800085d8 <__avr32_umod64+0x208>
80008512:	ea 09 09 4c 	lsl	r12,r5,r9
80008516:	f2 06 11 20 	rsub	r6,r9,32
8000851a:	f6 09 09 4b 	lsl	r11,r11,r9
8000851e:	f0 09 09 42 	lsl	r2,r8,r9
80008522:	ef 46 ff f4 	st.w	r7[-12],r6
80008526:	f0 06 0a 48 	lsr	r8,r8,r6
8000852a:	18 48       	or	r8,r12
8000852c:	e2 06 0a 4c 	lsr	r12,r1,r6
80008530:	f4 09 09 43 	lsl	r3,r10,r9
80008534:	fd d8 c0 10 	bfextu	lr,r8,0x0,0x10
80008538:	f4 06 0a 4a 	lsr	r10,r10,r6
8000853c:	16 4a       	or	r10,r11
8000853e:	f0 0b 16 10 	lsr	r11,r8,0x10
80008542:	f8 0b 0d 04 	divu	r4,r12,r11
80008546:	f4 0c 16 10 	lsr	r12,r10,0x10
8000854a:	08 91       	mov	r1,r4
8000854c:	f9 e5 11 0c 	or	r12,r12,r5<<0x10
80008550:	e8 0e 02 46 	mul	r6,r4,lr
80008554:	0c 3c       	cp.w	r12,r6
80008556:	c0 a2       	brcc	8000856a <__avr32_umod64+0x19a>
80008558:	20 11       	sub	r1,1
8000855a:	10 0c       	add	r12,r8
8000855c:	10 3c       	cp.w	r12,r8
8000855e:	c0 63       	brcs	8000856a <__avr32_umod64+0x19a>
80008560:	0c 3c       	cp.w	r12,r6
80008562:	f7 b1 03 01 	sublo	r1,1
80008566:	f9 d8 e3 0c 	addcs	r12,r12,r8
8000856a:	0c 1c       	sub	r12,r6
8000856c:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
80008570:	f8 0b 0d 04 	divu	r4,r12,r11
80008574:	f5 e5 11 0b 	or	r11,r10,r5<<0x10
80008578:	08 96       	mov	r6,r4
8000857a:	e8 0e 02 4e 	mul	lr,r4,lr
8000857e:	1c 3b       	cp.w	r11,lr
80008580:	c0 a2       	brcc	80008594 <__avr32_umod64+0x1c4>
80008582:	20 16       	sub	r6,1
80008584:	10 0b       	add	r11,r8
80008586:	10 3b       	cp.w	r11,r8
80008588:	c0 63       	brcs	80008594 <__avr32_umod64+0x1c4>
8000858a:	1c 3b       	cp.w	r11,lr
8000858c:	f7 b6 03 01 	sublo	r6,1
80008590:	f7 d8 e3 0b 	addcs	r11,r11,r8
80008594:	ed e1 11 01 	or	r1,r6,r1<<0x10
80008598:	1c 1b       	sub	r11,lr
8000859a:	e2 02 06 40 	mulu.d	r0,r1,r2
8000859e:	00 9e       	mov	lr,r0
800085a0:	02 9c       	mov	r12,r1
800085a2:	16 3c       	cp.w	r12,r11
800085a4:	e0 8b 00 08 	brhi	800085b4 <__avr32_umod64+0x1e4>
800085a8:	5f 06       	sreq	r6
800085aa:	06 30       	cp.w	r0,r3
800085ac:	5f ba       	srhi	r10
800085ae:	ed ea 00 0a 	and	r10,r6,r10
800085b2:	c0 60       	breq	800085be <__avr32_umod64+0x1ee>
800085b4:	fc 02 01 04 	sub	r4,lr,r2
800085b8:	f8 08 01 4c 	sbc	r12,r12,r8
800085bc:	08 9e       	mov	lr,r4
800085be:	e6 0e 01 0a 	sub	r10,r3,lr
800085c2:	f6 0c 01 4c 	sbc	r12,r11,r12
800085c6:	ee f1 ff f4 	ld.w	r1,r7[-12]
800085ca:	f8 09 0a 4b 	lsr	r11,r12,r9
800085ce:	f4 09 0a 4a 	lsr	r10,r10,r9
800085d2:	f8 01 09 4c 	lsl	r12,r12,r1
800085d6:	18 4a       	or	r10,r12
800085d8:	2f dd       	sub	sp,-12
800085da:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

80008600 <_evba>:
_evba:

	.org  0x000
	// Unrecoverable Exception.
_handle_Unrecoverable_Exception:
	rjmp $
80008600:	c0 08       	rjmp	80008600 <_evba>
	...

80008604 <_handle_TLB_Multiple_Hit>:

	.org  0x004
	// TLB Multiple Hit.
_handle_TLB_Multiple_Hit:
	rjmp $
80008604:	c0 08       	rjmp	80008604 <_handle_TLB_Multiple_Hit>
	...

80008608 <_handle_Bus_Error_Data_Fetch>:

	.org  0x008
	// Bus Error Data Fetch.
_handle_Bus_Error_Data_Fetch:
	rjmp $
80008608:	c0 08       	rjmp	80008608 <_handle_Bus_Error_Data_Fetch>
	...

8000860c <_handle_Bus_Error_Instruction_Fetch>:

	.org  0x00C
	// Bus Error Instruction Fetch.
_handle_Bus_Error_Instruction_Fetch:
	rjmp $
8000860c:	c0 08       	rjmp	8000860c <_handle_Bus_Error_Instruction_Fetch>
	...

80008610 <_handle_NMI>:

	.org  0x010
	// NMI.
_handle_NMI:
	rjmp $
80008610:	c0 08       	rjmp	80008610 <_handle_NMI>
	...

80008614 <_handle_Instruction_Address>:

	.org  0x014
	// Instruction Address.
_handle_Instruction_Address:
	rjmp $
80008614:	c0 08       	rjmp	80008614 <_handle_Instruction_Address>
	...

80008618 <_handle_ITLB_Protection>:

	.org  0x018
	// ITLB Protection.
_handle_ITLB_Protection:
	rjmp $
80008618:	c0 08       	rjmp	80008618 <_handle_ITLB_Protection>
	...

8000861c <_handle_Breakpoint>:

	.org  0x01C
	// Breakpoint.
_handle_Breakpoint:
	rjmp $
8000861c:	c0 08       	rjmp	8000861c <_handle_Breakpoint>
	...

80008620 <_handle_Illegal_Opcode>:

	.org  0x020
	// Illegal Opcode.
_handle_Illegal_Opcode:
	rjmp $
80008620:	c0 08       	rjmp	80008620 <_handle_Illegal_Opcode>
	...

80008624 <_handle_Unimplemented_Instruction>:

	.org  0x024
	// Unimplemented Instruction.
_handle_Unimplemented_Instruction:
	rjmp $
80008624:	c0 08       	rjmp	80008624 <_handle_Unimplemented_Instruction>
	...

80008628 <_handle_Privilege_Violation>:

	.org  0x028
	// Privilege Violation.
_handle_Privilege_Violation:
	rjmp $
80008628:	c0 08       	rjmp	80008628 <_handle_Privilege_Violation>
	...

8000862c <_handle_Floating_Point>:

	.org  0x02C
	// Floating-Point: UNUSED IN AVR32UC and AVR32AP.
_handle_Floating_Point:
	rjmp $
8000862c:	c0 08       	rjmp	8000862c <_handle_Floating_Point>
	...

80008630 <_handle_Coprocessor_Absent>:

	.org  0x030
	// Coprocessor Absent: UNUSED IN AVR32UC.
_handle_Coprocessor_Absent:
	rjmp $
80008630:	c0 08       	rjmp	80008630 <_handle_Coprocessor_Absent>
	...

80008634 <_handle_Data_Address_Read>:

	.org  0x034
	// Data Address (Read).
_handle_Data_Address_Read:
	rjmp $
80008634:	c0 08       	rjmp	80008634 <_handle_Data_Address_Read>
	...

80008638 <_handle_Data_Address_Write>:

	.org  0x038
	// Data Address (Write).
_handle_Data_Address_Write:
	rjmp $
80008638:	c0 08       	rjmp	80008638 <_handle_Data_Address_Write>
	...

8000863c <_handle_DTLB_Protection_Read>:

	.org  0x03C
	// DTLB Protection (Read).
_handle_DTLB_Protection_Read:
	rjmp $
8000863c:	c0 08       	rjmp	8000863c <_handle_DTLB_Protection_Read>
	...

80008640 <_handle_DTLB_Protection_Write>:

	.org  0x040
	// DTLB Protection (Write).
_handle_DTLB_Protection_Write:
	rjmp $
80008640:	c0 08       	rjmp	80008640 <_handle_DTLB_Protection_Write>
	...

80008644 <_handle_DTLB_Modified>:

	.org  0x044
	// DTLB Modified: UNUSED IN AVR32UC.
_handle_DTLB_Modified:
	rjmp $
80008644:	c0 08       	rjmp	80008644 <_handle_DTLB_Modified>
	...

80008650 <_handle_ITLB_Miss>:

	.org  0x050
	// ITLB Miss.
_handle_ITLB_Miss:
	rjmp $
80008650:	c0 08       	rjmp	80008650 <_handle_ITLB_Miss>
	...

80008660 <_handle_DTLB_Miss_Read>:

	.org  0x060
	// DTLB Miss (Read).
_handle_DTLB_Miss_Read:
	rjmp $
80008660:	c0 08       	rjmp	80008660 <_handle_DTLB_Miss_Read>
	...

80008670 <_handle_DTLB_Miss_Write>:

	.org  0x070
	// DTLB Miss (Write).
_handle_DTLB_Miss_Write:
	rjmp $
80008670:	c0 08       	rjmp	80008670 <_handle_DTLB_Miss_Write>
	...

80008700 <_handle_Supervisor_Call>:

	.org  0x100
	// Supervisor Call.
_handle_Supervisor_Call:
	rjmp $
80008700:	c0 08       	rjmp	80008700 <_handle_Supervisor_Call>
80008702:	d7 03       	nop

80008704 <_int0>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008704:	30 0c       	mov	r12,0
80008706:	fe b0 d1 e9 	rcall	80002ad8 <_get_interrupt_handler>
8000870a:	58 0c       	cp.w	r12,0
8000870c:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
80008710:	d6 03       	rete

80008712 <_int1>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008712:	30 1c       	mov	r12,1
80008714:	fe b0 d1 e2 	rcall	80002ad8 <_get_interrupt_handler>
80008718:	58 0c       	cp.w	r12,0
8000871a:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000871e:	d6 03       	rete

80008720 <_int2>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008720:	30 2c       	mov	r12,2
80008722:	fe b0 d1 db 	rcall	80002ad8 <_get_interrupt_handler>
80008726:	58 0c       	cp.w	r12,0
80008728:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000872c:	d6 03       	rete

8000872e <_int3>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
8000872e:	30 3c       	mov	r12,3
80008730:	fe b0 d1 d4 	rcall	80002ad8 <_get_interrupt_handler>
80008734:	58 0c       	cp.w	r12,0
80008736:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000873a:	d6 03       	rete
8000873c:	d7 03       	nop
8000873e:	d7 03       	nop
80008740:	d7 03       	nop
80008742:	d7 03       	nop
80008744:	d7 03       	nop
80008746:	d7 03       	nop
80008748:	d7 03       	nop
8000874a:	d7 03       	nop
8000874c:	d7 03       	nop
8000874e:	d7 03       	nop
80008750:	d7 03       	nop
80008752:	d7 03       	nop
80008754:	d7 03       	nop
80008756:	d7 03       	nop
80008758:	d7 03       	nop
8000875a:	d7 03       	nop
8000875c:	d7 03       	nop
8000875e:	d7 03       	nop
80008760:	d7 03       	nop
80008762:	d7 03       	nop
80008764:	d7 03       	nop
80008766:	d7 03       	nop
80008768:	d7 03       	nop
8000876a:	d7 03       	nop
8000876c:	d7 03       	nop
8000876e:	d7 03       	nop
80008770:	d7 03       	nop
80008772:	d7 03       	nop
80008774:	d7 03       	nop
80008776:	d7 03       	nop
80008778:	d7 03       	nop
8000877a:	d7 03       	nop
8000877c:	d7 03       	nop
8000877e:	d7 03       	nop
80008780:	d7 03       	nop
80008782:	d7 03       	nop
80008784:	d7 03       	nop
80008786:	d7 03       	nop
80008788:	d7 03       	nop
8000878a:	d7 03       	nop
8000878c:	d7 03       	nop
8000878e:	d7 03       	nop
80008790:	d7 03       	nop
80008792:	d7 03       	nop
80008794:	d7 03       	nop
80008796:	d7 03       	nop
80008798:	d7 03       	nop
8000879a:	d7 03       	nop
8000879c:	d7 03       	nop
8000879e:	d7 03       	nop
800087a0:	d7 03       	nop
800087a2:	d7 03       	nop
800087a4:	d7 03       	nop
800087a6:	d7 03       	nop
800087a8:	d7 03       	nop
800087aa:	d7 03       	nop
800087ac:	d7 03       	nop
800087ae:	d7 03       	nop
800087b0:	d7 03       	nop
800087b2:	d7 03       	nop
800087b4:	d7 03       	nop
800087b6:	d7 03       	nop
800087b8:	d7 03       	nop
800087ba:	d7 03       	nop
800087bc:	d7 03       	nop
800087be:	d7 03       	nop
800087c0:	d7 03       	nop
800087c2:	d7 03       	nop
800087c4:	d7 03       	nop
800087c6:	d7 03       	nop
800087c8:	d7 03       	nop
800087ca:	d7 03       	nop
800087cc:	d7 03       	nop
800087ce:	d7 03       	nop
800087d0:	d7 03       	nop
800087d2:	d7 03       	nop
800087d4:	d7 03       	nop
800087d6:	d7 03       	nop
800087d8:	d7 03       	nop
800087da:	d7 03       	nop
800087dc:	d7 03       	nop
800087de:	d7 03       	nop
800087e0:	d7 03       	nop
800087e2:	d7 03       	nop
800087e4:	d7 03       	nop
800087e6:	d7 03       	nop
800087e8:	d7 03       	nop
800087ea:	d7 03       	nop
800087ec:	d7 03       	nop
800087ee:	d7 03       	nop
800087f0:	d7 03       	nop
800087f2:	d7 03       	nop
800087f4:	d7 03       	nop
800087f6:	d7 03       	nop
800087f8:	d7 03       	nop
800087fa:	d7 03       	nop
800087fc:	d7 03       	nop
800087fe:	d7 03       	nop
